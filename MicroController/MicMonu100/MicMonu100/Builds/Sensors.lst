   1               		.file	"Sensors.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
 133               	.global	adc_init
 135               	adc_init:
   1:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //
   2:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //  Sensors.c
   3:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //  MicMonu100
   4:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //
   5:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //  Created by Manuel Deneu on 01/03/15.
   6:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //  Copyright (c) 2015 Manuel Deneu. All rights reserved.
   7:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //
   8:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
   9:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include <stdio.h>
  10:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include <avr/io.h>
  11:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include <util/delay.h>
  12:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  13:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include "Sensors.h"
  14:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  15:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include "PinsConfig.h"
  16:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include "quickblob.h"
  17:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  18:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include "Coms.h"
  19:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  20:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  21:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** // initialize adc
  22:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void adc_init(void)
  23:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 137               	.LM0:
 138               	.LFBB1:
 139               	/* prologue: function */
 140               	/* frame size = 0 */
 141               	/* stack size = 0 */
 142               	.L__stack_usage = 0
  24:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     // MICs LDR
  25:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  26:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setOutput( LDR_DATA_DDR       , LDR_DATA_PIN ); // data
 144               	.LM1:
 145 0000 579A      		sbi 0xa,7
  27:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setOutput( LDR_STROBE_DDR     , LDR_STROBE_PIN ); // strobe
 147               	.LM2:
 148 0002 6C9A      		sbi 0xd,4
  28:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setOutput( LDR_OUT_ENABLE_DDR , LDR_OUT_ENABLE_PIN ); // out enable
 150               	.LM3:
 151 0004 6B9A      		sbi 0xd,3
  29:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setOutput( LDR_CLOCK_DDR      , LDR_CLOCK_PIN ); // clock
 153               	.LM4:
 154 0006 539A      		sbi 0xa,3
  30:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  31:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  32:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     /* *** */
  33:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  34:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  35:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setLow(LDR_STROBE_PORT , LDR_STROBE_PIN ); // strobe mic LDR
 156               	.LM5:
 157 0008 7498      		cbi 0xe,4
  36:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  37:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setLow( LDR_CLOCK_PORT , LDR_CLOCK_PIN);
 159               	.LM6:
 160 000a 5B98      		cbi 0xb,3
  38:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  39:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setLow( LDR_OUT_ENABLE_PORT , LDR_OUT_ENABLE_PIN );
 162               	.LM7:
 163 000c 7398      		cbi 0xe,3
  40:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  41:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     //
  42:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  43:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setLow( LDR_DATA_PORT , LDR_DATA_PIN );
 165               	.LM8:
 166 000e 5F98      		cbi 0xb,7
 167 0010 80E1      		ldi r24,lo8(16)
 168 0012 90E0      		ldi r25,0
 169               	.L3:
 170               	.LBB32:
  44:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  45:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int i=0; i<16; i++)
  46:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         pulse( LDR_CLOCK_PORT , LDR_CLOCK_PIN);
 172               	.LM9:
 173 0014 5B9A      		sbi 0xb,3
 174 0016 5B98      		cbi 0xb,3
 175 0018 0197      		sbiw r24,1
  45:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int i=0; i<16; i++)
 177               	.LM10:
 178 001a 0097      		sbiw r24,0
 179 001c 01F4      		brne .L3
 180               	.LBE32:
  47:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  48:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  49:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     /*
  50:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****      setHigh( LDR_DATA_PORT , LDR_DATA_PIN );
  51:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****      
  52:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****      pulse( LDR_CLOCK_PORT , LDR_CLOCK_PIN);
  53:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****      */
  54:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  55:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  56:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     pulse(LDR_STROBE_PORT, LDR_STROBE_PIN);
 182               	.LM11:
 183 001e 749A      		sbi 0xe,4
 184 0020 7498      		cbi 0xe,4
  57:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  58:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  59:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     /* *** */
  60:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  61:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRA |= ((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0));
 186               	.LM12:
 187 0022 8091 7A00 		lds r24,122
 188 0026 8760      		ori r24,lo8(7)
 189 0028 8093 7A00 		sts 122,r24
  62:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  63:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADMUX |= (1<<REFS0);       //Set Voltage reference to Avcc (5v)
 191               	.LM13:
 192 002c 8091 7C00 		lds r24,124
 193 0030 8064      		ori r24,lo8(64)
 194 0032 8093 7C00 		sts 124,r24
  64:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  65:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRA |= (1<<ADEN);       //Turn on ADC
 196               	.LM14:
 197 0036 8091 7A00 		lds r24,122
 198 003a 8068      		ori r24,lo8(-128)
 199 003c 8093 7A00 		sts 122,r24
  66:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  67:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRA |= (1<<ADSC);
 201               	.LM15:
 202 0040 8091 7A00 		lds r24,122
 203 0044 8064      		ori r24,lo8(64)
 204 0046 8093 7A00 		sts 122,r24
 205 004a 0895      		ret
 207               	.Lscope1:
 211               	.global	sensors_setValuesTo
 213               	sensors_setValuesTo:
  68:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
  69:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  70:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
  71:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  72:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void sensors_init( Sensors *sensors)
  73:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
  74:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     adc_init();    
  75:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors_setValuesTo(sensors, 0);
  76:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors_resetCalibration( sensors );
  77:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  78:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  79:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
  80:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  81:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
  82:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  83:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void sensors_setValuesTo( Sensors *sensors , uint8_t val)
  84:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 215               	.LM16:
 216               	.LFBB2:
 217               	/* prologue: function */
 218               	/* frame size = 0 */
 219               	/* stack size = 0 */
 220               	.L__stack_usage = 0
 222               	.LM17:
 223 004c 4FE0      		ldi r20,lo8(15)
 224               	.L6:
 226               	.LM18:
 227 004e 20E0      		ldi r18,0
 228 0050 30E0      		ldi r19,0
 229               	.L9:
 230 0052 FC01      		movw r30,r24
 231 0054 E20F      		add r30,r18
 232 0056 F31F      		adc r31,r19
 233               	.LBB33:
 234               	.LBB34:
  85:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (uint8_t i =0; i<SENSOR_COUNT ; i++)
  86:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
  87:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for(uint8_t j = 0 ; j< MIC_SENSOR_COUNT ; j++)
  88:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             sensors->values[i][j] = val;
 236               	.LM19:
 237 0058 6083      		st Z,r22
 238 005a 2F5F      		subi r18,-1
 239 005c 3F4F      		sbci r19,-1
  87:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for(uint8_t j = 0 ; j< MIC_SENSOR_COUNT ; j++)
 241               	.LM20:
 242 005e 2F30      		cpi r18,15
 243 0060 3105      		cpc r19,__zero_reg__
 244 0062 01F4      		brne .L9
 245 0064 4150      		subi r20,lo8(-(-1))
 246 0066 0F96      		adiw r24,15
 247               	.LBE34:
  85:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (uint8_t i =0; i<SENSOR_COUNT ; i++)
 249               	.LM21:
 250 0068 4111      		cpse r20,__zero_reg__
 251 006a 00C0      		rjmp .L6
 252 006c 0895      		ret
 253               	.LBE33:
 255               	.Lscope2:
 261               	.global	sensors_reccordState
 263               	sensors_reccordState:
  89:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
  90:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  91:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
  92:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  93:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
  94:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  95:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void sensors_reccordState( Sensors *sensors , uint16_t thresholdLow , uint16_t thresholdHigh  ,uint
  96:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 265               	.LM22:
 266               	.LFBB3:
 267 006e 3F92      		push r3
 268 0070 4F92      		push r4
 269 0072 5F92      		push r5
 270 0074 6F92      		push r6
 271 0076 7F92      		push r7
 272 0078 8F92      		push r8
 273 007a 9F92      		push r9
 274 007c AF92      		push r10
 275 007e BF92      		push r11
 276 0080 CF92      		push r12
 277 0082 DF92      		push r13
 278 0084 EF92      		push r14
 279 0086 FF92      		push r15
 280 0088 0F93      		push r16
 281 008a 1F93      		push r17
 282 008c CF93      		push r28
 283 008e DF93      		push r29
 284               	/* prologue: function */
 285               	/* frame size = 0 */
 286               	/* stack size = 17 */
 287               	.L__stack_usage = 17
 288 0090 7C01      		movw r14,r24
 289 0092 5B01      		movw r10,r22
 290 0094 4A01      		movw r8,r20
 291               	.LBB35:
  97:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  98:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     uint8_t x = 0;
  99:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     uint8_t y = 0;
 100:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 101:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int j = 0; j<MIC_SENSOR_COUNT ; j++) // mics
 293               	.LM23:
 294 0096 00E0      		ldi r16,0
 295 0098 10E0      		ldi r17,0
 296               	.LBB36:
 297               	.LBB37:
 298               	.LBB38:
 299               	.LBB39:
 301               	.Ltext1:
   1:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** //
   2:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** //  Sensors.h
   3:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** //  MicMonu100
   4:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** //
   5:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** //  Created by Manuel Deneu on 01/03/15.
   6:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** //  Copyright (c) 2015 Manuel Deneu. All rights reserved.
   7:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** //
   8:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
   9:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** #include "Display.h"
  10:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  11:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** #ifndef MicMonu100_Sensors_h
  12:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** #define MicMonu100_Sensors_h
  13:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  14:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  15:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** #define SENSOR_COUNT     15
  16:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** #define MIC_SENSOR_COUNT 15
  17:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  18:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  19:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** #define MAX_DETECTION_POINTS 60
  20:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  21:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** struct _Sensors
  22:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** {
  23:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     uint8_t values     [ SENSOR_COUNT ][ MIC_SENSOR_COUNT ];
  24:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     uint8_t calibValues[ SENSOR_COUNT ][ MIC_SENSOR_COUNT ];
  25:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     
  26:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     uint8_t detected[ MAX_DETECTION_POINTS *2 ];
  27:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     uint8_t num_detected;
  28:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     
  29:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     Display* display;
  30:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     
  31:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     uint8_t currentRow; // blobdetection
  32:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     
  33:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     
  34:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** };
  35:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  36:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** typedef struct _Sensors Sensors;
  37:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  38:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** void sensors_init( Sensors *sensors);
  39:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  40:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** void sensors_setValuesTo( Sensors *sensors , uint8_t val);
  41:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  42:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  43:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** void test(Sensors *sensors);
  44:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** void sensors_reccordState( Sensors *sensors , uint16_t thresholdLow , uint16_t thresholdHigh ,uint8
  45:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  46:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** void sensors_resetCalibration( Sensors *sensors );
  47:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** void sensors_calibration( Sensors *sensors , uint8_t count);
  48:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  49:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** void computeCentroid( Sensors *sensors, uint8_t *x , uint8_t *y);
  50:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  51:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** void sensors_cleanDetected( Sensors *sensors);
  52:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  53:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** inline uint16_t adc_read(uint8_t channel)
  54:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** {
  55:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     
  56:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     ADMUX &= 0xE0;           //Clear bits MUX0-4
  57:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     ADMUX |= channel&0x07;   //Defines the new ADC channel to be read by setting bits MUX0-2
  58:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     ADCSRB = channel&(1<<3); //Set MUX5
 303               	.LM24:
 304 009a 38E0      		ldi r19,lo8(8)
 305 009c 332E      		mov r3,r19
 306               	.LBE39:
 307               	.LBE38:
 309               	.Ltext2:
 102:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 103:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         _delay_us( 10);
 104:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int i = 0; i < MIC_SENSOR_COUNT ; i++)
 105:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         {
 106:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 107:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             _delay_us( 10);
 108:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 109:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             if (i == 0)
 110:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 adc_read( 15 );
 111:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 112:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 113:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             const uint8_t read = (adc_read( i ) >> 4);
 114:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 115:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             uint8_t val = read - sensors->calibValues[i][j];
 116:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 117:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             /*
 118:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             if( mode == 0)
 119:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 val*=2;
 120:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             else if( mode == 1)
 121:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 val =  read >= threshold ? 127 :0 ;
 122:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 123:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             else if( mode == 2)
 124:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 val =  read >= threshold ? 0:255 ;
 125:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             */
 126:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 127:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             if ( read < thresholdLow)
 128:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 val = 127;
 129:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 130:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             else if ( read > thresholdHigh )
 131:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 val = 255;
 132:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 133:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             else
 134:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 val = 0;
 135:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 136:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             /*
 137:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             if ( val< (sensors->calibValues[i][j]*0.7) )
 138:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             {
 139:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 // ombre
 140:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 val = 127;
 141:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             }
 142:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 143:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             else if (val >  (sensors->calibValues[i][j]*1.1) ) //threshold)
 144:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             {
 145:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 //lum
 146:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 val = 255;
 147:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 
 148:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             }
 149:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             else
 150:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 val = 0;
 151:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****              */
 152:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 153:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             x = j*2;
 154:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             y = (14-i)*2;
 155:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 156:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             if ( (i != 0) && (i != 1) && (i != 2))
 157:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             //if ( val != sensors->values[i][j] )
 158:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             {
 159:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 sensors->values[i][j] = val;
 160:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 display_setFillColor( sensors->display, val );
 311               	.LM25:
 312 009e 6C01      		movw r12,r24
 313 00a0 85EC      		ldi r24,-59
 314 00a2 C81A      		sub r12,r24
 315 00a4 8DEF      		ldi r24,-3
 316 00a6 D80A      		sbc r13,r24
 317               	.L24:
 318               	.LBE37:
 319               	.LBE36:
 320               	.LBB47:
 321               	.LBB48:
 323               	.Ltext3:
   1:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   6:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   9:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  12:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      distribution.
  16:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  17:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  21:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  33:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* $Id$ */
  34:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  35:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  38:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  41:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  42:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  46:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \file */
  47:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \code
  49:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \endcode
  53:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  54:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     used.
  58:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  59:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  68:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  77:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  81:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** */
  82:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  83:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  87:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  88:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  93:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  94:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  97:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  98:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
 103:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 104:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /**
 105:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 107:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 109:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 112:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 114:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 120:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 125:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 129:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 132:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 140:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  */
 141:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** void
 142:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** {
 144:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	double __tmp ; 
 145:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 146:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 147:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 148:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 149:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 152:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 153:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 154:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 155:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 156:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 157:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 158:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#else
 159:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//round up by default
 160:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 161:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#endif
 162:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 163:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 164:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 165:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #else
 166:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint16_t __ticks;
 167:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 168:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 169:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks = 1;
 170:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 171:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	{
 172:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 173:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 174:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		while(__ticks)
 175:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		{
 176:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 			// wait 1/10 ms
 177:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 178:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 			__ticks --;
 179:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		}
 180:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		return;
 181:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	}
 182:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	else
 183:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 184:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 185:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
 186:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** }
 187:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 188:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /**
 189:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    \ingroup util_delay
 190:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 191:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
 192:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 193:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 194:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 195:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 196:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 197:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 198:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 199:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 200:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    will not be informed about this case.
 201:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 202:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 203:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 us/ F_CPU in MHz. For
 204:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflow results in
 205:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    no delay i.e., 0us.
 206:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   
 207:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 208:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 209:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 210:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 211:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 212:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    to round down and round to closest integer.
 213:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  
 214:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Note: The new implementation of _delay_us(double __us) with 
 215:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible.
 216:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 217:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Also, the backward compatible
 218:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 219:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 220:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 221:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 222:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  */
 223:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** void
 224:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** _delay_us(double __us)
 225:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** {
 226:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	double __tmp ; 
 227:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 228:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 229:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 230:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 231:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 232:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 233:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 234:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 235:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 236:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 237:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 238:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 239:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 240:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#else
 241:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//round up by default
 242:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 243:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#endif
 244:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 245:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 325               	.LM26:
 326 00a8 E5E3      		ldi r30,lo8(53)
 327 00aa EA95      		1: dec r30
 328 00ac 01F4      		brne 1b
 329 00ae 0000      		nop
 330 00b0 412C      		mov r4,__zero_reg__
 331 00b2 512C      		mov r5,__zero_reg__
 332               	.LBE48:
 333               	.LBE47:
 334               	.LBB49:
 336               	.Ltext4:
 104:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int i = 0; i < MIC_SENSOR_COUNT ; i++)
 338               	.LM27:
 339 00b4 C0E0      		ldi r28,0
 340 00b6 D0E0      		ldi r29,0
 341 00b8 3701      		movw r6,r14
 342 00ba 600E      		add r6,r16
 343 00bc 711E      		adc r7,r17
 344               	.L20:
 345               	.LBB46:
 346               	.LBB41:
 347               	.LBB42:
 349               	.Ltext5:
 351               	.LM28:
 352 00be F5E3      		ldi r31,lo8(53)
 353 00c0 FA95      		1: dec r31
 354 00c2 01F4      		brne 1b
 355 00c4 0000      		nop
 356               	.LBE42:
 357               	.LBE41:
 359               	.Ltext6:
 109:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             if (i == 0)
 361               	.LM29:
 362 00c6 2097      		sbiw r28,0
 363 00c8 01F4      		brne .L11
 364               	.LBB43:
 365               	.LBB40:
 367               	.Ltext7:
  56:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     ADMUX &= 0xE0;           //Clear bits MUX0-4
 369               	.LM30:
 370 00ca 8091 7C00 		lds r24,124
 371 00ce 807E      		andi r24,lo8(-32)
 372 00d0 8093 7C00 		sts 124,r24
  57:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     ADMUX |= channel&0x07;   //Defines the new ADC channel to be read by setting bits MUX0-2
 374               	.LM31:
 375 00d4 8091 7C00 		lds r24,124
 376 00d8 8760      		ori r24,lo8(7)
 377 00da 8093 7C00 		sts 124,r24
 379               	.LM32:
 380 00de 3092 7B00 		sts 123,r3
  59:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     ADCSRA |= (1<<ADSC);      //Starts a new conversion
 382               	.LM33:
 383 00e2 8091 7A00 		lds r24,122
 384 00e6 8064      		ori r24,lo8(64)
 385 00e8 8093 7A00 		sts 122,r24
 386               	.L13:
  60:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     
  61:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     while( ADCSRA & (1<<ADSC) );  //Wait until the conversion is done
 388               	.LM34:
 389 00ec 8091 7A00 		lds r24,122
 390 00f0 86FD      		sbrc r24,6
 391 00f2 00C0      		rjmp .L13
  62:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  63:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     return ADCW;
 393               	.LM35:
 394 00f4 8091 7800 		lds r24,120
 395 00f8 9091 7900 		lds r25,120+1
 396               	.L11:
 397               	.LBE40:
 398               	.LBE43:
 399               	.LBB44:
 400               	.LBB45:
  56:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     ADMUX &= 0xE0;           //Clear bits MUX0-4
 402               	.LM36:
 403 00fc 8091 7C00 		lds r24,124
 404 0100 807E      		andi r24,lo8(-32)
 405 0102 8093 7C00 		sts 124,r24
  57:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     ADMUX |= channel&0x07;   //Defines the new ADC channel to be read by setting bits MUX0-2
 407               	.LM37:
 408 0106 9091 7C00 		lds r25,124
 409 010a 8C2F      		mov r24,r28
 410 010c 8770      		andi r24,lo8(7)
 411 010e 892B      		or r24,r25
 412 0110 8093 7C00 		sts 124,r24
  58:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     ADCSRB = channel&(1<<3); //Set MUX5
 414               	.LM38:
 415 0114 8C2F      		mov r24,r28
 416 0116 8870      		andi r24,lo8(8)
 417 0118 8093 7B00 		sts 123,r24
  59:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     ADCSRA |= (1<<ADSC);      //Starts a new conversion
 419               	.LM39:
 420 011c 8091 7A00 		lds r24,122
 421 0120 8064      		ori r24,lo8(64)
 422 0122 8093 7A00 		sts 122,r24
 423               	.L15:
  61:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     while( ADCSRA & (1<<ADSC) );  //Wait until the conversion is done
 425               	.LM40:
 426 0126 8091 7A00 		lds r24,122
 427 012a 86FD      		sbrc r24,6
 428 012c 00C0      		rjmp .L15
 430               	.LM41:
 431 012e 8091 7800 		lds r24,120
 432 0132 9091 7900 		lds r25,120+1
 433               	.LBE45:
 434               	.LBE44:
 436               	.Ltext8:
 113:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             const uint8_t read = (adc_read( i ) >> 4);
 438               	.LM42:
 439 0136 24E0      		ldi r18,4
 440               		1:
 441 0138 9695      		lsr r25
 442 013a 8795      		ror r24
 443 013c 2A95      		dec r18
 444 013e 01F4      		brne 1b
 127:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             if ( read < thresholdLow)
 446               	.LM43:
 447 0140 9927      		clr r25
 448 0142 8A15      		cp r24,r10
 449 0144 9B05      		cpc r25,r11
 450 0146 00F0      		brlo .L25
 130:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             else if ( read > thresholdHigh )
 452               	.LM44:
 453 0148 61E0      		ldi r22,lo8(1)
 454 014a 8816      		cp r8,r24
 455 014c 9906      		cpc r9,r25
 456 014e 00F0      		brlo .L17
 457 0150 60E0      		ldi r22,0
 458               	.L17:
 459 0152 6195      		neg r22
 460 0154 00C0      		rjmp .L16
 461               	.L25:
 128:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 val = 127;
 463               	.LM45:
 464 0156 6FE7      		ldi r22,lo8(127)
 465               	.L16:
 156:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             if ( (i != 0) && (i != 1) && (i != 2))
 467               	.LM46:
 468 0158 C330      		cpi r28,3
 469 015a D105      		cpc r29,__zero_reg__
 470 015c 00F0      		brlo .L18
 471 015e F301      		movw r30,r6
 472 0160 E40D      		add r30,r4
 473 0162 F51D      		adc r31,r5
 159:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 sensors->values[i][j] = val;
 475               	.LM47:
 476 0164 6083      		st Z,r22
 478               	.LM48:
 479 0166 F601      		movw r30,r12
 480 0168 8081      		ld r24,Z
 481 016a 9181      		ldd r25,Z+1
 482 016c 0E94 0000 		call display_setFillColor
 483               	.L18:
 484               	.LBE46:
 104:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int i = 0; i < MIC_SENSOR_COUNT ; i++)
 486               	.LM49:
 487 0170 2196      		adiw r28,1
 488 0172 FFE0      		ldi r31,15
 489 0174 4F0E      		add r4,r31
 490 0176 511C      		adc r5,__zero_reg__
 491 0178 CF30      		cpi r28,15
 492 017a D105      		cpc r29,__zero_reg__
 493 017c 01F0      		breq .+2
 494 017e 00C0      		rjmp .L20
 495               	.LBE49:
 161:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //                display_fillZone( sensors->display , x, y , 2, 2);
 162:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             }
 163:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 164:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 165:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 166:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         }
 167:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 168:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 169:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         if (j== (MIC_SENSOR_COUNT-1) )
 497               	.LM50:
 498 0180 0E30      		cpi r16,14
 499 0182 1105      		cpc r17,__zero_reg__
 500 0184 01F4      		brne .L21
 170:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         {
 171:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             setHigh( LDR_DATA_PORT , LDR_DATA_PIN );
 502               	.LM51:
 503 0186 5F9A      		sbi 0xb,7
 504 0188 00C0      		rjmp .L22
 505               	.L21:
 172:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         }
 173:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         else
 174:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         {
 175:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             setLow( LDR_DATA_PORT , LDR_DATA_PIN );
 507               	.LM52:
 508 018a 5F98      		cbi 0xb,7
 509               	.L22:
 176:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         }
 177:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 178:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         pulse( LDR_CLOCK_PORT , LDR_CLOCK_PIN);
 511               	.LM53:
 512 018c 5B9A      		sbi 0xb,3
 513 018e 5B98      		cbi 0xb,3
 179:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         pulse( LDR_STROBE_PORT, LDR_STROBE_PIN);
 515               	.LM54:
 516 0190 749A      		sbi 0xe,4
 517 0192 7498      		cbi 0xe,4
 101:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int j = 0; j<MIC_SENSOR_COUNT ; j++) // mics
 519               	.LM55:
 520 0194 0F5F      		subi r16,-1
 521 0196 1F4F      		sbci r17,-1
 522 0198 0F30      		cpi r16,15
 523 019a 1105      		cpc r17,__zero_reg__
 524 019c 01F0      		breq .+2
 525 019e 00C0      		rjmp .L24
 526               	/* epilogue start */
 527               	.LBE35:
 180:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 181:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 182:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 183:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 184:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //    extract_image( sensors );
 185:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 186:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 529               	.LM56:
 530 01a0 DF91      		pop r29
 531 01a2 CF91      		pop r28
 532 01a4 1F91      		pop r17
 533 01a6 0F91      		pop r16
 534 01a8 FF90      		pop r15
 535 01aa EF90      		pop r14
 536 01ac DF90      		pop r13
 537 01ae CF90      		pop r12
 538 01b0 BF90      		pop r11
 539 01b2 AF90      		pop r10
 540 01b4 9F90      		pop r9
 541 01b6 8F90      		pop r8
 542 01b8 7F90      		pop r7
 543 01ba 6F90      		pop r6
 544 01bc 5F90      		pop r5
 545 01be 4F90      		pop r4
 546 01c0 3F90      		pop r3
 547 01c2 0895      		ret
 564               	.Lscope3:
 567               	.global	sensors_resetCalibration
 569               	sensors_resetCalibration:
 187:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 188:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 189:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 190:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void sensors_resetCalibration( Sensors *sensors )
 191:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 571               	.LM57:
 572               	.LFBB4:
 573               	/* prologue: function */
 574               	/* frame size = 0 */
 575               	/* stack size = 0 */
 576               	.L__stack_usage = 0
 577               	.LBB50:
 192:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int j = 0; j<MIC_SENSOR_COUNT ; j++) // mics
 579               	.LM58:
 580 01c4 20E0      		ldi r18,0
 581 01c6 30E0      		ldi r19,0
 582               	.L27:
 583               	.LBE50:
 191:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 585               	.LM59:
 586 01c8 40E0      		ldi r20,0
 587 01ca 50E0      		ldi r21,0
 588 01cc BC01      		movw r22,r24
 589 01ce 620F      		add r22,r18
 590 01d0 731F      		adc r23,r19
 591               	.L30:
 592 01d2 FB01      		movw r30,r22
 593 01d4 E40F      		add r30,r20
 594 01d6 F51F      		adc r31,r21
 595 01d8 EF51      		subi r30,31
 596 01da FF4F      		sbci r31,-1
 597               	.LBB52:
 598               	.LBB51:
 193:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 194:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 195:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int i = 0; i < MIC_SENSOR_COUNT ; i++)
 196:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         {
 197:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             sensors->calibValues[i][j] = 0;
 600               	.LM60:
 601 01dc 1082      		st Z,__zero_reg__
 602 01de 415F      		subi r20,-15
 603 01e0 5F4F      		sbci r21,-1
 195:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int i = 0; i < MIC_SENSOR_COUNT ; i++)
 605               	.LM61:
 606 01e2 413E      		cpi r20,-31
 607 01e4 5105      		cpc r21,__zero_reg__
 608 01e6 01F4      		brne .L30
 609               	.LBE51:
 192:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int j = 0; j<MIC_SENSOR_COUNT ; j++) // mics
 611               	.LM62:
 612 01e8 2F5F      		subi r18,-1
 613 01ea 3F4F      		sbci r19,-1
 614 01ec 2F30      		cpi r18,15
 615 01ee 3105      		cpc r19,__zero_reg__
 616 01f0 01F4      		brne .L27
 617 01f2 0895      		ret
 618               	.LBE52:
 626               	.Lscope4:
 629               	.global	sensors_init
 631               	sensors_init:
  73:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 633               	.LM63:
 634               	.LFBB5:
 635 01f4 CF93      		push r28
 636 01f6 DF93      		push r29
 637               	/* prologue: function */
 638               	/* frame size = 0 */
 639               	/* stack size = 2 */
 640               	.L__stack_usage = 2
 641 01f8 EC01      		movw r28,r24
  74:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     adc_init();    
 643               	.LM64:
 644 01fa 0E94 0000 		call adc_init
  75:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors_setValuesTo(sensors, 0);
 646               	.LM65:
 647 01fe 60E0      		ldi r22,0
 648 0200 CE01      		movw r24,r28
 649 0202 0E94 0000 		call sensors_setValuesTo
  76:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors_resetCalibration( sensors );
 651               	.LM66:
 652 0206 CE01      		movw r24,r28
 653               	/* epilogue start */
  79:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 655               	.LM67:
 656 0208 DF91      		pop r29
 657 020a CF91      		pop r28
  76:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors_resetCalibration( sensors );
 659               	.LM68:
 660 020c 0C94 0000 		jmp sensors_resetCalibration
 662               	.Lscope5:
 666               	.global	sensors_calibration
 668               	sensors_calibration:
 198:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         }
 199:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 200:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 201:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 202:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 203:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 204:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 205:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void sensors_calibration( Sensors *sensors , uint8_t count)
 206:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 670               	.LM69:
 671               	.LFBB6:
 672 0210 2F92      		push r2
 673 0212 3F92      		push r3
 674 0214 4F92      		push r4
 675 0216 5F92      		push r5
 676 0218 6F92      		push r6
 677 021a 7F92      		push r7
 678 021c 8F92      		push r8
 679 021e 9F92      		push r9
 680 0220 AF92      		push r10
 681 0222 BF92      		push r11
 682 0224 CF92      		push r12
 683 0226 DF92      		push r13
 684 0228 EF92      		push r14
 685 022a FF92      		push r15
 686 022c 0F93      		push r16
 687 022e 1F93      		push r17
 688 0230 CF93      		push r28
 689 0232 DF93      		push r29
 690 0234 CDB7      		in r28,__SP_L__
 691 0236 DEB7      		in r29,__SP_H__
 692 0238 C65C      		subi r28,-58
 693 023a D140      		sbci r29,1
 694 023c 0FB6      		in __tmp_reg__,__SREG__
 695 023e F894      		cli
 696 0240 DEBF      		out __SP_H__,r29
 697 0242 0FBE      		out __SREG__,__tmp_reg__
 698 0244 CDBF      		out __SP_L__,r28
 699               	/* prologue: function */
 700               	/* frame size = 454 */
 701               	/* stack size = 472 */
 702               	.L__stack_usage = 472
 703 0246 5C01      		movw r10,r24
 704 0248 362E      		mov r3,r22
 207:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors_resetCalibration( sensors );
 706               	.LM70:
 707 024a 0E94 0000 		call sensors_resetCalibration
 708               	.LBB53:
 208:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 209:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     int temp[ SENSOR_COUNT ][ MIC_SENSOR_COUNT ];
 210:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 211:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 212:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for ( uint8_t iter = 0; iter < count ; iter++)
 710               	.LM71:
 711 024e 40E0      		ldi r20,0
 712               	.LBB54:
 713               	.LBB55:
 714               	.LBB56:
 715               	.LBB57:
 717               	.Ltext9:
  58:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     ADCSRB = channel&(1<<3); //Set MUX5
 719               	.LM72:
 720 0250 68E0      		ldi r22,lo8(8)
 721 0252 262E      		mov r2,r22
 722               	.LBE57:
 723               	.LBE56:
 725               	.Ltext10:
 213:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 214:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int j = 0; j<MIC_SENSOR_COUNT ; j++) // mics
 215:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         {
 216:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 217:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             for (int i = 0; i < MIC_SENSOR_COUNT ; i++)
 218:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             {
 219:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 if (i == 0) adc_read( 15 );
 220:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 
 221:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 if (iter == 0)
 222:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                     temp[i][j] = 0;
 223:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 
 224:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 temp[i][j] += adc_read( i ) >> 4;
 225:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 
 226:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 if( iter == count-1)
 727               	.LM73:
 728 0254 632C      		mov r6,r3
 729 0256 712C      		mov r7,__zero_reg__
 730 0258 B301      		movw r22,r6
 731 025a 6150      		subi r22,1
 732 025c 7109      		sbc r23,__zero_reg__
 733 025e CB53      		subi r28,lo8(-453)
 734 0260 DE4F      		sbci r29,hi8(-453)
 735 0262 7983      		std Y+1,r23
 736 0264 6883      		st Y,r22
 737 0266 C55C      		subi r28,lo8(453)
 738 0268 D140      		sbci r29,hi8(453)
 739               	.L33:
 740               	.LBE55:
 741               	.LBE54:
 212:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for ( uint8_t iter = 0; iter < count ; iter++)
 743               	.LM74:
 744 026a 4315      		cp r20,r3
 745 026c 01F4      		brne .+2
 746 026e 00C0      		rjmp .L32
 747 0270 CE01      		movw r24,r28
 748 0272 0196      		adiw r24,1
 749 0274 7C01      		movw r14,r24
 212:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for ( uint8_t iter = 0; iter < count ; iter++)
 751               	.LM75:
 752 0276 E0E0      		ldi r30,0
 753 0278 F0E0      		ldi r31,0
 754               	.LBB64:
 755               	.LBB62:
 757               	.LM76:
 758 027a A42F      		mov r26,r20
 759 027c B0E0      		ldi r27,0
 760 027e CD53      		subi r28,lo8(-451)
 761 0280 DE4F      		sbci r29,hi8(-451)
 762 0282 B983      		std Y+1,r27
 763 0284 A883      		st Y,r26
 764 0286 C35C      		subi r28,lo8(451)
 765 0288 D140      		sbci r29,hi8(451)
 766               	.L48:
 767               	.LBE62:
 768               	.LBE64:
 769               	.LBE53:
 206:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 771               	.LM77:
 772 028a 812C      		mov r8,__zero_reg__
 773 028c 912C      		mov r9,__zero_reg__
 774 028e C12C      		mov r12,__zero_reg__
 775 0290 D12C      		mov r13,__zero_reg__
 776 0292 20E0      		ldi r18,0
 777 0294 30E0      		ldi r19,0
 778 0296 2501      		movw r4,r10
 779 0298 4E0E      		add r4,r30
 780 029a 5F1E      		adc r5,r31
 781               	.L46:
 782               	.LBB66:
 783               	.LBB65:
 784               	.LBB63:
 219:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 if (i == 0) adc_read( 15 );
 786               	.LM78:
 787 029c 2115      		cp r18,__zero_reg__
 788 029e 3105      		cpc r19,__zero_reg__
 789 02a0 01F4      		brne .L34
 790               	.LBB59:
 791               	.LBB58:
 793               	.Ltext11:
  56:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     ADMUX &= 0xE0;           //Clear bits MUX0-4
 795               	.LM79:
 796 02a2 8091 7C00 		lds r24,124
 797 02a6 807E      		andi r24,lo8(-32)
 798 02a8 8093 7C00 		sts 124,r24
  57:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     ADMUX |= channel&0x07;   //Defines the new ADC channel to be read by setting bits MUX0-2
 800               	.LM80:
 801 02ac 8091 7C00 		lds r24,124
 802 02b0 8760      		ori r24,lo8(7)
 803 02b2 8093 7C00 		sts 124,r24
  58:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     ADCSRB = channel&(1<<3); //Set MUX5
 805               	.LM81:
 806 02b6 2092 7B00 		sts 123,r2
  59:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     ADCSRA |= (1<<ADSC);      //Starts a new conversion
 808               	.LM82:
 809 02ba 8091 7A00 		lds r24,122
 810 02be 8064      		ori r24,lo8(64)
 811 02c0 8093 7A00 		sts 122,r24
 812               	.L36:
  61:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     while( ADCSRA & (1<<ADSC) );  //Wait until the conversion is done
 814               	.LM83:
 815 02c4 8091 7A00 		lds r24,122
 816 02c8 86FD      		sbrc r24,6
 817 02ca 00C0      		rjmp .L36
 819               	.LM84:
 820 02cc 8091 7800 		lds r24,120
 821 02d0 9091 7900 		lds r25,120+1
 822               	.L34:
 823 02d4 8701      		movw r16,r14
 824 02d6 0C0D      		add r16,r12
 825 02d8 1D1D      		adc r17,r13
 826               	.LBE58:
 827               	.LBE59:
 829               	.Ltext12:
 221:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 if (iter == 0)
 831               	.LM85:
 832 02da 4111      		cpse r20,__zero_reg__
 833 02dc 00C0      		rjmp .L37
 222:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                     temp[i][j] = 0;
 835               	.LM86:
 836 02de D801      		movw r26,r16
 837 02e0 1D92      		st X+,__zero_reg__
 838 02e2 1C92      		st X,__zero_reg__
 839               	.L37:
 224:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 temp[i][j] += adc_read( i ) >> 4;
 841               	.LM87:
 842 02e4 D801      		movw r26,r16
 843 02e6 6D91      		ld r22,X+
 844 02e8 7C91      		ld r23,X
 845               	.LBB60:
 846               	.LBB61:
 848               	.Ltext13:
  56:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     ADMUX &= 0xE0;           //Clear bits MUX0-4
 850               	.LM88:
 851 02ea 8091 7C00 		lds r24,124
 852 02ee 807E      		andi r24,lo8(-32)
 853 02f0 8093 7C00 		sts 124,r24
  57:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     ADMUX |= channel&0x07;   //Defines the new ADC channel to be read by setting bits MUX0-2
 855               	.LM89:
 856 02f4 9091 7C00 		lds r25,124
 857 02f8 822F      		mov r24,r18
 858 02fa 8770      		andi r24,lo8(7)
 859 02fc 892B      		or r24,r25
 860 02fe 8093 7C00 		sts 124,r24
  58:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     ADCSRB = channel&(1<<3); //Set MUX5
 862               	.LM90:
 863 0302 822F      		mov r24,r18
 864 0304 8870      		andi r24,lo8(8)
 865 0306 8093 7B00 		sts 123,r24
  59:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     ADCSRA |= (1<<ADSC);      //Starts a new conversion
 867               	.LM91:
 868 030a 8091 7A00 		lds r24,122
 869 030e 8064      		ori r24,lo8(64)
 870 0310 8093 7A00 		sts 122,r24
 871               	.L39:
  61:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     while( ADCSRA & (1<<ADSC) );  //Wait until the conversion is done
 873               	.LM92:
 874 0314 8091 7A00 		lds r24,122
 875 0318 86FD      		sbrc r24,6
 876 031a 00C0      		rjmp .L39
 878               	.LM93:
 879 031c 8091 7800 		lds r24,120
 880 0320 9091 7900 		lds r25,120+1
 881               	.LBE61:
 882               	.LBE60:
 884               	.Ltext14:
 224:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 temp[i][j] += adc_read( i ) >> 4;
 886               	.LM94:
 887 0324 54E0      		ldi r21,4
 888               		1:
 889 0326 9695      		lsr r25
 890 0328 8795      		ror r24
 891 032a 5A95      		dec r21
 892 032c 01F4      		brne 1b
 893 032e 860F      		add r24,r22
 894 0330 971F      		adc r25,r23
 896               	.LM95:
 897 0332 CD53      		subi r28,lo8(-451)
 898 0334 DE4F      		sbci r29,hi8(-451)
 899 0336 6881      		ld r22,Y
 900 0338 7981      		ldd r23,Y+1
 901 033a C35C      		subi r28,lo8(451)
 902 033c D140      		sbci r29,hi8(451)
 903 033e CB53      		subi r28,lo8(-453)
 904 0340 DE4F      		sbci r29,hi8(-453)
 905 0342 A881      		ld r26,Y
 906 0344 B981      		ldd r27,Y+1
 907 0346 C55C      		subi r28,lo8(453)
 908 0348 D140      		sbci r29,hi8(453)
 909 034a 6A17      		cp r22,r26
 910 034c 7B07      		cpc r23,r27
 911 034e 01F0      		breq .L40
 224:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 temp[i][j] += adc_read( i ) >> 4;
 913               	.LM96:
 914 0350 D801      		movw r26,r16
 915 0352 8D93      		st X+,r24
 916 0354 9C93      		st X,r25
 917 0356 00C0      		rjmp .L41
 918               	.L40:
 227:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 {
 228:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                     temp[i][j] /= count;
 920               	.LM97:
 921 0358 B301      		movw r22,r6
 922 035a 0E94 0000 		call __divmodhi4
 923 035e D801      		movw r26,r16
 924 0360 6C93      		st X,r22
 925 0362 1196      		adiw r26,1
 926 0364 7C93      		st X,r23
 927 0366 D201      		movw r26,r4
 928 0368 A80D      		add r26,r8
 929 036a B91D      		adc r27,r9
 930 036c AF51      		subi r26,31
 931 036e BF4F      		sbci r27,-1
 229:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                     sensors->calibValues[i][j] = (uint8_t) temp[i][j];
 933               	.LM98:
 934 0370 6C93      		st X,r22
 935               	.L41:
 217:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             for (int i = 0; i < MIC_SENSOR_COUNT ; i++)
 937               	.LM99:
 938 0372 2F5F      		subi r18,-1
 939 0374 3F4F      		sbci r19,-1
 940 0376 BEE1      		ldi r27,30
 941 0378 CB0E      		add r12,r27
 942 037a D11C      		adc r13,__zero_reg__
 943 037c 6FE0      		ldi r22,15
 944 037e 860E      		add r8,r22
 945 0380 911C      		adc r9,__zero_reg__
 946 0382 2F30      		cpi r18,15
 947 0384 3105      		cpc r19,__zero_reg__
 948 0386 01F0      		breq .+2
 949 0388 00C0      		rjmp .L46
 950               	.LBE63:
 230:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 }
 231:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             }
 232:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 233:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 234:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             if (j== (MIC_SENSOR_COUNT-1) )
 952               	.LM100:
 953 038a EE30      		cpi r30,14
 954 038c F105      		cpc r31,__zero_reg__
 955 038e 01F4      		brne .L43
 235:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             {
 236:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 setHigh( LDR_DATA_PORT , LDR_DATA_PIN );
 957               	.LM101:
 958 0390 5F9A      		sbi 0xb,7
 959 0392 00C0      		rjmp .L44
 960               	.L43:
 237:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             }
 238:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             else
 239:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             {
 240:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 setLow( LDR_DATA_PORT , LDR_DATA_PIN );
 962               	.LM102:
 963 0394 5F98      		cbi 0xb,7
 964               	.L44:
 241:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             }
 242:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 243:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             pulse( LDR_CLOCK_PORT , LDR_CLOCK_PIN);
 966               	.LM103:
 967 0396 5B9A      		sbi 0xb,3
 968 0398 5B98      		cbi 0xb,3
 244:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 245:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             pulse( LDR_STROBE_PORT, LDR_STROBE_PIN);
 970               	.LM104:
 971 039a 749A      		sbi 0xe,4
 972 039c 7498      		cbi 0xe,4
 214:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int j = 0; j<MIC_SENSOR_COUNT ; j++) // mics
 974               	.LM105:
 975 039e 3196      		adiw r30,1
 976 03a0 72E0      		ldi r23,2
 977 03a2 E70E      		add r14,r23
 978 03a4 F11C      		adc r15,__zero_reg__
 979 03a6 EF30      		cpi r30,15
 980 03a8 F105      		cpc r31,__zero_reg__
 981 03aa 01F0      		breq .+2
 982 03ac 00C0      		rjmp .L48
 983               	.LBE65:
 212:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for ( uint8_t iter = 0; iter < count ; iter++)
 985               	.LM106:
 986 03ae 4F5F      		subi r20,lo8(-(1))
 987 03b0 00C0      		rjmp .L33
 988               	.L32:
 989               	/* epilogue start */
 990               	.LBE66:
 246:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 247:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         }
 248:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 249:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 250:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 251:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 992               	.LM107:
 993 03b2 CA53      		subi r28,58
 994 03b4 DE4F      		sbci r29,-2
 995 03b6 0FB6      		in __tmp_reg__,__SREG__
 996 03b8 F894      		cli
 997 03ba DEBF      		out __SP_H__,r29
 998 03bc 0FBE      		out __SREG__,__tmp_reg__
 999 03be CDBF      		out __SP_L__,r28
 1000 03c0 DF91      		pop r29
 1001 03c2 CF91      		pop r28
 1002 03c4 1F91      		pop r17
 1003 03c6 0F91      		pop r16
 1004 03c8 FF90      		pop r15
 1005 03ca EF90      		pop r14
 1006 03cc DF90      		pop r13
 1007 03ce CF90      		pop r12
 1008 03d0 BF90      		pop r11
 1009 03d2 AF90      		pop r10
 1010 03d4 9F90      		pop r9
 1011 03d6 8F90      		pop r8
 1012 03d8 7F90      		pop r7
 1013 03da 6F90      		pop r6
 1014 03dc 5F90      		pop r5
 1015 03de 4F90      		pop r4
 1016 03e0 3F90      		pop r3
 1017 03e2 2F90      		pop r2
 1018 03e4 0895      		ret
 1047               	.Lscope6:
 1050               	.global	sensors_cleanDetected
 1052               	sensors_cleanDetected:
 252:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 253:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void sensors_cleanDetected( Sensors *sensors)
 254:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 1054               	.LM108:
 1055               	.LFBB7:
 1056               	/* prologue: function */
 1057               	/* frame size = 0 */
 1058               	/* stack size = 0 */
 1059               	.L__stack_usage = 0
 255:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->num_detected = 0;
 1061               	.LM109:
 1062 03e6 865C      		subi r24,-58
 1063 03e8 9D4F      		sbci r25,-3
 1064 03ea FC01      		movw r30,r24
 1065 03ec 1082      		st Z,__zero_reg__
 1066 03ee 0895      		ret
 1068               	.Lscope7:
 1071               	.global	test
 1073               	test:
 256:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 257:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 258:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 259:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void test(Sensors *sensors)
 260:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 1075               	.LM110:
 1076               	.LFBB8:
 1077               	/* prologue: function */
 1078               	/* frame size = 0 */
 1079               	/* stack size = 0 */
 1080               	.L__stack_usage = 0
 261:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     extract_image( sensors );
 1082               	.LM111:
 1083 03f0 0C94 0000 		jmp extract_image
 1085               	.Lscope8:
 1086               	.global	__ltsf2
 1087               	.global	__addsf3
 1088               	.global	__fixunssfsi
 1089               	.global	__subsf3
 1093               	.global	log_blob_hook
 1095               	log_blob_hook:
 262:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 263:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 264:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 265:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 266:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 267:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 268:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void log_blob_hook(void* user_struct, struct blob* b)
 269:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 1097               	.LM112:
 1098               	.LFBB9:
 1099 03f4 8F92      		push r8
 1100 03f6 9F92      		push r9
 1101 03f8 AF92      		push r10
 1102 03fa BF92      		push r11
 1103 03fc CF92      		push r12
 1104 03fe DF92      		push r13
 1105 0400 EF92      		push r14
 1106 0402 FF92      		push r15
 1107 0404 0F93      		push r16
 1108 0406 1F93      		push r17
 1109 0408 CF93      		push r28
 1110 040a DF93      		push r29
 1111               	/* prologue: function */
 1112               	/* frame size = 0 */
 1113               	/* stack size = 12 */
 1114               	.L__stack_usage = 12
 1115 040c 8C01      		movw r16,r24
 1116 040e EB01      		movw r28,r22
 270:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     if ( (b->center_x <0 ) || (b->center_y <0 ))
 1118               	.LM113:
 1119 0410 CA88      		ldd r12,Y+18
 1120 0412 DB88      		ldd r13,Y+19
 1121 0414 EC88      		ldd r14,Y+20
 1122 0416 FD88      		ldd r15,Y+21
 1123 0418 20E0      		ldi r18,0
 1124 041a 30E0      		ldi r19,0
 1125 041c A901      		movw r20,r18
 1126 041e C701      		movw r24,r14
 1127 0420 B601      		movw r22,r12
 1128 0422 0E94 0000 		call __ltsf2
 1129 0426 87FD      		sbrc r24,7
 1130 0428 00C0      		rjmp .L51
 1132               	.LM114:
 1133 042a 8E88      		ldd r8,Y+22
 1134 042c 9F88      		ldd r9,Y+23
 1135 042e A88C      		ldd r10,Y+24
 1136 0430 B98C      		ldd r11,Y+25
 1137 0432 20E0      		ldi r18,0
 1138 0434 30E0      		ldi r19,0
 1139 0436 A901      		movw r20,r18
 1140 0438 C501      		movw r24,r10
 1141 043a B401      		movw r22,r8
 1142 043c 0E94 0000 		call __ltsf2
 1143 0440 87FD      		sbrc r24,7
 1144 0442 00C0      		rjmp .L51
 271:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         return;
 272:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 273:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     const uint8_t x = b->center_x*2;
 1146               	.LM115:
 1147 0444 A701      		movw r20,r14
 1148 0446 9601      		movw r18,r12
 1149 0448 C701      		movw r24,r14
 1150 044a B601      		movw r22,r12
 1151 044c 0E94 0000 		call __addsf3
 1152 0450 0E94 0000 		call __fixunssfsi
 1153 0454 F62E      		mov r15,r22
 274:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     const uint8_t y = (14-b->center_y)*2;
 275:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 276:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     if ( (x >30) || (y>30 ) )
 1155               	.LM116:
 1156 0456 8EE1      		ldi r24,lo8(30)
 1157 0458 8F15      		cp r24,r15
 1158 045a 00F4      		brsh .+2
 1159 045c 00C0      		rjmp .L51
 274:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     const uint8_t y = (14-b->center_y)*2;
 1161               	.LM117:
 1162 045e A501      		movw r20,r10
 1163 0460 9401      		movw r18,r8
 1164 0462 60E0      		ldi r22,0
 1165 0464 70E0      		ldi r23,0
 1166 0466 80E6      		ldi r24,lo8(96)
 1167 0468 91E4      		ldi r25,lo8(65)
 1168 046a 0E94 0000 		call __subsf3
 1169 046e 9B01      		movw r18,r22
 1170 0470 AC01      		movw r20,r24
 1171 0472 0E94 0000 		call __addsf3
 1172 0476 0E94 0000 		call __fixunssfsi
 1173 047a E62E      		mov r14,r22
 1175               	.LM118:
 1176 047c 9EE1      		ldi r25,lo8(30)
 1177 047e 9E15      		cp r25,r14
 1178 0480 00F0      		brlo .L51
 1179               	.L54:
 1180               	.LBB67:
 1181               	.LBB68:
 1183               	.Ltext15:
   1:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** //
   2:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** //  Coms.h
   3:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** //  MicMonu100
   4:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** //
   5:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** //  Created by Manuel Deneu on 08/05/15.
   6:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** //  Copyright (c) 2015 Manuel Deneu. All rights reserved.
   7:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** //
   8:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** 
   9:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** #ifndef MicMonu100_Coms_h
  10:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** #define MicMonu100_Coms_h
  11:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** 
  12:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** #define USART_BAUDRATE  19200
  13:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** #define UBRR_VALUE ((( 8000000 / (USART_BAUDRATE * 16UL))) - 1)
  14:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** 
  15:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** inline void serial_init(void)
  16:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** {
  17:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h ****     // Set baud rate
  18:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h ****     UBRR0H = (uint8_t)(UBRR_VALUE>>8);
  19:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h ****     UBRR0L = (uint8_t)UBRR_VALUE;
  20:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h ****     // Set frame format to 8 data bits, no parity, 1 stop bit
  21:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h ****     UCSR0C |= (1<<UCSZ01)|(1<<UCSZ00); //|(1<<UMSEL00);
  22:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h ****     //enable transmission and reception
  23:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h ****     UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
  24:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** }
  25:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** 
  26:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** inline void serial_send(uint8_t u8Data)
  27:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** {
  28:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** 
  29:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h ****     while( !(UCSR0A & ( 1 << UDRE0 ) ) )
 1185               	.LM119:
 1186 0482 8091 C000 		lds r24,192
 1187 0486 85FF      		sbrs r24,5
 1188 0488 00C0      		rjmp .L54
  30:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h ****     {};
  31:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h **** 
  32:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h ****     
  33:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h ****     
  34:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h ****     UDR0 = u8Data;
 1190               	.LM120:
 1191 048a 8AE0      		ldi r24,lo8(10)
 1192 048c 8093 C600 		sts 198,r24
 1193               	.LBE68:
 1194               	.LBE67:
 1195               	.LBB69:
 1196               	.LBB70:
 1198               	.Ltext16:
 1200               	.LM121:
 1201 0490 EFE8      		ldi r30,lo8(399)
 1202 0492 F1E0      		ldi r31,hi8(399)
 1203 0494 3197      		1: sbiw r30,1
 1204 0496 01F4      		brne 1b
 1205 0498 00C0      		rjmp .
 1206 049a 0000      		nop
 1207               	.L56:
 1208               	.LBE70:
 1209               	.LBE69:
 1210               	.LBB71:
 1211               	.LBB72:
 1213               	.Ltext17:
  29:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h ****     while( !(UCSR0A & ( 1 << UDRE0 ) ) )
 1215               	.LM122:
 1216 049c 8091 C000 		lds r24,192
 1217 04a0 85FF      		sbrs r24,5
 1218 04a2 00C0      		rjmp .L56
 1220               	.LM123:
 1221 04a4 F092 C600 		sts 198,r15
 1222               	.LBE72:
 1223               	.LBE71:
 1224               	.LBB73:
 1225               	.LBB74:
 1227               	.Ltext18:
 1229               	.LM124:
 1230 04a8 8FE8      		ldi r24,lo8(399)
 1231 04aa 91E0      		ldi r25,hi8(399)
 1232 04ac 0197      		1: sbiw r24,1
 1233 04ae 01F4      		brne 1b
 1234 04b0 00C0      		rjmp .
 1235 04b2 0000      		nop
 1236               	.L58:
 1237               	.LBE74:
 1238               	.LBE73:
 1239               	.LBB75:
 1240               	.LBB76:
 1242               	.Ltext19:
  29:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Coms.h ****     while( !(UCSR0A & ( 1 << UDRE0 ) ) )
 1244               	.LM125:
 1245 04b4 8091 C000 		lds r24,192
 1246 04b8 85FF      		sbrs r24,5
 1247 04ba 00C0      		rjmp .L58
 1249               	.LM126:
 1250 04bc E092 C600 		sts 198,r14
 1251               	.LBE76:
 1252               	.LBE75:
 1253               	.LBB77:
 1254               	.LBB78:
 1256               	.Ltext20:
 1258               	.LM127:
 1259 04c0 EFE8      		ldi r30,lo8(399)
 1260 04c2 F1E0      		ldi r31,hi8(399)
 1261 04c4 3197      		1: sbiw r30,1
 1262 04c6 01F4      		brne 1b
 1263 04c8 00C0      		rjmp .
 1264 04ca 0000      		nop
 1265               	.LBE78:
 1266               	.LBE77:
 1268               	.Ltext21:
 277:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         return;
 278:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 279:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 280:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 281:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     Sensors* sensors = ( Sensors* ) user_struct;
 282:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 283:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     serial_send(  10 );
 284:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     _delay_us( 100 );
 285:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 286:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     serial_send(  x );
 287:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     _delay_us( 100 );
 288:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 289:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     serial_send(  y );
 290:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     _delay_us( 100 );
 291:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 292:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 293:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 294:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 295:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 296:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 297:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 298:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     if (1)//b->color )
 299:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 300:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         display_setFillColor( sensors->display, 255 );
 1270               	.LM128:
 1271 04cc 6801      		movw r12,r16
 1272 04ce F5EC      		ldi r31,-59
 1273 04d0 CF1A      		sub r12,r31
 1274 04d2 FDEF      		ldi r31,-3
 1275 04d4 DF0A      		sbc r13,r31
 1276 04d6 6FEF      		ldi r22,lo8(-1)
 1277 04d8 F601      		movw r30,r12
 1278 04da 8081      		ld r24,Z
 1279 04dc 9181      		ldd r25,Z+1
 1280 04de 0E94 0000 		call display_setFillColor
 301:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         display_fillZone( sensors->display , x-b->size, y-b->size , b->size*2, b->size*2 );
 1282               	.LM129:
 1283 04e2 8881      		ld r24,Y
 1284 04e4 282F      		mov r18,r24
 1285 04e6 220F      		lsl r18
 1286 04e8 4E2D      		mov r20,r14
 1287 04ea 481B      		sub r20,r24
 1288 04ec 6F2D      		mov r22,r15
 1289 04ee 681B      		sub r22,r24
 1290 04f0 022F      		mov r16,r18
 1291 04f2 F601      		movw r30,r12
 1292 04f4 8081      		ld r24,Z
 1293 04f6 9181      		ldd r25,Z+1
 1294 04f8 0E94 0000 		call display_fillZone
 1295               	.L51:
 1296               	/* epilogue start */
 302:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 303:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 304:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 1298               	.LM130:
 1299 04fc DF91      		pop r29
 1300 04fe CF91      		pop r28
 1301 0500 1F91      		pop r17
 1302 0502 0F91      		pop r16
 1303 0504 FF90      		pop r15
 1304 0506 EF90      		pop r14
 1305 0508 DF90      		pop r13
 1306 050a CF90      		pop r12
 1307 050c BF90      		pop r11
 1308 050e AF90      		pop r10
 1309 0510 9F90      		pop r9
 1310 0512 8F90      		pop r8
 1311 0514 0895      		ret
 1317               	.Lscope9:
 1321               	.global	init_pixel_stream_hook
 1323               	init_pixel_stream_hook:
 305:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 306:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 307:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 308:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** int init_pixel_stream_hook(void* user_struct, struct stream_state* stream)
 309:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 1325               	.LM131:
 1326               	.LFBB10:
 1327               	/* prologue: function */
 1328               	/* frame size = 0 */
 1329               	/* stack size = 0 */
 1330               	.L__stack_usage = 0
 1331 0516 FB01      		movw r30,r22
 310:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 311:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     Sensors* sensors = ( Sensors* ) user_struct;
 312:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->currentRow = 0;
 1333               	.LM132:
 1334 0518 835C      		subi r24,-61
 1335 051a 9D4F      		sbci r25,-3
 1336 051c DC01      		movw r26,r24
 1337 051e 1C92      		st X,__zero_reg__
 313:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 314:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     stream->w = SENSOR_COUNT;
 1339               	.LM133:
 1340 0520 8FE0      		ldi r24,lo8(15)
 1341 0522 90E0      		ldi r25,0
 1342 0524 9183      		std Z+1,r25
 1343 0526 8083      		st Z,r24
 315:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     stream->h = SENSOR_COUNT;
 1345               	.LM134:
 1346 0528 9383      		std Z+3,r25
 1347 052a 8283      		std Z+2,r24
 316:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     stream->x = 0;
 1349               	.LM135:
 1350 052c 1582      		std Z+5,__zero_reg__
 1351 052e 1482      		std Z+4,__zero_reg__
 317:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     stream->y = 0;
 1353               	.LM136:
 1354 0530 1782      		std Z+7,__zero_reg__
 1355 0532 1682      		std Z+6,__zero_reg__
 318:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 319:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     return 0;
 320:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 1357               	.LM137:
 1358 0534 80E0      		ldi r24,0
 1359 0536 90E0      		ldi r25,0
 1360 0538 0895      		ret
 1362               	.Lscope10:
 1366               	.global	close_pixel_stream_hook
 1368               	close_pixel_stream_hook:
 321:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** // you need to set several variables:
 322:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** // stream->w = image width
 323:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** // stream->h = image hight
 324:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** // return status (0 for success)
 325:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 326:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 327:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 328:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** int close_pixel_stream_hook(void* user_struct, struct stream_state* stream)
 329:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 1370               	.LM138:
 1371               	.LFBB11:
 1372               	/* prologue: function */
 1373               	/* frame size = 0 */
 1374               	/* stack size = 0 */
 1375               	.L__stack_usage = 0
 330:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //    const Sensors* sensors = ( const Sensors*) user_struct;
 331:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 332:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 333:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 334:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     return 0;
 335:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 1377               	.LM139:
 1378 053a 80E0      		ldi r24,0
 1379 053c 90E0      		ldi r25,0
 1380 053e 0895      		ret
 1382               	.Lscope11:
 1386               	.global	next_row_hook
 1388               	next_row_hook:
 336:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** // free up anything you allocated in init_pixel_stream_hook
 337:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** // return status (0 for success)
 338:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 339:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 340:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 341:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** int next_row_hook(void* user_struct, struct stream_state* stream)
 342:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 1390               	.LM140:
 1391               	.LFBB12:
 1392 0540 1F93      		push r17
 1393 0542 CF93      		push r28
 1394 0544 DF93      		push r29
 1395               	/* prologue: function */
 1396               	/* frame size = 0 */
 1397               	/* stack size = 3 */
 1398               	.L__stack_usage = 3
 343:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     Sensors* sensors = ( Sensors* ) user_struct;
 344:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 345:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     if ( sensors->currentRow == SENSOR_COUNT)
 1400               	.LM141:
 1401 0546 FC01      		movw r30,r24
 1402 0548 E35C      		subi r30,-61
 1403 054a FD4F      		sbci r31,-3
 1404 054c 2081      		ld r18,Z
 1405 054e 2F30      		cpi r18,lo8(15)
 1406 0550 01F0      		breq .L65
 1407 0552 20E0      		ldi r18,0
 1408 0554 30E0      		ldi r19,0
 1409               	.LBB79:
 346:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 347:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 348:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         return -1;
 349:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 350:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 351:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int i = 0 ; i<stream->w ; i++)
 352:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         stream->row[i] = sensors->values[ sensors->currentRow ][i];
 1411               	.LM142:
 1412 0556 1FE0      		ldi r17,lo8(15)
 1413               	.L63:
 351:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int i = 0 ; i<stream->w ; i++)
 1415               	.LM143:
 1416 0558 DB01      		movw r26,r22
 1417 055a 4D91      		ld r20,X+
 1418 055c 5C91      		ld r21,X
 1419 055e 2417      		cp r18,r20
 1420 0560 3507      		cpc r19,r21
 1421 0562 04F4      		brge .L66
 1423               	.LM144:
 1424 0564 4081      		ld r20,Z
 1425 0566 D901      		movw r26,r18
 1426 0568 149F      		mul r17,r20
 1427 056a A00D      		add r26,r0
 1428 056c B11D      		adc r27,r1
 1429 056e 1124      		clr __zero_reg__
 1430 0570 A80F      		add r26,r24
 1431 0572 B91F      		adc r27,r25
 1432 0574 4C91      		ld r20,X
 1433 0576 EB01      		movw r28,r22
 1434 0578 AA85      		ldd r26,Y+10
 1435 057a BB85      		ldd r27,Y+11
 1436 057c A20F      		add r26,r18
 1437 057e B31F      		adc r27,r19
 1438 0580 4C93      		st X,r20
 351:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int i = 0 ; i<stream->w ; i++)
 1440               	.LM145:
 1441 0582 2F5F      		subi r18,-1
 1442 0584 3F4F      		sbci r19,-1
 1443 0586 00C0      		rjmp .L63
 1444               	.L66:
 1445               	.LBE79:
 353:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 354:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->currentRow++;
 1447               	.LM146:
 1448 0588 8081      		ld r24,Z
 1449 058a 8F5F      		subi r24,lo8(-(1))
 1450 058c 8083      		st Z,r24
 355:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 356:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 357:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 358:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     return 0;
 1452               	.LM147:
 1453 058e 80E0      		ldi r24,0
 1454 0590 90E0      		ldi r25,0
 1455 0592 00C0      		rjmp .L62
 1456               	.L65:
 348:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         return -1;
 1458               	.LM148:
 1459 0594 8FEF      		ldi r24,lo8(-1)
 1460 0596 9FEF      		ldi r25,lo8(-1)
 1461               	.L62:
 1462               	/* epilogue start */
 359:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 1464               	.LM149:
 1465 0598 DF91      		pop r29
 1466 059a CF91      		pop r28
 1467 059c 1F91      		pop r17
 1468 059e 0895      		ret
 1473               	.Lscope12:
 1477               	.global	next_frame_hook
 1479               	next_frame_hook:
 360:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** // load the (grayscale) row at stream->y into the (8 bit) stream->row array
 361:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** // return status (0 for success)
 362:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 363:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 364:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 365:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 366:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** int next_frame_hook(void* user_struct, struct stream_state* stream)
 367:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 1481               	.LM150:
 1482               	.LFBB13:
 1483 05a0 CF93      		push r28
 1484 05a2 DF93      		push r29
 1485               	/* prologue: function */
 1486               	/* frame size = 0 */
 1487               	/* stack size = 2 */
 1488               	.L__stack_usage = 2
 1489 05a4 EC01      		movw r28,r24
 368:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 369:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 370:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     Sensors* sensors = ( Sensors*) user_struct;
 371:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 372:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     display_clear( sensors->display );
 1491               	.LM151:
 1492 05a6 FC01      		movw r30,r24
 1493 05a8 E55C      		subi r30,-59
 1494 05aa FD4F      		sbci r31,-3
 1495 05ac 8081      		ld r24,Z
 1496 05ae 9181      		ldd r25,Z+1
 1497 05b0 0E94 0000 		call display_clear
 373:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->currentRow = 0;
 1499               	.LM152:
 1500 05b4 FE01      		movw r30,r28
 1501 05b6 E35C      		subi r30,-61
 1502 05b8 FD4F      		sbci r31,-3
 1503 05ba 1082      		st Z,__zero_reg__
 374:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors_reccordState( sensors , 2 , 10  , 2);
 1505               	.LM153:
 1506 05bc 22E0      		ldi r18,lo8(2)
 1507 05be 4AE0      		ldi r20,lo8(10)
 1508 05c0 50E0      		ldi r21,0
 1509 05c2 62E0      		ldi r22,lo8(2)
 1510 05c4 70E0      		ldi r23,0
 1511 05c6 CE01      		movw r24,r28
 1512 05c8 0E94 0000 		call sensors_reccordState
 375:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 376:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 377:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 378:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     return 0;
 379:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 1514               	.LM154:
 1515 05cc 80E0      		ldi r24,0
 1516 05ce 90E0      		ldi r25,0
 1517               	/* epilogue start */
 1518 05d0 DF91      		pop r29
 1519 05d2 CF91      		pop r28
 1520 05d4 0895      		ret
 1522               	.Lscope13:
 1524               	.Letext0:
 1525               		.ident	"GCC: (GNU) 4.8.1"
DEFINED SYMBOLS
                            *ABS*:00000000 Sensors.c
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccphcd5q.s:2      *ABS*:0000003e __SP_H__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccphcd5q.s:3      *ABS*:0000003d __SP_L__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccphcd5q.s:4      *ABS*:0000003f __SREG__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccphcd5q.s:5      *ABS*:0000003b __RAMPZ__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccphcd5q.s:6      *ABS*:00000000 __tmp_reg__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccphcd5q.s:7      *ABS*:00000001 __zero_reg__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccphcd5q.s:135    .text:00000000 adc_init
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccphcd5q.s:213    .text:0000004c sensors_setValuesTo
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccphcd5q.s:263    .text:0000006e sensors_reccordState
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccphcd5q.s:569    .text:000001c4 sensors_resetCalibration
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccphcd5q.s:631    .text:000001f4 sensors_init
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccphcd5q.s:668    .text:00000210 sensors_calibration
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccphcd5q.s:1052   .text:000003e6 sensors_cleanDetected
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccphcd5q.s:1073   .text:000003f0 test
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccphcd5q.s:1095   .text:000003f4 log_blob_hook
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccphcd5q.s:1323   .text:00000516 init_pixel_stream_hook
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccphcd5q.s:1368   .text:0000053a close_pixel_stream_hook
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccphcd5q.s:1388   .text:00000540 next_row_hook
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccphcd5q.s:1479   .text:000005a0 next_frame_hook

UNDEFINED SYMBOLS
display_setFillColor
__divmodhi4
extract_image
__ltsf2
__addsf3
__fixunssfsi
__subsf3
display_fillZone
display_clear
