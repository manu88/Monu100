   1               		.file	"Sensors.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
 134               	.global	adc_init
 136               	adc_init:
   1:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //
   2:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //  Sensors.c
   3:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //  MicMonu100
   4:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //
   5:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //  Created by Manuel Deneu on 01/03/15.
   6:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //  Copyright (c) 2015 Manuel Deneu. All rights reserved.
   7:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //
   8:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
   9:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include <stdio.h>
  10:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include <avr/io.h>
  11:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include <util/delay.h>
  12:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  13:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include "Sensors.h"
  14:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  15:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include "PinsConfig.h"
  16:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include "quickblob.h"
  17:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  18:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include "Coms.h"
  19:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include "mcp2515.h"
  20:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include "CanMessages.h"
  21:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  22:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** uint8_t analyze(Sensors *sensors);
  23:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  24:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
  25:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  26:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void adc_init(void)
  27:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 138               	.LM0:
 139               	.LFBB1:
 140               	/* prologue: function */
 141               	/* frame size = 0 */
 142               	/* stack size = 0 */
 143               	.L__stack_usage = 0
  28:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     // MICs LDR
  29:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  30:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setOutput( LDR_DATA_DDR       , LDR_DATA_PIN ); // data
 145               	.LM1:
 146 0000 579A      		sbi 0xa,7
  31:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setOutput( LDR_STROBE_DDR     , LDR_STROBE_PIN ); // strobe
 148               	.LM2:
 149 0002 6C9A      		sbi 0xd,4
  32:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setOutput( LDR_OUT_ENABLE_DDR , LDR_OUT_ENABLE_PIN ); // out enable
 151               	.LM3:
 152 0004 6B9A      		sbi 0xd,3
  33:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setOutput( LDR_CLOCK_DDR      , LDR_CLOCK_PIN ); // clock
 154               	.LM4:
 155 0006 539A      		sbi 0xa,3
  34:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  35:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  36:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     /* *** */
  37:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  38:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  39:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setLow(LDR_STROBE_PORT , LDR_STROBE_PIN ); // strobe mic LDR
 157               	.LM5:
 158 0008 7498      		cbi 0xe,4
  40:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  41:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setLow( LDR_CLOCK_PORT , LDR_CLOCK_PIN);
 160               	.LM6:
 161 000a 5B98      		cbi 0xb,3
  42:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  43:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setLow( LDR_OUT_ENABLE_PORT , LDR_OUT_ENABLE_PIN );
 163               	.LM7:
 164 000c 7398      		cbi 0xe,3
  44:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  45:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     //
  46:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  47:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setLow( LDR_DATA_PORT , LDR_DATA_PIN );
 166               	.LM8:
 167 000e 5F98      		cbi 0xb,7
 168 0010 80E1      		ldi r24,lo8(16)
 169 0012 90E0      		ldi r25,0
 170               	.L3:
 171               	.LBB31:
  48:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  49:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int i=0; i<16; i++)
  50:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         pulse( LDR_CLOCK_PORT , LDR_CLOCK_PIN);
 173               	.LM9:
 174 0014 5B9A      		sbi 0xb,3
 175 0016 5B98      		cbi 0xb,3
 176 0018 0197      		sbiw r24,1
  49:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int i=0; i<16; i++)
 178               	.LM10:
 179 001a 0097      		sbiw r24,0
 180 001c 01F4      		brne .L3
 181               	.LBE31:
  51:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  52:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  53:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     /*
  54:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****      setHigh( LDR_DATA_PORT , LDR_DATA_PIN );
  55:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****      
  56:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****      pulse( LDR_CLOCK_PORT , LDR_CLOCK_PIN);
  57:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****      */
  58:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  59:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  60:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     pulse(LDR_STROBE_PORT, LDR_STROBE_PIN);
 183               	.LM11:
 184 001e 749A      		sbi 0xe,4
 185 0020 7498      		cbi 0xe,4
  61:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  62:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  63:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     /* *** */
  64:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  65:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRA |= ((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0));
 187               	.LM12:
 188 0022 8091 7A00 		lds r24,122
 189 0026 8760      		ori r24,lo8(7)
 190 0028 8093 7A00 		sts 122,r24
  66:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  67:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADMUX |= (1<<REFS0);       //Set Voltage reference to Avcc (5v)
 192               	.LM13:
 193 002c 8091 7C00 		lds r24,124
 194 0030 8064      		ori r24,lo8(64)
 195 0032 8093 7C00 		sts 124,r24
  68:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  69:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRA |= (1<<ADEN);       //Turn on ADC
 197               	.LM14:
 198 0036 8091 7A00 		lds r24,122
 199 003a 8068      		ori r24,lo8(-128)
 200 003c 8093 7A00 		sts 122,r24
  70:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  71:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRA |= (1<<ADSC);
 202               	.LM15:
 203 0040 8091 7A00 		lds r24,122
 204 0044 8064      		ori r24,lo8(64)
 205 0046 8093 7A00 		sts 122,r24
 206 004a 0895      		ret
 208               	.Lscope1:
 211               	.global	sensors_init
 213               	sensors_init:
  72:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
  73:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  74:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
  75:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  76:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** inline uint16_t adc_read(uint8_t channel)
  77:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
  78:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  79:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADMUX &= 0xE0;           //Clear bits MUX0-4
  80:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADMUX |= channel&0x07;   //Defines the new ADC channel to be read by setting bits MUX0-2
  81:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRB = channel&(1<<3); //Set MUX5
  82:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRA |= (1<<ADSC);      //Starts a new conversion
  83:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  84:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     while( ADCSRA & (1<<ADSC) );  //Wait until the conversion is done
  85:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  86:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     return ADCW;
  87:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
  88:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  89:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
  90:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
  91:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  92:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void sensors_init( Sensors *sensors)
  93:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 215               	.LM16:
 216               	.LFBB2:
 217 004c CF93      		push r28
 218 004e DF93      		push r29
 219               	/* prologue: function */
 220               	/* frame size = 0 */
 221               	/* stack size = 2 */
 222               	.L__stack_usage = 2
 223 0050 EC01      		movw r28,r24
  94:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     adc_init();    
 225               	.LM17:
 226 0052 0E94 0000 		call adc_init
 227               	.LBB32:
  95:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors_resetCalibration( sensors );
  96:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  97:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  98:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int j = 0; j<MIC_SENSOR_COUNT ; j++) // mics
 229               	.LM18:
 230 0056 80E0      		ldi r24,0
 231 0058 90E0      		ldi r25,0
 232               	.L6:
 233               	.LBE32:
  93:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 235               	.LM19:
 236 005a 20E0      		ldi r18,0
 237 005c 30E0      		ldi r19,0
 238 005e AE01      		movw r20,r28
 239 0060 480F      		add r20,r24
 240 0062 591F      		adc r21,r25
 241               	.L9:
 242 0064 FA01      		movw r30,r20
 243 0066 E20F      		add r30,r18
 244 0068 F31F      		adc r31,r19
 245               	.LBB34:
 246               	.LBB33:
  99:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 100:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 101:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int i = 0; i < SENSOR_COUNT ; i++)
 102:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         {
 103:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             sensors->values     [i][j] = 0;
 248               	.LM20:
 249 006a 1586      		std Z+13,__zero_reg__
 250 006c 265F      		subi r18,-10
 251 006e 3F4F      		sbci r19,-1
 101:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int i = 0; i < SENSOR_COUNT ; i++)
 253               	.LM21:
 254 0070 2639      		cpi r18,-106
 255 0072 3105      		cpc r19,__zero_reg__
 256 0074 01F4      		brne .L9
 257               	.LBE33:
  98:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int j = 0; j<MIC_SENSOR_COUNT ; j++) // mics
 259               	.LM22:
 260 0076 0196      		adiw r24,1
 261 0078 8A30      		cpi r24,10
 262 007a 9105      		cpc r25,__zero_reg__
 263 007c 01F4      		brne .L6
 264               	.LBE34:
 104:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         }
 105:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 106:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 107:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->moyenne     = 1000.0f;
 266               	.LM23:
 267 007e 40E0      		ldi r20,0
 268 0080 50E0      		ldi r21,0
 269 0082 6AE7      		ldi r22,lo8(122)
 270 0084 74E4      		ldi r23,lo8(68)
 271 0086 4A83      		std Y+2,r20
 272 0088 5B83      		std Y+3,r21
 273 008a 6C83      		std Y+4,r22
 274 008c 7D83      		std Y+5,r23
 108:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->prevMoyenne = 1000.0f;
 276               	.LM24:
 277 008e 4E83      		std Y+6,r20
 278 0090 5F83      		std Y+7,r21
 279 0092 6887      		std Y+8,r22
 280 0094 7987      		std Y+9,r23
 109:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 110:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->lowTreshold  = SEUIL_SHADOW;
 282               	.LM25:
 283 0096 82E3      		ldi r24,lo8(50)
 284 0098 8883      		st Y,r24
 111:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->highTreshold = SEUIL_LIGHT;
 286               	.LM26:
 287 009a 88EC      		ldi r24,lo8(-56)
 288 009c 8983      		std Y+1,r24
 289               	/* epilogue start */
 112:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 113:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 291               	.LM27:
 292 009e DF91      		pop r29
 293 00a0 CF91      		pop r28
 294 00a2 0895      		ret
 302               	.Lscope2:
 305               	.global	sensors_resetCalibration
 307               	sensors_resetCalibration:
 114:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 115:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 116:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 117:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void sensors_resetCalibration( Sensors *sensors )
 118:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 309               	.LM28:
 310               	.LFBB3:
 311               	/* prologue: function */
 312               	/* frame size = 0 */
 313               	/* stack size = 0 */
 314               	.L__stack_usage = 0
 315 00a4 0895      		ret
 317               	.Lscope3:
 321               	.global	sensors_calibration
 323               	sensors_calibration:
 119:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 120:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 121:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 122:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 123:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 124:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void sensors_calibration( Sensors *sensors , uint8_t count)
 125:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 325               	.LM29:
 326               	.LFBB4:
 327               	/* prologue: function */
 328               	/* frame size = 0 */
 329               	/* stack size = 0 */
 330               	.L__stack_usage = 0
 331               	.LBB35:
 126:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors_resetCalibration( sensors );
 127:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 128:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     float temp[ SENSOR_COUNT ][ MIC_SENSOR_COUNT ];
 129:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 130:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 131:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for ( uint8_t iter = 0; iter < count ; iter++)
 333               	.LM30:
 334 00a6 50E0      		ldi r21,0
 335               	.L12:
 337               	.LM31:
 338 00a8 5617      		cp r21,r22
 339 00aa 01F0      		breq .L11
 341               	.LM32:
 342 00ac 80E0      		ldi r24,0
 343 00ae 90E0      		ldi r25,0
 344               	.L21:
 345               	.LBE35:
 125:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 347               	.LM33:
 348 00b0 40E0      		ldi r20,0
 349               	.L19:
 350               	.LBB40:
 351               	.LBB36:
 352               	.LBB37:
 353               	.LBB38:
 354               	.LBB39:
  79:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADMUX &= 0xE0;           //Clear bits MUX0-4
 356               	.LM34:
 357 00b2 2091 7C00 		lds r18,124
 358 00b6 207E      		andi r18,lo8(-32)
 359 00b8 2093 7C00 		sts 124,r18
  80:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADMUX |= channel&0x07;   //Defines the new ADC channel to be read by setting bits MUX0-2
 361               	.LM35:
 362 00bc 3091 7C00 		lds r19,124
 363 00c0 242F      		mov r18,r20
 364 00c2 2770      		andi r18,lo8(7)
 365 00c4 232B      		or r18,r19
 366 00c6 2093 7C00 		sts 124,r18
  81:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRB = channel&(1<<3); //Set MUX5
 368               	.LM36:
 369 00ca 242F      		mov r18,r20
 370 00cc 2870      		andi r18,lo8(8)
 371 00ce 2093 7B00 		sts 123,r18
  82:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRA |= (1<<ADSC);      //Starts a new conversion
 373               	.LM37:
 374 00d2 2091 7A00 		lds r18,122
 375 00d6 2064      		ori r18,lo8(64)
 376 00d8 2093 7A00 		sts 122,r18
 377               	.L14:
  84:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     while( ADCSRA & (1<<ADSC) );  //Wait until the conversion is done
 379               	.LM38:
 380 00dc 2091 7A00 		lds r18,122
 381 00e0 26FD      		sbrc r18,6
 382 00e2 00C0      		rjmp .L14
  86:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     return ADCW;
 384               	.LM39:
 385 00e4 2091 7800 		lds r18,120
 386 00e8 3091 7900 		lds r19,120+1
 387 00ec 4F5F      		subi r20,lo8(-(1))
 388               	.LBE39:
 389               	.LBE38:
 132:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 133:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int j = 0; j<MIC_SENSOR_COUNT ; j++) // mics
 134:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         {
 135:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 136:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             for (int i = 0; i < MIC_SENSOR_COUNT ; i++)
 391               	.LM40:
 392 00ee 4A30      		cpi r20,lo8(10)
 393 00f0 01F4      		brne .L19
 394               	.LBE37:
 137:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             {
 138:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 139:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 
 140:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 if (iter == 0)
 141:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                     temp[i][j] = 0;
 142:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 
 143:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 temp[i][j] += (float) adc_read( i );// >> ADC_SHIFT_MULT;
 144:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 
 145:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 if( iter == count-1)
 146:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 {
 147:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                     temp[i][j] /= count;
 148:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //                    sensors->calibValues[i][j] =  (uint16_t)temp[i][j];
 149:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 }
 150:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             }
 151:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 152:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 153:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             if (j== (MIC_SENSOR_COUNT-1) )
 396               	.LM41:
 397 00f2 8930      		cpi r24,9
 398 00f4 9105      		cpc r25,__zero_reg__
 399 00f6 01F4      		brne .L16
 154:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             {
 155:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 setHigh( LDR_DATA_PORT , LDR_DATA_PIN );
 401               	.LM42:
 402 00f8 5F9A      		sbi 0xb,7
 403 00fa 00C0      		rjmp .L17
 404               	.L16:
 156:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             }
 157:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             else
 158:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             {
 159:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 setLow( LDR_DATA_PORT , LDR_DATA_PIN );
 406               	.LM43:
 407 00fc 5F98      		cbi 0xb,7
 408               	.L17:
 160:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             }
 161:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 162:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             pulse( LDR_CLOCK_PORT , LDR_CLOCK_PIN);
 410               	.LM44:
 411 00fe 5B9A      		sbi 0xb,3
 412 0100 5B98      		cbi 0xb,3
 163:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 164:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             pulse( LDR_STROBE_PORT, LDR_STROBE_PIN);
 414               	.LM45:
 415 0102 749A      		sbi 0xe,4
 416 0104 7498      		cbi 0xe,4
 133:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int j = 0; j<MIC_SENSOR_COUNT ; j++) // mics
 418               	.LM46:
 419 0106 0196      		adiw r24,1
 420 0108 8A30      		cpi r24,10
 421 010a 9105      		cpc r25,__zero_reg__
 422 010c 01F4      		brne .L21
 423               	.LBE36:
 131:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for ( uint8_t iter = 0; iter < count ; iter++)
 425               	.LM47:
 426 010e 5F5F      		subi r21,lo8(-(1))
 427 0110 00C0      		rjmp .L12
 428               	.L11:
 429 0112 0895      		ret
 430               	.LBE40:
 441               	.Lscope4:
 444               	.global	readFrame
 446               	readFrame:
 165:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 166:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         }
 167:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 168:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 169:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 170:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 171:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 172:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 173:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 174:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void readFrame(Sensors *sensors)
 175:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 448               	.LM48:
 449               	.LFBB5:
 450               	/* prologue: function */
 451               	/* frame size = 0 */
 452               	/* stack size = 0 */
 453               	.L__stack_usage = 0
 176:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     extract_image( sensors );
 455               	.LM49:
 456 0114 0C94 0000 		jmp extract_image
 458               	.Lscope5:
 462               	.global	readRow
 464               	readRow:
 177:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 178:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 179:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 180:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 181:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void readRow( Sensors *sensors , uint8_t *buffer)
 182:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 466               	.LM50:
 467               	.LFBB6:
 468 0118 7F92      		push r7
 469 011a 8F92      		push r8
 470 011c 9F92      		push r9
 471 011e AF92      		push r10
 472 0120 BF92      		push r11
 473 0122 CF92      		push r12
 474 0124 DF92      		push r13
 475 0126 EF92      		push r14
 476 0128 FF92      		push r15
 477 012a 0F93      		push r16
 478 012c 1F93      		push r17
 479 012e CF93      		push r28
 480 0130 DF93      		push r29
 481               	/* prologue: function */
 482               	/* frame size = 0 */
 483               	/* stack size = 13 */
 484               	.L__stack_usage = 13
 485 0132 EC01      		movw r28,r24
 486 0134 5B01      		movw r10,r22
 183:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     const uint8_t j = sensors->currentRow;
 488               	.LM51:
 489 0136 8C85      		ldd r24,Y+12
 184:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 185:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 186:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 187:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     if (sensors->currentRow == 0 )
 491               	.LM52:
 492 0138 8111      		cpse r24,__zero_reg__
 493 013a 00C0      		rjmp .L24
 188:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         setHigh( LDR_DATA_PORT , LDR_DATA_PIN );
 495               	.LM53:
 496 013c 5F9A      		sbi 0xb,7
 497 013e 00C0      		rjmp .L25
 498               	.L24:
 189:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     else
 190:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         setLow( LDR_DATA_PORT , LDR_DATA_PIN );
 500               	.LM54:
 501 0140 5F98      		cbi 0xb,7
 502               	.L25:
 191:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 192:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 193:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     pulse( LDR_CLOCK_PORT , LDR_CLOCK_PIN);
 504               	.LM55:
 505 0142 5B9A      		sbi 0xb,3
 506 0144 5B98      		cbi 0xb,3
 194:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     pulse( LDR_STROBE_PORT, LDR_STROBE_PIN);
 508               	.LM56:
 509 0146 749A      		sbi 0xe,4
 510 0148 7498      		cbi 0xe,4
 511               	.LBB41:
 512               	.LBB42:
 514               	.Ltext1:
   1:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   6:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   9:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  12:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      distribution.
  16:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  17:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  21:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  33:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* $Id$ */
  34:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  35:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  38:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  41:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  42:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  46:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \file */
  47:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \code
  49:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \endcode
  53:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  54:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     used.
  58:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  59:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  68:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  77:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  81:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** */
  82:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  83:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  87:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  88:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  93:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  94:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  97:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  98:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
 103:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 104:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /**
 105:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 107:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 109:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 112:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 114:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 120:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 125:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 129:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 132:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 140:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  */
 141:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** void
 142:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** {
 144:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	double __tmp ; 
 145:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 146:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 147:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 148:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 149:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 152:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 153:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 154:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 155:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 156:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 157:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 158:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#else
 159:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//round up by default
 160:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 161:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#endif
 162:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 163:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 164:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 165:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #else
 166:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint16_t __ticks;
 167:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 168:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 169:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks = 1;
 170:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 171:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	{
 172:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 173:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 174:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		while(__ticks)
 175:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		{
 176:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 			// wait 1/10 ms
 177:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 178:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 			__ticks --;
 179:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		}
 180:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		return;
 181:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	}
 182:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	else
 183:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 184:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 185:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
 186:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** }
 187:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 188:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /**
 189:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    \ingroup util_delay
 190:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 191:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
 192:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 193:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 194:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 195:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 196:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 197:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 198:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 199:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 200:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    will not be informed about this case.
 201:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 202:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 203:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 us/ F_CPU in MHz. For
 204:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflow results in
 205:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    no delay i.e., 0us.
 206:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   
 207:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 208:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 209:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 210:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 211:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 212:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    to round down and round to closest integer.
 213:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  
 214:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Note: The new implementation of _delay_us(double __us) with 
 215:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible.
 216:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 217:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Also, the backward compatible
 218:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 219:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 220:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 221:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 222:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  */
 223:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** void
 224:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** _delay_us(double __us)
 225:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** {
 226:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	double __tmp ; 
 227:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 228:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 229:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 230:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 231:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 232:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 233:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 234:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 235:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 236:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 237:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 238:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 239:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 240:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#else
 241:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//round up by default
 242:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 243:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#endif
 244:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 245:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 516               	.LM57:
 517 014a EFEF      		ldi r30,lo8(6399)
 518 014c F8E1      		ldi r31,hi8(6399)
 519 014e 3197      		1: sbiw r30,1
 520 0150 01F4      		brne 1b
 521 0152 00C0      		rjmp .
 522 0154 0000      		nop
 523               	.LBE42:
 524               	.LBE41:
 525               	.LBB43:
 526               	.LBB44:
 527               	.LBB45:
 528               	.LBB46:
 530               	.Ltext2:
   1:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** //
   2:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** //  Sensors.h
   3:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** //  MicMonu100
   4:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** //
   5:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** //  Created by Manuel Deneu on 01/03/15.
   6:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** //  Copyright (c) 2015 Manuel Deneu. All rights reserved.
   7:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** //
   8:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
   9:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** #include "Display.h"
  10:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  11:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** #ifndef MicMonu100_Sensors_h
  12:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** #define MicMonu100_Sensors_h
  13:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  14:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** /* *** *** *** *** *** *** *** *** *** *** *** *** *** *** */
  15:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  16:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** #define SENSOR_COUNT     15
  17:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** #define MIC_SENSOR_COUNT 10
  18:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  19:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** #define MIN_BLOB_SIZE 2
  20:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** #define MAX_BLOB_SIZE 6
  21:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  22:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** #define BLOB_MARGIN  3
  23:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  24:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** #define BLOB_LIGHT   255
  25:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** #define BLOB_SHADOW  200
  26:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  27:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** #define SEUIL_LIGHT  200
  28:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** #define SEUIL_SHADOW 50
  29:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  30:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** /* *** *** *** *** *** *** *** *** *** *** *** *** *** *** */
  31:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  32:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** struct _Sensors
  33:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** {
  34:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** //    uint16_t calibValues[ SENSOR_COUNT ][ MIC_SENSOR_COUNT ];
  35:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     
  36:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     
  37:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     uint8_t lowTreshold;
  38:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     uint8_t highTreshold;
  39:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     float moyenne;
  40:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     float prevMoyenne;
  41:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     
  42:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     Display* display;
  43:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     
  44:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     uint8_t currentRow;
  45:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     
  46:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     uint8_t values    [ SENSOR_COUNT ][ MIC_SENSOR_COUNT ];
  47:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  48:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     
  49:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     uint8_t shadowX;
  50:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     uint8_t shadowY;
  51:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     uint8_t shadowSize;
  52:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     
  53:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     uint8_t lightX;
  54:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     uint8_t lightY;
  55:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     uint8_t lightSize;
  56:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** };
  57:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** typedef struct _Sensors Sensors;
  58:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  59:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** inline uint8_t mapXFromSensors( const uint8_t i )
  60:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** {
  61:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     return (i*2);
 532               	.LM58:
 533 0156 182F      		mov r17,r24
 534 0158 110F      		lsl r17
 535               	.LBE46:
 536               	.LBE45:
 538               	.Ltext3:
 195:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 196:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     _delay_us( 1600 );    // 1500
 197:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 198:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int i = 0; i < SENSOR_COUNT ; i++)
 199:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //    for (int i = SENSOR_COUNT-1; i >=0 ; i--)
 200:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 201:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 202:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         const int read = adc_read( i );
 203:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 204:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 205:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         uint8_t val =0;// = read< SEUIL_SHADOW?BLOB_SHADOW: (read>SEUIL_LIGHT?BLOB_LIGHT:0);
 206:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 207:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         if (read < sensors->lowTreshold )
 208:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             val = BLOB_SHADOW;
 209:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 210:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         else if ( read>sensors->highTreshold)
 211:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             val = BLOB_LIGHT;
 212:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 213:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         sensors->values[i][j] = val ;
 214:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 215:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         if( buffer != NULL)
 216:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             buffer[i] = val;
 217:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 218:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 219:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         if (val == BLOB_LIGHT && (i!= SENSOR_COUNT-1))
 220:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         {
 221:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             display_setFillColor(sensors->display, val);
 222:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             display_fillZone(sensors->display,mapXFromSensors(j) ,mapYFromSensors(i), 2, 2);
 540               	.LM59:
 541 015a C12C      		mov r12,__zero_reg__
 542 015c D12C      		mov r13,__zero_reg__
 543 015e 9CE1      		ldi r25,lo8(28)
 544 0160 792E      		mov r7,r25
 545               	.LBE44:
 198:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int i = 0; i < SENSOR_COUNT ; i++)
 547               	.LM60:
 548 0162 E12C      		mov r14,__zero_reg__
 549 0164 F12C      		mov r15,__zero_reg__
 550 0166 4E01      		movw r8,r28
 551 0168 880E      		add r8,r24
 552 016a 911C      		adc r9,__zero_reg__
 553               	.L33:
 554               	.LBB49:
 555               	.LBB47:
 556               	.LBB48:
  79:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADMUX &= 0xE0;           //Clear bits MUX0-4
 558               	.LM61:
 559 016c 8091 7C00 		lds r24,124
 560 0170 807E      		andi r24,lo8(-32)
 561 0172 8093 7C00 		sts 124,r24
  80:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADMUX |= channel&0x07;   //Defines the new ADC channel to be read by setting bits MUX0-2
 563               	.LM62:
 564 0176 9091 7C00 		lds r25,124
 565 017a 8E2D      		mov r24,r14
 566 017c 8770      		andi r24,lo8(7)
 567 017e 892B      		or r24,r25
 568 0180 8093 7C00 		sts 124,r24
  81:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRB = channel&(1<<3); //Set MUX5
 570               	.LM63:
 571 0184 8E2D      		mov r24,r14
 572 0186 8870      		andi r24,lo8(8)
 573 0188 8093 7B00 		sts 123,r24
  82:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRA |= (1<<ADSC);      //Starts a new conversion
 575               	.LM64:
 576 018c 8091 7A00 		lds r24,122
 577 0190 8064      		ori r24,lo8(64)
 578 0192 8093 7A00 		sts 122,r24
 579               	.L27:
  84:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     while( ADCSRA & (1<<ADSC) );  //Wait until the conversion is done
 581               	.LM65:
 582 0196 8091 7A00 		lds r24,122
 583 019a 86FD      		sbrc r24,6
 584 019c 00C0      		rjmp .L27
  86:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     return ADCW;
 586               	.LM66:
 587 019e 8091 7800 		lds r24,120
 588 01a2 9091 7900 		lds r25,120+1
 589               	.LBE48:
 590               	.LBE47:
 207:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         if (read < sensors->lowTreshold )
 592               	.LM67:
 593 01a6 2881      		ld r18,Y
 594 01a8 30E0      		ldi r19,0
 595 01aa 8217      		cp r24,r18
 596 01ac 9307      		cpc r25,r19
 597 01ae 04F0      		brlt .L34
 210:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         else if ( read>sensors->highTreshold)
 599               	.LM68:
 600 01b0 2981      		ldd r18,Y+1
 601 01b2 30E0      		ldi r19,0
 602 01b4 41E0      		ldi r20,lo8(1)
 603 01b6 2817      		cp r18,r24
 604 01b8 3907      		cpc r19,r25
 605 01ba 04F0      		brlt .L29
 606 01bc 40E0      		ldi r20,0
 607               	.L29:
 608 01be 842F      		mov r24,r20
 609 01c0 8195      		neg r24
 610 01c2 00C0      		rjmp .L28
 611               	.L34:
 208:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             val = BLOB_SHADOW;
 613               	.LM69:
 614 01c4 88EC      		ldi r24,lo8(-56)
 615               	.L28:
 616 01c6 F401      		movw r30,r8
 617 01c8 EC0D      		add r30,r12
 618 01ca FD1D      		adc r31,r13
 213:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         sensors->values[i][j] = val ;
 620               	.LM70:
 621 01cc 8587      		std Z+13,r24
 215:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         if( buffer != NULL)
 623               	.LM71:
 624 01ce A114      		cp r10,__zero_reg__
 625 01d0 B104      		cpc r11,__zero_reg__
 626 01d2 01F0      		breq .L30
 627 01d4 F501      		movw r30,r10
 628 01d6 EE0D      		add r30,r14
 629 01d8 FF1D      		adc r31,r15
 216:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             buffer[i] = val;
 631               	.LM72:
 632 01da 8083      		st Z,r24
 633               	.L30:
 219:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         if (val == BLOB_LIGHT && (i!= SENSOR_COUNT-1))
 635               	.LM73:
 636 01dc 8F3F      		cpi r24,lo8(-1)
 637 01de 01F4      		brne .L31
 219:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         if (val == BLOB_LIGHT && (i!= SENSOR_COUNT-1))
 639               	.LM74:
 640 01e0 FEE0      		ldi r31,14
 641 01e2 EF16      		cp r14,r31
 642 01e4 F104      		cpc r15,__zero_reg__
 643 01e6 01F0      		breq .L31
 221:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             display_setFillColor(sensors->display, val);
 645               	.LM75:
 646 01e8 6FEF      		ldi r22,lo8(-1)
 647 01ea 8A85      		ldd r24,Y+10
 648 01ec 9B85      		ldd r25,Y+11
 649 01ee 0E94 0000 		call display_setFillColor
 651               	.LM76:
 652 01f2 02E0      		ldi r16,lo8(2)
 653 01f4 22E0      		ldi r18,lo8(2)
 654 01f6 472D      		mov r20,r7
 655 01f8 612F      		mov r22,r17
 656 01fa 8A85      		ldd r24,Y+10
 657 01fc 9B85      		ldd r25,Y+11
 658 01fe 0E94 0000 		call display_fillZone
 659               	.L31:
 660               	.LBE49:
 198:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int i = 0; i < SENSOR_COUNT ; i++)
 662               	.LM77:
 663 0202 8FEF      		ldi r24,-1
 664 0204 E81A      		sub r14,r24
 665 0206 F80A      		sbc r15,r24
 666 0208 7A94      		dec r7
 667 020a 7A94      		dec r7
 668 020c EAE0      		ldi r30,10
 669 020e CE0E      		add r12,r30
 670 0210 D11C      		adc r13,__zero_reg__
 671 0212 FEEF      		ldi r31,lo8(-2)
 672 0214 7F12      		cpse r7,r31
 673 0216 00C0      		rjmp .L33
 674               	/* epilogue start */
 675               	.LBE43:
 223:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         }
 224:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 225:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 226:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 227:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 228:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 677               	.LM78:
 678 0218 DF91      		pop r29
 679 021a CF91      		pop r28
 680 021c 1F91      		pop r17
 681 021e 0F91      		pop r16
 682 0220 FF90      		pop r15
 683 0222 EF90      		pop r14
 684 0224 DF90      		pop r13
 685 0226 CF90      		pop r12
 686 0228 BF90      		pop r11
 687 022a AF90      		pop r10
 688 022c 9F90      		pop r9
 689 022e 8F90      		pop r8
 690 0230 7F90      		pop r7
 691 0232 0895      		ret
 705               	.Lscope6:
 706               	.global	__fixunssfsi
 710               	.global	log_blob_hook
 712               	log_blob_hook:
 229:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 230:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 231:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 232:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 233:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 234:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 235:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 236:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void log_blob_hook(void* user_struct, struct blob* b)
 237:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 714               	.LM79:
 715               	.LFBB7:
 716 0234 EF92      		push r14
 717 0236 FF92      		push r15
 718 0238 0F93      		push r16
 719 023a 1F93      		push r17
 720 023c CF93      		push r28
 721 023e DF93      		push r29
 722               	/* prologue: function */
 723               	/* frame size = 0 */
 724               	/* stack size = 6 */
 725               	.L__stack_usage = 6
 726 0240 8C01      		movw r16,r24
 727 0242 EB01      		movw r28,r22
 238:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     Sensors* sensors = ( Sensors* ) user_struct;
 239:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 240:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     toggle(LED_PORT, LED_PIN);
 729               	.LM80:
 730 0244 82B1      		in r24,0x2
 731 0246 91E0      		ldi r25,lo8(1)
 732 0248 8927      		eor r24,r25
 733 024a 82B9      		out 0x2,r24
 241:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 242:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 243:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     call();
 735               	.LM81:
 736 024c 0E94 0000 		call call
 244:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     if(( b->color == BLOB_SHADOW) && (b->size <=4))
 738               	.LM82:
 739 0250 8A81      		ldd r24,Y+2
 740 0252 9B81      		ldd r25,Y+3
 741 0254 883C      		cpi r24,-56
 742 0256 9105      		cpc r25,__zero_reg__
 743 0258 01F4      		brne .L42
 745               	.LM83:
 746 025a 8881      		ld r24,Y
 747 025c 9981      		ldd r25,Y+1
 748 025e 0597      		sbiw r24,5
 749 0260 04F4      		brge .L41
 245:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 246:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         sensors->shadowX    = mapXFromSensors( b->center_y );
 751               	.LM84:
 752 0262 7801      		movw r14,r16
 753 0264 83EA      		ldi r24,-93
 754 0266 E80E      		add r14,r24
 755 0268 F11C      		adc r15,__zero_reg__
 756 026a 6E89      		ldd r22,Y+22
 757 026c 7F89      		ldd r23,Y+23
 758 026e 888D      		ldd r24,Y+24
 759 0270 998D      		ldd r25,Y+25
 760 0272 0E94 0000 		call __fixunssfsi
 761               	.LBB50:
 762               	.LBB51:
 764               	.Ltext4:
 766               	.LM85:
 767 0276 660F      		lsl r22
 768               	.LBE51:
 769               	.LBE50:
 771               	.Ltext5:
 773               	.LM86:
 774 0278 F701      		movw r30,r14
 775 027a 6083      		st Z,r22
 247:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         sensors->shadowY    = mapYFromSensors( b->center_x );
 777               	.LM87:
 778 027c 7801      		movw r14,r16
 779 027e F4EA      		ldi r31,-92
 780 0280 EF0E      		add r14,r31
 781 0282 F11C      		adc r15,__zero_reg__
 782 0284 00C0      		rjmp .L44
 783               	.L42:
 248:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         sensors->shadowSize = b->size;
 249:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 250:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 251:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     else if (( b->color == BLOB_LIGHT) && (b->size <=10))
 785               	.LM88:
 786 0286 8F3F      		cpi r24,-1
 787 0288 9105      		cpc r25,__zero_reg__
 788 028a 01F4      		brne .L41
 790               	.LM89:
 791 028c 8881      		ld r24,Y
 792 028e 9981      		ldd r25,Y+1
 793 0290 0B97      		sbiw r24,11
 794 0292 04F4      		brge .L41
 252:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 253:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         sensors->lightX = mapXFromSensors( b->center_y );
 796               	.LM90:
 797 0294 7801      		movw r14,r16
 798 0296 F6EA      		ldi r31,-90
 799 0298 EF0E      		add r14,r31
 800 029a F11C      		adc r15,__zero_reg__
 801 029c 6E89      		ldd r22,Y+22
 802 029e 7F89      		ldd r23,Y+23
 803 02a0 888D      		ldd r24,Y+24
 804 02a2 998D      		ldd r25,Y+25
 805 02a4 0E94 0000 		call __fixunssfsi
 806               	.LBB52:
 807               	.LBB53:
 809               	.Ltext6:
 811               	.LM91:
 812 02a8 660F      		lsl r22
 813               	.LBE53:
 814               	.LBE52:
 816               	.Ltext7:
 818               	.LM92:
 819 02aa F701      		movw r30,r14
 820 02ac 6083      		st Z,r22
 254:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         sensors->lightY = mapYFromSensors( b->center_x );
 822               	.LM93:
 823 02ae 7801      		movw r14,r16
 824 02b0 F7EA      		ldi r31,-89
 825 02b2 EF0E      		add r14,r31
 826 02b4 F11C      		adc r15,__zero_reg__
 827               	.L44:
 828 02b6 6A89      		ldd r22,Y+18
 829 02b8 7B89      		ldd r23,Y+19
 830 02ba 8C89      		ldd r24,Y+20
 831 02bc 9D89      		ldd r25,Y+21
 832 02be 0E94 0000 		call __fixunssfsi
 833               	.LBB54:
 834               	.LBB55:
 836               	.Ltext8:
  62:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** }
  63:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** 
  64:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** inline uint8_t mapYFromSensors( const uint8_t j )
  65:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h **** {
  66:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.h ****     return (14-j)*2;
 838               	.LM94:
 839 02c2 8EE0      		ldi r24,lo8(14)
 840 02c4 90E0      		ldi r25,0
 841 02c6 861B      		sub r24,r22
 842 02c8 9109      		sbc r25,__zero_reg__
 843 02ca 880F      		lsl r24
 844               	.LBE55:
 845               	.LBE54:
 847               	.Ltext9:
 849               	.LM95:
 850 02cc F701      		movw r30,r14
 851 02ce 8083      		st Z,r24
 255:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         sensors->lightSize = b->size;
 853               	.LM96:
 854 02d0 3196      		adiw r30,1
 855 02d2 8881      		ld r24,Y
 856 02d4 8083      		st Z,r24
 857               	.L41:
 858               	/* epilogue start */
 256:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 257:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 258:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 259:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 860               	.LM97:
 861 02d6 DF91      		pop r29
 862 02d8 CF91      		pop r28
 863 02da 1F91      		pop r17
 864 02dc 0F91      		pop r16
 865 02de FF90      		pop r15
 866 02e0 EF90      		pop r14
 867 02e2 0895      		ret
 869               	.Lscope7:
 873               	.global	init_pixel_stream_hook
 875               	init_pixel_stream_hook:
 260:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 261:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 262:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 263:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** int init_pixel_stream_hook(void* user_struct, struct stream_state* stream)
 264:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 877               	.LM98:
 878               	.LFBB8:
 879               	/* prologue: function */
 880               	/* frame size = 0 */
 881               	/* stack size = 0 */
 882               	.L__stack_usage = 0
 883 02e4 FB01      		movw r30,r22
 265:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 266:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     Sensors* sensors = ( Sensors* ) user_struct;
 267:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->currentRow = 0;
 885               	.LM99:
 886 02e6 DC01      		movw r26,r24
 887 02e8 1C96      		adiw r26,12
 888 02ea 1C92      		st X,__zero_reg__
 268:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 269:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     stream->w = SENSOR_COUNT;
 890               	.LM100:
 891 02ec 8FE0      		ldi r24,lo8(15)
 892 02ee 90E0      		ldi r25,0
 893 02f0 9183      		std Z+1,r25
 894 02f2 8083      		st Z,r24
 270:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     stream->h = MIC_SENSOR_COUNT;
 896               	.LM101:
 897 02f4 8AE0      		ldi r24,lo8(10)
 898 02f6 90E0      		ldi r25,0
 899 02f8 9383      		std Z+3,r25
 900 02fa 8283      		std Z+2,r24
 271:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     stream->x = 0;
 902               	.LM102:
 903 02fc 1582      		std Z+5,__zero_reg__
 904 02fe 1482      		std Z+4,__zero_reg__
 272:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     stream->y = 0;
 906               	.LM103:
 907 0300 1782      		std Z+7,__zero_reg__
 908 0302 1682      		std Z+6,__zero_reg__
 273:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 274:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     return 0;
 275:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 910               	.LM104:
 911 0304 80E0      		ldi r24,0
 912 0306 90E0      		ldi r25,0
 913 0308 0895      		ret
 915               	.Lscope8:
 919               	.global	close_pixel_stream_hook
 921               	close_pixel_stream_hook:
 276:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 277:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 278:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 279:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** int close_pixel_stream_hook(void* user_struct, struct stream_state* stream)
 280:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 923               	.LM105:
 924               	.LFBB9:
 925               	/* prologue: function */
 926               	/* frame size = 0 */
 927               	/* stack size = 0 */
 928               	.L__stack_usage = 0
 281:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 282:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     return 0;
 283:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 930               	.LM106:
 931 030a 80E0      		ldi r24,0
 932 030c 90E0      		ldi r25,0
 933 030e 0895      		ret
 935               	.Lscope9:
 939               	.global	next_row_hook
 941               	next_row_hook:
 284:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 285:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 286:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 287:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** int next_row_hook(void* user_struct, struct stream_state* stream)
 288:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 943               	.LM107:
 944               	.LFBB10:
 945 0310 0F93      		push r16
 946 0312 1F93      		push r17
 947 0314 CF93      		push r28
 948 0316 DF93      		push r29
 949               	/* prologue: function */
 950               	/* frame size = 0 */
 951               	/* stack size = 4 */
 952               	.L__stack_usage = 4
 953 0318 EC01      		movw r28,r24
 954 031a 8B01      		movw r16,r22
 289:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     Sensors* sensors = ( Sensors* ) user_struct;
 290:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 291:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     serviceCall();
 956               	.LM108:
 957 031c 0E94 0000 		call serviceCall
 292:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 293:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     if ( sensors->currentRow == MIC_SENSOR_COUNT)
 959               	.LM109:
 960 0320 8C85      		ldd r24,Y+12
 961 0322 8A30      		cpi r24,lo8(10)
 962 0324 01F4      		brne .L48
 294:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 295:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         sensors->currentRow = 0;
 964               	.LM110:
 965 0326 1C86      		std Y+12,__zero_reg__
 296:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         return 0;//-1;
 967               	.LM111:
 968 0328 00C0      		rjmp .L49
 969               	.L48:
 297:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 298:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 299:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     readRow( sensors , stream->row );
 971               	.LM112:
 972 032a F801      		movw r30,r16
 973 032c 6285      		ldd r22,Z+10
 974 032e 7385      		ldd r23,Z+11
 975 0330 CE01      		movw r24,r28
 976 0332 0E94 0000 		call readRow
 300:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 301:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->currentRow++;
 978               	.LM113:
 979 0336 8C85      		ldd r24,Y+12
 980 0338 8F5F      		subi r24,lo8(-(1))
 981 033a 8C87      		std Y+12,r24
 982               	.L49:
 302:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 303:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     return 0;
 304:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 984               	.LM114:
 985 033c 80E0      		ldi r24,0
 986 033e 90E0      		ldi r25,0
 987               	/* epilogue start */
 988 0340 DF91      		pop r29
 989 0342 CF91      		pop r28
 990 0344 1F91      		pop r17
 991 0346 0F91      		pop r16
 992 0348 0895      		ret
 994               	.Lscope10:
 998               	.global	next_frame_hook
 1000               	next_frame_hook:
 305:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 306:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 307:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 308:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** int next_frame_hook(void* user_struct, struct stream_state* stream)
 309:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 1002               	.LM115:
 1003               	.LFBB11:
 1004               	/* prologue: function */
 1005               	/* frame size = 0 */
 1006               	/* stack size = 0 */
 1007               	.L__stack_usage = 0
 310:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     /*
 311:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     Sensors* sensors = ( Sensors*) user_struct;
 312:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 313:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     if ( sensors->currentRow == MIC_SENSOR_COUNT)
 314:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 315:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         sensors->currentRow = 0;
 316:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         return -1;
 317:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 318:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****      */
 319:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 320:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //    call();
 321:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 322:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     return 0;
 323:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 1009               	.LM116:
 1010 034a 80E0      		ldi r24,0
 1011 034c 90E0      		ldi r25,0
 1012 034e 0895      		ret
 1014               	.Lscope11:
 1016               	.Letext0:
 1017               		.ident	"GCC: (GNU) 4.8.1"
DEFINED SYMBOLS
                            *ABS*:00000000 Sensors.c
/var/folders/yp/wn04j3ms5mn9jhx6j8jq8l4c0000gn/T//cc5FluW7.s:2      *ABS*:0000003e __SP_H__
/var/folders/yp/wn04j3ms5mn9jhx6j8jq8l4c0000gn/T//cc5FluW7.s:3      *ABS*:0000003d __SP_L__
/var/folders/yp/wn04j3ms5mn9jhx6j8jq8l4c0000gn/T//cc5FluW7.s:4      *ABS*:0000003f __SREG__
/var/folders/yp/wn04j3ms5mn9jhx6j8jq8l4c0000gn/T//cc5FluW7.s:5      *ABS*:0000003b __RAMPZ__
/var/folders/yp/wn04j3ms5mn9jhx6j8jq8l4c0000gn/T//cc5FluW7.s:6      *ABS*:00000000 __tmp_reg__
/var/folders/yp/wn04j3ms5mn9jhx6j8jq8l4c0000gn/T//cc5FluW7.s:7      *ABS*:00000001 __zero_reg__
/var/folders/yp/wn04j3ms5mn9jhx6j8jq8l4c0000gn/T//cc5FluW7.s:136    .text:00000000 adc_init
/var/folders/yp/wn04j3ms5mn9jhx6j8jq8l4c0000gn/T//cc5FluW7.s:213    .text:0000004c sensors_init
/var/folders/yp/wn04j3ms5mn9jhx6j8jq8l4c0000gn/T//cc5FluW7.s:307    .text:000000a4 sensors_resetCalibration
/var/folders/yp/wn04j3ms5mn9jhx6j8jq8l4c0000gn/T//cc5FluW7.s:323    .text:000000a6 sensors_calibration
/var/folders/yp/wn04j3ms5mn9jhx6j8jq8l4c0000gn/T//cc5FluW7.s:446    .text:00000114 readFrame
/var/folders/yp/wn04j3ms5mn9jhx6j8jq8l4c0000gn/T//cc5FluW7.s:464    .text:00000118 readRow
/var/folders/yp/wn04j3ms5mn9jhx6j8jq8l4c0000gn/T//cc5FluW7.s:712    .text:00000234 log_blob_hook
/var/folders/yp/wn04j3ms5mn9jhx6j8jq8l4c0000gn/T//cc5FluW7.s:875    .text:000002e4 init_pixel_stream_hook
/var/folders/yp/wn04j3ms5mn9jhx6j8jq8l4c0000gn/T//cc5FluW7.s:921    .text:0000030a close_pixel_stream_hook
/var/folders/yp/wn04j3ms5mn9jhx6j8jq8l4c0000gn/T//cc5FluW7.s:941    .text:00000310 next_row_hook
/var/folders/yp/wn04j3ms5mn9jhx6j8jq8l4c0000gn/T//cc5FluW7.s:1000   .text:0000034a next_frame_hook

UNDEFINED SYMBOLS
extract_image
display_setFillColor
display_fillZone
__fixunssfsi
call
serviceCall
