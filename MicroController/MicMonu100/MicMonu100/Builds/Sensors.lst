   1               		.file	"Sensors.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
 131               	.global	adc_init
 133               	adc_init:
   1:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //
   2:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //  Sensors.c
   3:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //  MicMonu100
   4:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //
   5:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //  Created by Manuel Deneu on 01/03/15.
   6:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //  Copyright (c) 2015 Manuel Deneu. All rights reserved.
   7:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //
   8:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
   9:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include <stdio.h>
  10:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include <avr/io.h>
  11:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include <util/delay.h>
  12:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  13:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include "Sensors.h"
  14:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  15:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include "PinsConfig.h"
  16:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include "quickblob.h"
  17:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  18:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** #include "Coms.h"
  19:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  20:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  21:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void analyze(Sensors *sensors);
  22:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  23:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
  24:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  25:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void adc_init(void)
  26:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 135               	.LM0:
 136               	.LFBB1:
 137               	/* prologue: function */
 138               	/* frame size = 0 */
 139               	/* stack size = 0 */
 140               	.L__stack_usage = 0
  27:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     // MICs LDR
  28:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  29:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setOutput( LDR_DATA_DDR       , LDR_DATA_PIN ); // data
 142               	.LM1:
 143 0000 579A      		sbi 0xa,7
  30:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setOutput( LDR_STROBE_DDR     , LDR_STROBE_PIN ); // strobe
 145               	.LM2:
 146 0002 6C9A      		sbi 0xd,4
  31:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setOutput( LDR_OUT_ENABLE_DDR , LDR_OUT_ENABLE_PIN ); // out enable
 148               	.LM3:
 149 0004 6B9A      		sbi 0xd,3
  32:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setOutput( LDR_CLOCK_DDR      , LDR_CLOCK_PIN ); // clock
 151               	.LM4:
 152 0006 539A      		sbi 0xa,3
  33:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  34:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  35:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     /* *** */
  36:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  37:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  38:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setLow(LDR_STROBE_PORT , LDR_STROBE_PIN ); // strobe mic LDR
 154               	.LM5:
 155 0008 7498      		cbi 0xe,4
  39:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  40:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setLow( LDR_CLOCK_PORT , LDR_CLOCK_PIN);
 157               	.LM6:
 158 000a 5B98      		cbi 0xb,3
  41:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  42:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setLow( LDR_OUT_ENABLE_PORT , LDR_OUT_ENABLE_PIN );
 160               	.LM7:
 161 000c 7398      		cbi 0xe,3
  43:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  44:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     //
  45:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  46:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     setLow( LDR_DATA_PORT , LDR_DATA_PIN );
 163               	.LM8:
 164 000e 5F98      		cbi 0xb,7
 165 0010 80E1      		ldi r24,lo8(16)
 166 0012 90E0      		ldi r25,0
 167               	.L3:
 168               	.LBB13:
  47:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  48:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int i=0; i<16; i++)
  49:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         pulse( LDR_CLOCK_PORT , LDR_CLOCK_PIN);
 170               	.LM9:
 171 0014 5B9A      		sbi 0xb,3
 172 0016 5B98      		cbi 0xb,3
 173 0018 0197      		sbiw r24,1
  48:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int i=0; i<16; i++)
 175               	.LM10:
 176 001a 0097      		sbiw r24,0
 177 001c 01F4      		brne .L3
 178               	.LBE13:
  50:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  51:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  52:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     /*
  53:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****      setHigh( LDR_DATA_PORT , LDR_DATA_PIN );
  54:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****      
  55:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****      pulse( LDR_CLOCK_PORT , LDR_CLOCK_PIN);
  56:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****      */
  57:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  58:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  59:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     pulse(LDR_STROBE_PORT, LDR_STROBE_PIN);
 180               	.LM11:
 181 001e 749A      		sbi 0xe,4
 182 0020 7498      		cbi 0xe,4
  60:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  61:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  62:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     /* *** */
  63:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  64:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRA |= ((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0));
 184               	.LM12:
 185 0022 8091 7A00 		lds r24,122
 186 0026 8760      		ori r24,lo8(7)
 187 0028 8093 7A00 		sts 122,r24
  65:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  66:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADMUX |= (1<<REFS0);       //Set Voltage reference to Avcc (5v)
 189               	.LM13:
 190 002c 8091 7C00 		lds r24,124
 191 0030 8064      		ori r24,lo8(64)
 192 0032 8093 7C00 		sts 124,r24
  67:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  68:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRA |= (1<<ADEN);       //Turn on ADC
 194               	.LM14:
 195 0036 8091 7A00 		lds r24,122
 196 003a 8068      		ori r24,lo8(-128)
 197 003c 8093 7A00 		sts 122,r24
  69:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  70:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRA |= (1<<ADSC);
 199               	.LM15:
 200 0040 8091 7A00 		lds r24,122
 201 0044 8064      		ori r24,lo8(64)
 202 0046 8093 7A00 		sts 122,r24
 203 004a 0895      		ret
 205               	.Lscope1:
 208               	.global	sensors_resetCalibration
 210               	sensors_resetCalibration:
  71:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
  72:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  73:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
  74:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  75:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** inline uint16_t adc_read(uint8_t channel)
  76:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
  77:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  78:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADMUX &= 0xE0;           //Clear bits MUX0-4
  79:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADMUX |= channel&0x07;   //Defines the new ADC channel to be read by setting bits MUX0-2
  80:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRB = channel&(1<<3); //Set MUX5
  81:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRA |= (1<<ADSC);      //Starts a new conversion
  82:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  83:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     while( ADCSRA & (1<<ADSC) );  //Wait until the conversion is done
  84:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  85:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     return ADCW;
  86:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
  87:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  88:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
  89:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
  90:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
  91:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void sensors_init( Sensors *sensors)
  92:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
  93:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     adc_init();    
  94:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors_resetCalibration( sensors );
  95:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  96:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->thresholdHigh = 0;
  97:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
  98:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->thresholdLow  = 0;
  99:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 100:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int j = 0; j<MIC_SENSOR_COUNT ; j++) // mics
 101:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 102:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 103:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int i = 0; i < MIC_SENSOR_COUNT ; i++)
 104:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         {
 105:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             sensors->values[i][j] = 0;
 106:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         }
 107:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 108:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 109:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->moyenne     = 1000.0f;
 110:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->prevMoyenne = 1000.0f;
 111:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 112:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 113:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 114:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 115:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 116:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void sensors_resetCalibration( Sensors *sensors )
 117:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 212               	.LM16:
 213               	.LFBB2:
 214               	/* prologue: function */
 215               	/* frame size = 0 */
 216               	/* stack size = 0 */
 217               	.L__stack_usage = 0
 219               	.LM17:
 220 004c 20E0      		ldi r18,0
 221 004e 30E0      		ldi r19,0
 222               	.L6:
 224               	.LM18:
 225 0050 40E0      		ldi r20,0
 226 0052 50E0      		ldi r21,0
 227 0054 BC01      		movw r22,r24
 228 0056 620F      		add r22,r18
 229 0058 731F      		adc r23,r19
 230               	.L9:
 231 005a FB01      		movw r30,r22
 232 005c E40F      		add r30,r20
 233 005e F51F      		adc r31,r21
 234               	.LBB14:
 235               	.LBB15:
 118:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int j = 0; j<MIC_SENSOR_COUNT ; j++) // mics
 119:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 120:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 121:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int i = 0; i < MIC_SENSOR_COUNT ; i++)
 122:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         {
 123:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             sensors->calibValues[i][j] = 0;
 237               	.LM19:
 238 0060 1182      		std Z+1,__zero_reg__
 239 0062 1082      		st Z,__zero_reg__
 240 0064 425E      		subi r20,-30
 241 0066 5F4F      		sbci r21,-1
 121:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int i = 0; i < MIC_SENSOR_COUNT ; i++)
 243               	.LM20:
 244 0068 423C      		cpi r20,-62
 245 006a E1E0      		ldi r30,1
 246 006c 5E07      		cpc r21,r30
 247 006e 01F4      		brne .L9
 248 0070 2E5F      		subi r18,-2
 249 0072 3F4F      		sbci r19,-1
 250               	.LBE15:
 118:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int j = 0; j<MIC_SENSOR_COUNT ; j++) // mics
 252               	.LM21:
 253 0074 2E31      		cpi r18,30
 254 0076 3105      		cpc r19,__zero_reg__
 255 0078 01F4      		brne .L6
 256 007a 0895      		ret
 257               	.LBE14:
 259               	.Lscope2:
 262               	.global	sensors_init
 264               	sensors_init:
  92:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 266               	.LM22:
 267               	.LFBB3:
 268 007c CF93      		push r28
 269 007e DF93      		push r29
 270               	/* prologue: function */
 271               	/* frame size = 0 */
 272               	/* stack size = 2 */
 273               	.L__stack_usage = 2
 274 0080 EC01      		movw r28,r24
  93:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     adc_init();    
 276               	.LM23:
 277 0082 0E94 0000 		call adc_init
  94:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors_resetCalibration( sensors );
 279               	.LM24:
 280 0086 CE01      		movw r24,r28
 281 0088 0E94 0000 		call sensors_resetCalibration
  96:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->thresholdHigh = 0;
 283               	.LM25:
 284 008c FE01      		movw r30,r28
 285 008e EE53      		subi r30,62
 286 0090 FE4F      		sbci r31,-2
 287 0092 1182      		std Z+1,__zero_reg__
 288 0094 1082      		st Z,__zero_reg__
  98:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->thresholdLow  = 0;
 290               	.LM26:
 291 0096 3296      		adiw r30,2
 292 0098 1182      		std Z+1,__zero_reg__
 293 009a 1082      		st Z,__zero_reg__
 294               	.LBB16:
 100:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int j = 0; j<MIC_SENSOR_COUNT ; j++) // mics
 296               	.LM27:
 297 009c 80E0      		ldi r24,0
 298 009e 90E0      		ldi r25,0
 299               	.L11:
 300               	.LBE16:
  92:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 302               	.LM28:
 303 00a0 20E0      		ldi r18,0
 304 00a2 30E0      		ldi r19,0
 305 00a4 AE01      		movw r20,r28
 306 00a6 480F      		add r20,r24
 307 00a8 591F      		adc r21,r25
 308               	.L14:
 309 00aa FA01      		movw r30,r20
 310 00ac E20F      		add r30,r18
 311 00ae F31F      		adc r31,r19
 312 00b0 EF52      		subi r30,47
 313 00b2 FE4F      		sbci r31,-2
 314               	.LBB18:
 315               	.LBB17:
 105:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             sensors->values[i][j] = 0;
 317               	.LM29:
 318 00b4 1082      		st Z,__zero_reg__
 319 00b6 215F      		subi r18,-15
 320 00b8 3F4F      		sbci r19,-1
 103:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int i = 0; i < MIC_SENSOR_COUNT ; i++)
 322               	.LM30:
 323 00ba 213E      		cpi r18,-31
 324 00bc 3105      		cpc r19,__zero_reg__
 325 00be 01F4      		brne .L14
 326               	.LBE17:
 100:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int j = 0; j<MIC_SENSOR_COUNT ; j++) // mics
 328               	.LM31:
 329 00c0 0196      		adiw r24,1
 330 00c2 8F30      		cpi r24,15
 331 00c4 9105      		cpc r25,__zero_reg__
 332 00c6 01F4      		brne .L11
 333               	.LBE18:
 109:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->moyenne     = 1000.0f;
 335               	.LM32:
 336 00c8 FE01      		movw r30,r28
 337 00ca EA53      		subi r30,58
 338 00cc FE4F      		sbci r31,-2
 339 00ce 40E0      		ldi r20,0
 340 00d0 50E0      		ldi r21,0
 341 00d2 6AE7      		ldi r22,lo8(122)
 342 00d4 74E4      		ldi r23,lo8(68)
 343 00d6 4083      		st Z,r20
 344 00d8 5183      		std Z+1,r21
 345 00da 6283      		std Z+2,r22
 346 00dc 7383      		std Z+3,r23
 110:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->prevMoyenne = 1000.0f;
 348               	.LM33:
 349 00de C653      		subi r28,54
 350 00e0 DE4F      		sbci r29,-2
 351 00e2 4883      		st Y,r20
 352 00e4 5983      		std Y+1,r21
 353 00e6 6A83      		std Y+2,r22
 354 00e8 7B83      		std Y+3,r23
 355               	/* epilogue start */
 112:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 357               	.LM34:
 358 00ea DF91      		pop r29
 359 00ec CF91      		pop r28
 360 00ee 0895      		ret
 368               	.Lscope3:
 369               	.global	__floatunsisf
 370               	.global	__addsf3
 371               	.global	__floatsisf
 372               	.global	__divsf3
 373               	.global	__fixunssfsi
 376               	.global	sensors_calibration
 378               	sensors_calibration:
 124:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         }
 125:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 126:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 127:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 128:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 129:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 130:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 131:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void sensors_calibration( Sensors *sensors , uint8_t count)
 132:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 380               	.LM35:
 381               	.LFBB4:
 382 00f0 2F92      		push r2
 383 00f2 3F92      		push r3
 384 00f4 4F92      		push r4
 385 00f6 5F92      		push r5
 386 00f8 6F92      		push r6
 387 00fa 7F92      		push r7
 388 00fc 8F92      		push r8
 389 00fe 9F92      		push r9
 390 0100 AF92      		push r10
 391 0102 BF92      		push r11
 392 0104 CF92      		push r12
 393 0106 DF92      		push r13
 394 0108 EF92      		push r14
 395 010a FF92      		push r15
 396 010c 0F93      		push r16
 397 010e 1F93      		push r17
 398 0110 CF93      		push r28
 399 0112 DF93      		push r29
 400 0114 CDB7      		in r28,__SP_L__
 401 0116 DEB7      		in r29,__SP_H__
 402 0118 C159      		subi r28,-111
 403 011a D340      		sbci r29,3
 404 011c 0FB6      		in __tmp_reg__,__SREG__
 405 011e F894      		cli
 406 0120 DEBF      		out __SP_H__,r29
 407 0122 0FBE      		out __SREG__,__tmp_reg__
 408 0124 CDBF      		out __SP_L__,r28
 409               	/* prologue: function */
 410               	/* frame size = 913 */
 411               	/* stack size = 931 */
 412               	.L__stack_usage = 931
 413 0126 C857      		subi r28,lo8(-904)
 414 0128 DC4F      		sbci r29,hi8(-904)
 415 012a 8883      		st Y,r24
 416 012c C858      		subi r28,lo8(904)
 417 012e D340      		sbci r29,hi8(904)
 418 0130 C757      		subi r28,lo8(-905)
 419 0132 DC4F      		sbci r29,hi8(-905)
 420 0134 9883      		st Y,r25
 421 0136 C958      		subi r28,lo8(905)
 422 0138 D340      		sbci r29,hi8(905)
 423 013a C957      		subi r28,lo8(-903)
 424 013c DC4F      		sbci r29,hi8(-903)
 425 013e 6883      		st Y,r22
 426 0140 C758      		subi r28,lo8(903)
 427 0142 D340      		sbci r29,hi8(903)
 133:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors_resetCalibration( sensors );
 429               	.LM36:
 430 0144 0E94 0000 		call sensors_resetCalibration
 431               	.LBB19:
 134:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 135:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     float temp[ SENSOR_COUNT ][ MIC_SENSOR_COUNT ];
 136:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 137:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 138:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for ( uint8_t iter = 0; iter < count ; iter++)
 433               	.LM37:
 434 0148 712C      		mov r7,__zero_reg__
 435               	.LBB20:
 436               	.LBB21:
 139:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 140:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int j = 0; j<MIC_SENSOR_COUNT ; j++) // mics
 141:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         {
 142:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 143:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             for (int i = 0; i < MIC_SENSOR_COUNT ; i++)
 144:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             {
 145:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 146:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 
 147:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 if (iter == 0)
 148:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                     temp[i][j] = 0;
 149:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 
 150:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 temp[i][j] += (float) adc_read( i );// >> ADC_SHIFT_MULT;
 151:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 
 152:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 if( iter == count-1)
 438               	.LM38:
 439 014a C957      		subi r28,lo8(-903)
 440 014c DC4F      		sbci r29,hi8(-903)
 441 014e 2881      		ld r18,Y
 442 0150 C758      		subi r28,lo8(903)
 443 0152 D340      		sbci r29,hi8(903)
 444 0154 822F      		mov r24,r18
 445 0156 90E0      		ldi r25,0
 446 0158 AC01      		movw r20,r24
 447 015a 4150      		subi r20,1
 448 015c 5109      		sbc r21,__zero_reg__
 449 015e C457      		subi r28,lo8(-908)
 450 0160 DC4F      		sbci r29,hi8(-908)
 451 0162 5983      		std Y+1,r21
 452 0164 4883      		st Y,r20
 453 0166 CC58      		subi r28,lo8(908)
 454 0168 D340      		sbci r29,hi8(908)
 153:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 {
 154:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                     temp[i][j] /= count;
 456               	.LM39:
 457 016a 9C01      		movw r18,r24
 458 016c 4427      		clr r20
 459 016e 37FD      		sbrc r19,7
 460 0170 4095      		com r20
 461 0172 542F      		mov r21,r20
 462 0174 C257      		subi r28,lo8(-910)
 463 0176 DC4F      		sbci r29,hi8(-910)
 464 0178 2883      		st Y,r18
 465 017a 3983      		std Y+1,r19
 466 017c 4A83      		std Y+2,r20
 467 017e 5B83      		std Y+3,r21
 468 0180 CE58      		subi r28,lo8(910)
 469 0182 D340      		sbci r29,hi8(910)
 470               	.L16:
 471               	.LBE21:
 472               	.LBE20:
 138:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for ( uint8_t iter = 0; iter < count ; iter++)
 474               	.LM40:
 475 0184 C957      		subi r28,lo8(-903)
 476 0186 DC4F      		sbci r29,hi8(-903)
 477 0188 8881      		ld r24,Y
 478 018a C758      		subi r28,lo8(903)
 479 018c D340      		sbci r29,hi8(903)
 480 018e 7816      		cp r7,r24
 481 0190 01F4      		brne .+2
 482 0192 00C0      		rjmp .L15
 483 0194 FE01      		movw r30,r28
 484 0196 3196      		adiw r30,1
 485 0198 2F01      		movw r4,r30
 486 019a C857      		subi r28,lo8(-904)
 487 019c DC4F      		sbci r29,hi8(-904)
 488 019e 2880      		ld r2,Y
 489 01a0 C858      		subi r28,lo8(904)
 490 01a2 D340      		sbci r29,hi8(904)
 491 01a4 C757      		subi r28,lo8(-905)
 492 01a6 DC4F      		sbci r29,hi8(-905)
 493 01a8 3880      		ld r3,Y
 494 01aa C958      		subi r28,lo8(905)
 495 01ac D340      		sbci r29,hi8(905)
 138:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for ( uint8_t iter = 0; iter < count ; iter++)
 497               	.LM41:
 498 01ae 00E0      		ldi r16,0
 499 01b0 10E0      		ldi r17,0
 500               	.LBB26:
 501               	.LBB24:
 152:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 if( iter == count-1)
 503               	.LM42:
 504 01b2 272D      		mov r18,r7
 505 01b4 30E0      		ldi r19,0
 506 01b6 C657      		subi r28,lo8(-906)
 507 01b8 DC4F      		sbci r29,hi8(-906)
 508 01ba 3983      		std Y+1,r19
 509 01bc 2883      		st Y,r18
 510 01be CA58      		subi r28,lo8(906)
 511 01c0 D340      		sbci r29,hi8(906)
 512               	.L28:
 513               	.LBE24:
 514               	.LBE26:
 515               	.LBE19:
 132:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 517               	.LM43:
 518 01c2 612C      		mov r6,__zero_reg__
 519 01c4 812C      		mov r8,__zero_reg__
 520 01c6 912C      		mov r9,__zero_reg__
 521 01c8 A12C      		mov r10,__zero_reg__
 522 01ca B12C      		mov r11,__zero_reg__
 523               	.L26:
 524 01cc A201      		movw r20,r4
 525 01ce 4A0D      		add r20,r10
 526 01d0 5B1D      		adc r21,r11
 527 01d2 CB57      		subi r28,lo8(-901)
 528 01d4 DC4F      		sbci r29,hi8(-901)
 529 01d6 5983      		std Y+1,r21
 530 01d8 4883      		st Y,r20
 531 01da C558      		subi r28,lo8(901)
 532 01dc D340      		sbci r29,hi8(901)
 533               	.LBB28:
 534               	.LBB27:
 535               	.LBB25:
 147:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 if (iter == 0)
 537               	.LM44:
 538 01de 7110      		cpse r7,__zero_reg__
 539 01e0 00C0      		rjmp .L17
 148:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                     temp[i][j] = 0;
 541               	.LM45:
 542 01e2 FA01      		movw r30,r20
 543 01e4 1082      		st Z,__zero_reg__
 544 01e6 1182      		std Z+1,__zero_reg__
 545 01e8 1282      		std Z+2,__zero_reg__
 546 01ea 1382      		std Z+3,__zero_reg__
 547               	.L17:
 150:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 temp[i][j] += (float) adc_read( i );// >> ADC_SHIFT_MULT;
 549               	.LM46:
 550 01ec CB57      		subi r28,lo8(-901)
 551 01ee DC4F      		sbci r29,hi8(-901)
 552 01f0 E881      		ld r30,Y
 553 01f2 F981      		ldd r31,Y+1
 554 01f4 C558      		subi r28,lo8(901)
 555 01f6 D340      		sbci r29,hi8(901)
 556 01f8 C080      		ld r12,Z
 557 01fa D180      		ldd r13,Z+1
 558 01fc E280      		ldd r14,Z+2
 559 01fe F380      		ldd r15,Z+3
 560               	.LBB22:
 561               	.LBB23:
  78:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADMUX &= 0xE0;           //Clear bits MUX0-4
 563               	.LM47:
 564 0200 8091 7C00 		lds r24,124
 565 0204 807E      		andi r24,lo8(-32)
 566 0206 8093 7C00 		sts 124,r24
  79:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADMUX |= channel&0x07;   //Defines the new ADC channel to be read by setting bits MUX0-2
 568               	.LM48:
 569 020a 9091 7C00 		lds r25,124
 570 020e 862D      		mov r24,r6
 571 0210 8770      		andi r24,lo8(7)
 572 0212 892B      		or r24,r25
 573 0214 8093 7C00 		sts 124,r24
  80:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRB = channel&(1<<3); //Set MUX5
 575               	.LM49:
 576 0218 862D      		mov r24,r6
 577 021a 8870      		andi r24,lo8(8)
 578 021c 8093 7B00 		sts 123,r24
  81:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRA |= (1<<ADSC);      //Starts a new conversion
 580               	.LM50:
 581 0220 8091 7A00 		lds r24,122
 582 0224 8064      		ori r24,lo8(64)
 583 0226 8093 7A00 		sts 122,r24
 584               	.L19:
  83:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     while( ADCSRA & (1<<ADSC) );  //Wait until the conversion is done
 586               	.LM51:
 587 022a 8091 7A00 		lds r24,122
 588 022e 86FD      		sbrc r24,6
 589 0230 00C0      		rjmp .L19
  85:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     return ADCW;
 591               	.LM52:
 592 0232 6091 7800 		lds r22,120
 593 0236 7091 7900 		lds r23,120+1
 594               	.LBE23:
 595               	.LBE22:
 150:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 temp[i][j] += (float) adc_read( i );// >> ADC_SHIFT_MULT;
 597               	.LM53:
 598 023a 80E0      		ldi r24,0
 599 023c 90E0      		ldi r25,0
 600 023e 0E94 0000 		call __floatunsisf
 601 0242 9B01      		movw r18,r22
 602 0244 AC01      		movw r20,r24
 603 0246 C701      		movw r24,r14
 604 0248 B601      		movw r22,r12
 605 024a 0E94 0000 		call __addsf3
 606 024e 6B01      		movw r12,r22
 607 0250 7C01      		movw r14,r24
 152:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 if( iter == count-1)
 609               	.LM54:
 610 0252 C657      		subi r28,lo8(-906)
 611 0254 DC4F      		sbci r29,hi8(-906)
 612 0256 2881      		ld r18,Y
 613 0258 3981      		ldd r19,Y+1
 614 025a CA58      		subi r28,lo8(906)
 615 025c D340      		sbci r29,hi8(906)
 616 025e C457      		subi r28,lo8(-908)
 617 0260 DC4F      		sbci r29,hi8(-908)
 618 0262 4881      		ld r20,Y
 619 0264 5981      		ldd r21,Y+1
 620 0266 CC58      		subi r28,lo8(908)
 621 0268 D340      		sbci r29,hi8(908)
 622 026a 2417      		cp r18,r20
 623 026c 3507      		cpc r19,r21
 624 026e 01F0      		breq .L20
 150:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 temp[i][j] += (float) adc_read( i );// >> ADC_SHIFT_MULT;
 626               	.LM55:
 627 0270 CB57      		subi r28,lo8(-901)
 628 0272 DC4F      		sbci r29,hi8(-901)
 629 0274 E881      		ld r30,Y
 630 0276 F981      		ldd r31,Y+1
 631 0278 C558      		subi r28,lo8(901)
 632 027a D340      		sbci r29,hi8(901)
 633 027c 6083      		st Z,r22
 634 027e 7183      		std Z+1,r23
 635 0280 8283      		std Z+2,r24
 636 0282 9383      		std Z+3,r25
 637 0284 00C0      		rjmp .L21
 638               	.L20:
 640               	.LM56:
 641 0286 C257      		subi r28,lo8(-910)
 642 0288 DC4F      		sbci r29,hi8(-910)
 643 028a 6881      		ld r22,Y
 644 028c 7981      		ldd r23,Y+1
 645 028e 8A81      		ldd r24,Y+2
 646 0290 9B81      		ldd r25,Y+3
 647 0292 CE58      		subi r28,lo8(910)
 648 0294 D340      		sbci r29,hi8(910)
 649 0296 0E94 0000 		call __floatsisf
 650 029a 9B01      		movw r18,r22
 651 029c AC01      		movw r20,r24
 652 029e C701      		movw r24,r14
 653 02a0 B601      		movw r22,r12
 654 02a2 0E94 0000 		call __divsf3
 655 02a6 CB57      		subi r28,lo8(-901)
 656 02a8 DC4F      		sbci r29,hi8(-901)
 657 02aa E881      		ld r30,Y
 658 02ac F981      		ldd r31,Y+1
 659 02ae C558      		subi r28,lo8(901)
 660 02b0 D340      		sbci r29,hi8(901)
 661 02b2 6083      		st Z,r22
 662 02b4 7183      		std Z+1,r23
 663 02b6 8283      		std Z+2,r24
 664 02b8 9383      		std Z+3,r25
 155:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                     sensors->calibValues[i][j] =  (uint16_t)temp[i][j];
 666               	.LM57:
 667 02ba 0E94 0000 		call __fixunssfsi
 668 02be F101      		movw r30,r2
 669 02c0 E80D      		add r30,r8
 670 02c2 F91D      		adc r31,r9
 671 02c4 7183      		std Z+1,r23
 672 02c6 6083      		st Z,r22
 673               	.L21:
 674 02c8 FCE3      		ldi r31,60
 675 02ca AF0E      		add r10,r31
 676 02cc B11C      		adc r11,__zero_reg__
 677 02ce 2EE1      		ldi r18,30
 678 02d0 820E      		add r8,r18
 679 02d2 911C      		adc r9,__zero_reg__
 680 02d4 6394      		inc r6
 143:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             for (int i = 0; i < MIC_SENSOR_COUNT ; i++)
 682               	.LM58:
 683 02d6 3FE0      		ldi r19,lo8(15)
 684 02d8 6312      		cpse r6,r19
 685 02da 00C0      		rjmp .L26
 686               	.LBE25:
 156:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 }
 157:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             }
 158:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 159:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 160:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             if (j== (MIC_SENSOR_COUNT-1) )
 688               	.LM59:
 689 02dc 0E30      		cpi r16,14
 690 02de 1105      		cpc r17,__zero_reg__
 691 02e0 01F4      		brne .L23
 161:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             {
 162:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 setHigh( LDR_DATA_PORT , LDR_DATA_PIN );
 693               	.LM60:
 694 02e2 5F9A      		sbi 0xb,7
 695 02e4 00C0      		rjmp .L24
 696               	.L23:
 163:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             }
 164:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             else
 165:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             {
 166:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 setLow( LDR_DATA_PORT , LDR_DATA_PIN );
 698               	.LM61:
 699 02e6 5F98      		cbi 0xb,7
 700               	.L24:
 167:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             }
 168:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 169:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             pulse( LDR_CLOCK_PORT , LDR_CLOCK_PIN);
 702               	.LM62:
 703 02e8 5B9A      		sbi 0xb,3
 704 02ea 5B98      		cbi 0xb,3
 170:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 171:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             pulse( LDR_STROBE_PORT, LDR_STROBE_PIN);
 706               	.LM63:
 707 02ec 749A      		sbi 0xe,4
 708 02ee 7498      		cbi 0xe,4
 140:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int j = 0; j<MIC_SENSOR_COUNT ; j++) // mics
 710               	.LM64:
 711 02f0 0F5F      		subi r16,-1
 712 02f2 1F4F      		sbci r17,-1
 713 02f4 44E0      		ldi r20,4
 714 02f6 440E      		add r4,r20
 715 02f8 511C      		adc r5,__zero_reg__
 716 02fa 52E0      		ldi r21,2
 717 02fc 250E      		add r2,r21
 718 02fe 311C      		adc r3,__zero_reg__
 719 0300 0F30      		cpi r16,15
 720 0302 1105      		cpc r17,__zero_reg__
 721 0304 01F0      		breq .+2
 722 0306 00C0      		rjmp .L28
 723               	.LBE27:
 138:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for ( uint8_t iter = 0; iter < count ; iter++)
 725               	.LM65:
 726 0308 7394      		inc r7
 727 030a 00C0      		rjmp .L16
 728               	.L15:
 729               	/* epilogue start */
 730               	.LBE28:
 172:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 173:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         }
 174:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 175:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 176:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 177:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 732               	.LM66:
 733 030c CF56      		subi r28,111
 734 030e DC4F      		sbci r29,-4
 735 0310 0FB6      		in __tmp_reg__,__SREG__
 736 0312 F894      		cli
 737 0314 DEBF      		out __SP_H__,r29
 738 0316 0FBE      		out __SREG__,__tmp_reg__
 739 0318 CDBF      		out __SP_L__,r28
 740 031a DF91      		pop r29
 741 031c CF91      		pop r28
 742 031e 1F91      		pop r17
 743 0320 0F91      		pop r16
 744 0322 FF90      		pop r15
 745 0324 EF90      		pop r14
 746 0326 DF90      		pop r13
 747 0328 CF90      		pop r12
 748 032a BF90      		pop r11
 749 032c AF90      		pop r10
 750 032e 9F90      		pop r9
 751 0330 8F90      		pop r8
 752 0332 7F90      		pop r7
 753 0334 6F90      		pop r6
 754 0336 5F90      		pop r5
 755 0338 4F90      		pop r4
 756 033a 3F90      		pop r3
 757 033c 2F90      		pop r2
 758 033e 0895      		ret
 778               	.Lscope4:
 781               	.global	readFrame
 783               	readFrame:
 178:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 179:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 180:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 181:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void readFrame(Sensors *sensors)
 182:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 785               	.LM67:
 786               	.LFBB5:
 787               	/* prologue: function */
 788               	/* frame size = 0 */
 789               	/* stack size = 0 */
 790               	.L__stack_usage = 0
 183:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     extract_image( sensors );
 792               	.LM68:
 793 0340 0C94 0000 		jmp extract_image
 795               	.Lscope5:
 796               	.global	__fixsfsi
 797               	.global	__mulsf3
 801               	.global	readRow
 803               	readRow:
 184:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 185:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 186:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 187:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 188:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void readRow( Sensors *sensors , uint8_t *buffer)
 189:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 805               	.LM69:
 806               	.LFBB6:
 807 0344 3F92      		push r3
 808 0346 4F92      		push r4
 809 0348 5F92      		push r5
 810 034a 6F92      		push r6
 811 034c 7F92      		push r7
 812 034e 8F92      		push r8
 813 0350 9F92      		push r9
 814 0352 AF92      		push r10
 815 0354 BF92      		push r11
 816 0356 CF92      		push r12
 817 0358 DF92      		push r13
 818 035a EF92      		push r14
 819 035c FF92      		push r15
 820 035e 0F93      		push r16
 821 0360 1F93      		push r17
 822 0362 CF93      		push r28
 823 0364 DF93      		push r29
 824               	/* prologue: function */
 825               	/* frame size = 0 */
 826               	/* stack size = 17 */
 827               	.L__stack_usage = 17
 190:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     const uint8_t j = sensors->currentRow;
 829               	.LM70:
 830 0366 FC01      		movw r30,r24
 831 0368 E053      		subi r30,48
 832 036a FE4F      		sbci r31,-2
 833 036c 3080      		ld r3,Z
 191:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 192:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     if (sensors->currentRow == 0 )
 835               	.LM71:
 836 036e 3110      		cpse r3,__zero_reg__
 837 0370 00C0      		rjmp .L31
 193:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 194:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         setHigh( LDR_DATA_PORT , LDR_DATA_PIN );
 839               	.LM72:
 840 0372 5F9A      		sbi 0xb,7
 841 0374 00C0      		rjmp .L32
 842               	.L31:
 195:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 196:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 197:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     else
 198:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 199:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         setLow( LDR_DATA_PORT , LDR_DATA_PIN );
 844               	.LM73:
 845 0376 5F98      		cbi 0xb,7
 846               	.L32:
 200:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 201:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 202:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     pulse( LDR_CLOCK_PORT , LDR_CLOCK_PIN);
 848               	.LM74:
 849 0378 5B9A      		sbi 0xb,3
 850 037a 5B98      		cbi 0xb,3
 203:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     pulse( LDR_STROBE_PORT, LDR_STROBE_PIN);
 852               	.LM75:
 853 037c 749A      		sbi 0xe,4
 854 037e 7498      		cbi 0xe,4
 855               	.LBB29:
 856               	.LBB30:
 858               	.Ltext1:
   1:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   6:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   9:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  12:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      distribution.
  16:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  17:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  21:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  33:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* $Id$ */
  34:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  35:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  38:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  41:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  42:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  46:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \file */
  47:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \code
  49:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \endcode
  53:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  54:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     used.
  58:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  59:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  68:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  77:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  81:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** */
  82:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  83:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  87:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  88:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  93:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  94:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  97:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  98:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
 103:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 104:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /**
 105:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 107:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 109:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 112:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 114:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 120:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 125:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 129:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 132:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 140:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  */
 141:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** void
 142:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** {
 144:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	double __tmp ; 
 145:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 146:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 147:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 148:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 149:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 152:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 153:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 154:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 155:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 156:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 157:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 158:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#else
 159:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//round up by default
 160:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 161:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#endif
 162:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 163:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 164:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 165:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #else
 166:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint16_t __ticks;
 167:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 168:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 169:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks = 1;
 170:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 171:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	{
 172:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 173:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 174:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		while(__ticks)
 175:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		{
 176:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 			// wait 1/10 ms
 177:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 178:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 			__ticks --;
 179:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		}
 180:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		return;
 181:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	}
 182:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	else
 183:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 184:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 185:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
 186:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** }
 187:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 188:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /**
 189:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    \ingroup util_delay
 190:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 191:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
 192:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 193:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 194:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 195:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 196:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 197:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 198:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 199:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 200:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    will not be informed about this case.
 201:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 202:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 203:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 us/ F_CPU in MHz. For
 204:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflow results in
 205:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    no delay i.e., 0us.
 206:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   
 207:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 208:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 209:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 210:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 211:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 212:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    to round down and round to closest integer.
 213:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  
 214:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Note: The new implementation of _delay_us(double __us) with 
 215:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible.
 216:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 217:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Also, the backward compatible
 218:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 219:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 220:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 221:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 222:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  */
 223:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** void
 224:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** _delay_us(double __us)
 225:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** {
 226:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	double __tmp ; 
 227:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 228:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 229:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 230:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 231:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 232:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 233:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 234:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 235:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 236:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 237:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 238:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 239:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 240:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#else
 241:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//round up by default
 242:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 243:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#endif
 244:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 245:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 860               	.LM76:
 861 0380 EFEF      		ldi r30,lo8(6399)
 862 0382 F8E1      		ldi r31,hi8(6399)
 863 0384 3197      		1: sbiw r30,1
 864 0386 01F4      		brne 1b
 865 0388 00C0      		rjmp .
 866 038a 0000      		nop
 867 038c 00E0      		ldi r16,0
 868 038e 10E0      		ldi r17,0
 869               	.LBE30:
 870               	.LBE29:
 871               	.LBB31:
 873               	.Ltext2:
 204:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 205:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 206:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 207:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     _delay_us( 1600 );    // 1500
 208:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 209:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int i = 0; i < MIC_SENSOR_COUNT ; i++)
 875               	.LM77:
 876 0390 C0E0      		ldi r28,0
 877 0392 D0E0      		ldi r29,0
 878               	.LBB32:
 210:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** //    for (int i = 14; i >= 0 ; i--)
 211:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 212:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 213:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 214:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         const int read = adc_read( i );
 215:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         const int diffLow  = ( int ) ( sensors->prevMoyenne*0.65f ); // 0.65
 880               	.LM78:
 881 0394 4C01      		movw r8,r24
 882 0396 F6E3      		ldi r31,54
 883 0398 8F1A      		sub r8,r31
 884 039a FEEF      		ldi r31,-2
 885 039c 9F0A      		sbc r9,r31
 216:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         const int diffHigh = ( int ) ( sensors->prevMoyenne*2.0f );
 217:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 218:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         int val = read;
 219:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 220:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 221:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         if ( read<diffHigh )
 222:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         {
 223:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             sensors->moyenne+= read;
 887               	.LM79:
 888 039e 6C01      		movw r12,r24
 889 03a0 2AE3      		ldi r18,58
 890 03a2 C21A      		sub r12,r18
 891 03a4 2EEF      		ldi r18,-2
 892 03a6 D20A      		sbc r13,r18
 893 03a8 5C01      		movw r10,r24
 894 03aa A30C      		add r10,r3
 895 03ac B11C      		adc r11,__zero_reg__
 896               	.L40:
 897               	.LBB33:
 898               	.LBB34:
  78:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADMUX &= 0xE0;           //Clear bits MUX0-4
 900               	.LM80:
 901 03ae 8091 7C00 		lds r24,124
 902 03b2 807E      		andi r24,lo8(-32)
 903 03b4 8093 7C00 		sts 124,r24
  79:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADMUX |= channel&0x07;   //Defines the new ADC channel to be read by setting bits MUX0-2
 905               	.LM81:
 906 03b8 9091 7C00 		lds r25,124
 907 03bc 8C2F      		mov r24,r28
 908 03be 8770      		andi r24,lo8(7)
 909 03c0 892B      		or r24,r25
 910 03c2 8093 7C00 		sts 124,r24
  80:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRB = channel&(1<<3); //Set MUX5
 912               	.LM82:
 913 03c6 8C2F      		mov r24,r28
 914 03c8 8870      		andi r24,lo8(8)
 915 03ca 8093 7B00 		sts 123,r24
  81:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     ADCSRA |= (1<<ADSC);      //Starts a new conversion
 917               	.LM83:
 918 03ce 8091 7A00 		lds r24,122
 919 03d2 8064      		ori r24,lo8(64)
 920 03d4 8093 7A00 		sts 122,r24
 921               	.L34:
  83:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     while( ADCSRA & (1<<ADSC) );  //Wait until the conversion is done
 923               	.LM84:
 924 03d8 8091 7A00 		lds r24,122
 925 03dc 86FD      		sbrc r24,6
 926 03de 00C0      		rjmp .L34
  85:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     return ADCW;
 928               	.LM85:
 929 03e0 E090 7800 		lds r14,120
 930 03e4 F090 7900 		lds r15,120+1
 931               	.LBE34:
 932               	.LBE33:
 215:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         const int diffLow  = ( int ) ( sensors->prevMoyenne*0.65f ); // 0.65
 934               	.LM86:
 935 03e8 F401      		movw r30,r8
 936 03ea 4080      		ld r4,Z
 937 03ec 5180      		ldd r5,Z+1
 938 03ee 6280      		ldd r6,Z+2
 939 03f0 7380      		ldd r7,Z+3
 216:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         const int diffHigh = ( int ) ( sensors->prevMoyenne*2.0f );
 941               	.LM87:
 942 03f2 A301      		movw r20,r6
 943 03f4 9201      		movw r18,r4
 944 03f6 C301      		movw r24,r6
 945 03f8 B201      		movw r22,r4
 946 03fa 0E94 0000 		call __addsf3
 947 03fe 0E94 0000 		call __fixsfsi
 221:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         if ( read<diffHigh )
 949               	.LM88:
 950 0402 E616      		cp r14,r22
 951 0404 F706      		cpc r15,r23
 952 0406 04F0      		brlt .L35
 953               	.L37:
 224:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         }
 225:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 226:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         /* *** *** *** */
 227:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 228:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 229:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         // light
 230:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         if ( read>=diffHigh)
 231:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         {
 232:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             val = BLOB_SHADOW;
 955               	.LM89:
 956 0408 8FE7      		ldi r24,lo8(127)
 957 040a 00C0      		rjmp .L36
 958               	.L35:
 223:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             sensors->moyenne+= read;
 960               	.LM90:
 961 040c B701      		movw r22,r14
 962 040e 8827      		clr r24
 963 0410 77FD      		sbrc r23,7
 964 0412 8095      		com r24
 965 0414 982F      		mov r25,r24
 966 0416 0E94 0000 		call __floatsisf
 967 041a 9B01      		movw r18,r22
 968 041c AC01      		movw r20,r24
 969 041e F601      		movw r30,r12
 970 0420 6081      		ld r22,Z
 971 0422 7181      		ldd r23,Z+1
 972 0424 8281      		ldd r24,Z+2
 973 0426 9381      		ldd r25,Z+3
 974 0428 0E94 0000 		call __addsf3
 975 042c F601      		movw r30,r12
 976 042e 6083      		st Z,r22
 977 0430 7183      		std Z+1,r23
 978 0432 8283      		std Z+2,r24
 979 0434 9383      		std Z+3,r25
 215:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         const int diffLow  = ( int ) ( sensors->prevMoyenne*0.65f ); // 0.65
 981               	.LM91:
 982 0436 26E6      		ldi r18,lo8(102)
 983 0438 36E6      		ldi r19,lo8(102)
 984 043a 46E2      		ldi r20,lo8(38)
 985 043c 5FE3      		ldi r21,lo8(63)
 986 043e C301      		movw r24,r6
 987 0440 B201      		movw r22,r4
 988 0442 0E94 0000 		call __mulsf3
 989 0446 0E94 0000 		call __fixsfsi
 233:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         }
 234:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 235:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         // Shadow
 236:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         else if ( val < diffLow )
 991               	.LM92:
 992 044a E616      		cp r14,r22
 993 044c F706      		cpc r15,r23
 994 044e 04F0      		brlt .L37
 237:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             val = BLOB_SHADOW;
 238:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 239:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         else
 240:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         {
 241:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 242:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             val = 0;
 996               	.LM93:
 997 0450 80E0      		ldi r24,0
 998               	.L36:
 243:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         }
 244:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 245:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 246:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /*
 247:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         if ( buffer != NULL)
 248:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             buffer[i] =(uint8_t) val ;
 249:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** */
 250:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 251:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         // temp : ignore edges
 252:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 253:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         if( (i!= 0) && ( i!= SENSOR_COUNT-1 ) && ( j!= 0) && ( j!= SENSOR_COUNT-1 ))
 1000               	.LM94:
 1001 0452 2097      		sbiw r28,0
 1002 0454 01F0      		breq .L38
 1004               	.LM95:
 1005 0456 CE30      		cpi r28,14
 1006 0458 D105      		cpc r29,__zero_reg__
 1007 045a 01F0      		breq .L38
 1008 045c 3320      		tst r3
 1009 045e 01F0      		breq .L38
 1010 0460 FEE0      		ldi r31,lo8(14)
 1011 0462 3F16      		cp r3,r31
 1012 0464 01F0      		breq .L38
 1013 0466 F501      		movw r30,r10
 1014 0468 E00F      		add r30,r16
 1015 046a F11F      		adc r31,r17
 1016 046c EF52      		subi r30,47
 1017 046e FE4F      		sbci r31,-2
 254:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             sensors->values[i][ j ] = val;
 1019               	.LM96:
 1020 0470 8083      		st Z,r24
 1021               	.L38:
 1022               	.LBE32:
 209:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int i = 0; i < MIC_SENSOR_COUNT ; i++)
 1024               	.LM97:
 1025 0472 2196      		adiw r28,1
 1026 0474 015F      		subi r16,-15
 1027 0476 1F4F      		sbci r17,-1
 1028 0478 CF30      		cpi r28,15
 1029 047a D105      		cpc r29,__zero_reg__
 1030 047c 01F0      		breq .+2
 1031 047e 00C0      		rjmp .L40
 1032               	/* epilogue start */
 1033               	.LBE31:
 255:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 256:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 257:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 258:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 259:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 260:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 261:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 1035               	.LM98:
 1036 0480 DF91      		pop r29
 1037 0482 CF91      		pop r28
 1038 0484 1F91      		pop r17
 1039 0486 0F91      		pop r16
 1040 0488 FF90      		pop r15
 1041 048a EF90      		pop r14
 1042 048c DF90      		pop r13
 1043 048e CF90      		pop r12
 1044 0490 BF90      		pop r11
 1045 0492 AF90      		pop r10
 1046 0494 9F90      		pop r9
 1047 0496 8F90      		pop r8
 1048 0498 7F90      		pop r7
 1049 049a 6F90      		pop r6
 1050 049c 5F90      		pop r5
 1051 049e 4F90      		pop r4
 1052 04a0 3F90      		pop r3
 1053 04a2 0895      		ret
 1061               	.Lscope6:
 1064               	.global	analyze
 1066               	analyze:
 262:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 263:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 264:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void readAll( Sensors *sensors)
 265:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 266:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->currentRow = 0;
 267:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 268:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->moyenne = 0;
 269:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 270:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for ( int i=0; i< MIC_SENSOR_COUNT;i++ )
 271:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 272:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         readRow( sensors, NULL );
 273:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         sensors->currentRow++;
 274:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 275:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 276:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->moyenne /= MIC_SENSOR_COUNT * SENSOR_COUNT;
 277:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 278:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->prevMoyenne = sensors->moyenne;
 279:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 280:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     analyze( sensors );
 281:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 282:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 283:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int i = 0; i<MIC_SENSOR_COUNT ; i++)
 284:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int j = 0 ; j<SENSOR_COUNT ; j++)
 285:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         {
 286:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             const uint8_t x = j*2;
 287:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             const uint8_t y = (14-i)*2;
 288:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 289:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             const uint8_t val =sensors->values[i][j];
 290:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 291:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             if(  val != sensors->display->buff_A[y][x] )
 292:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             {
 293:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 display_setFillColor( sensors->display, val );
 294:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 
 295:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 display_fillZone( sensors->display , x , y  , 2, 2 );
 296:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             }
 297:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         }
 298:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 299:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 300:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 301:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 302:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void analyze(Sensors *sensors)
 303:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 1068               	.LM99:
 1069               	.LFBB7:
 1070               	/* prologue: function */
 1071               	/* frame size = 0 */
 1072               	/* stack size = 0 */
 1073               	.L__stack_usage = 0
 1074 04a4 0F96      		adiw r24,15
 1075               	.LBB35:
 304:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 305:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int x = 1; x<MIC_SENSOR_COUNT-1 ; x++)
 1077               	.LM100:
 1078 04a6 61E0      		ldi r22,lo8(1)
 1079 04a8 70E0      		ldi r23,0
 1080               	.L54:
 1081               	.LBE35:
 303:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 1083               	.LM101:
 1084 04aa 40E0      		ldi r20,0
 1085 04ac 50E0      		ldi r21,0
 1086               	.L58:
 1087 04ae 9C01      		movw r18,r24
 1088 04b0 240F      		add r18,r20
 1089 04b2 351F      		adc r19,r21
 1090 04b4 D901      		movw r26,r18
 1091 04b6 AF52      		subi r26,47
 1092 04b8 BE4F      		sbci r27,-2
 1093 04ba F901      		movw r30,r18
 1094 04bc EE53      		subi r30,62
 1095 04be FE4F      		sbci r31,-2
 1096               	.LBB38:
 1097               	.LBB36:
 1098               	.LBB37:
 306:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 307:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int y = 1 ; y<SENSOR_COUNT -1 ; y++)
 308:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         {
 309:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             /*
 310:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****               a b c
 311:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****               d E f
 312:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****               g h i
 313:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****              */
 314:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             const uint8_t a = sensors->values[x-1][y-1];
 315:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             const uint8_t b = sensors->values[x  ][y-1];
 316:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             const uint8_t c = sensors->values[x+1][y-1];
 317:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 318:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             const uint8_t d = sensors->values[x-1][y];
 319:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 320:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             const uint8_t f = sensors->values[x+1][y];
 321:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 322:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             const uint8_t g = sensors->values[x-1][y+1];
 323:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             const uint8_t h = sensors->values[x  ][y+1];
 324:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             const uint8_t i = sensors->values[x+1][y+1];
 325:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 326:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             const uint8_t sum =a+b+c+d+f+g+h+i;
 1100               	.LM102:
 1101 04c0 AC91      		ld r26,X
 1102 04c2 E081      		ld r30,Z
 1103 04c4 AE0F      		add r26,r30
 1104 04c6 F901      		movw r30,r18
 1105 04c8 E052      		subi r30,32
 1106 04ca FE4F      		sbci r31,-2
 1107 04cc E081      		ld r30,Z
 1108 04ce AE0F      		add r26,r30
 1109 04d0 F901      		movw r30,r18
 1110 04d2 ED53      		subi r30,61
 1111 04d4 FE4F      		sbci r31,-2
 1112 04d6 E081      		ld r30,Z
 1113 04d8 AE0F      		add r26,r30
 1114 04da F901      		movw r30,r18
 1115 04dc EF51      		subi r30,31
 1116 04de FE4F      		sbci r31,-2
 1117 04e0 E081      		ld r30,Z
 1118 04e2 AE0F      		add r26,r30
 1119 04e4 F901      		movw r30,r18
 1120 04e6 EC53      		subi r30,60
 1121 04e8 FE4F      		sbci r31,-2
 1122 04ea E081      		ld r30,Z
 1123 04ec AE0F      		add r26,r30
 1124 04ee F901      		movw r30,r18
 1125 04f0 ED52      		subi r30,45
 1126 04f2 FE4F      		sbci r31,-2
 1127 04f4 E081      		ld r30,Z
 1128 04f6 AE0F      		add r26,r30
 1129 04f8 F901      		movw r30,r18
 1130 04fa EE51      		subi r30,30
 1131 04fc FE4F      		sbci r31,-2
 1132 04fe E081      		ld r30,Z
 1133 0500 AE0F      		add r26,r30
 327:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 328:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             if( sum == 0 )
 1135               	.LM103:
 1136 0502 01F4      		brne .L55
 1137 0504 F901      		movw r30,r18
 1138 0506 EE52      		subi r30,46
 1139 0508 FE4F      		sbci r31,-2
 329:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 sensors->values[x][y] =0 ;
 1141               	.LM104:
 1142 050a 1082      		st Z,__zero_reg__
 1143               	.L55:
 1144 050c 4F5F      		subi r20,-1
 1145 050e 5F4F      		sbci r21,-1
 1146               	.LBE37:
 307:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int y = 1 ; y<SENSOR_COUNT -1 ; y++)
 1148               	.LM105:
 1149 0510 4D30      		cpi r20,13
 1150 0512 5105      		cpc r21,__zero_reg__
 1151 0514 01F4      		brne .L58
 1152 0516 6F5F      		subi r22,-1
 1153 0518 7F4F      		sbci r23,-1
 1154 051a 0F96      		adiw r24,15
 1155               	.LBE36:
 305:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int x = 1; x<MIC_SENSOR_COUNT-1 ; x++)
 1157               	.LM106:
 1158 051c 6E30      		cpi r22,14
 1159 051e 7105      		cpc r23,__zero_reg__
 1160 0520 01F4      		brne .L54
 1161 0522 0895      		ret
 1162               	.LBE38:
 1170               	.Lscope7:
 1173               	.global	readAll
 1175               	readAll:
 265:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 1177               	.LM107:
 1178               	.LFBB8:
 1179 0524 8F92      		push r8
 1180 0526 9F92      		push r9
 1181 0528 AF92      		push r10
 1182 052a BF92      		push r11
 1183 052c CF92      		push r12
 1184 052e DF92      		push r13
 1185 0530 EF92      		push r14
 1186 0532 FF92      		push r15
 1187 0534 0F93      		push r16
 1188 0536 1F93      		push r17
 1189 0538 CF93      		push r28
 1190 053a DF93      		push r29
 1191               	/* prologue: function */
 1192               	/* frame size = 0 */
 1193               	/* stack size = 12 */
 1194               	.L__stack_usage = 12
 1195 053c EC01      		movw r28,r24
 266:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->currentRow = 0;
 1197               	.LM108:
 1198 053e 8C01      		movw r16,r24
 1199 0540 0053      		subi r16,48
 1200 0542 1E4F      		sbci r17,-2
 1201 0544 F801      		movw r30,r16
 1202 0546 1082      		st Z,__zero_reg__
 268:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->moyenne = 0;
 1204               	.LM109:
 1205 0548 7C01      		movw r14,r24
 1206 054a FAE3      		ldi r31,58
 1207 054c EF1A      		sub r14,r31
 1208 054e FEEF      		ldi r31,-2
 1209 0550 FF0A      		sbc r15,r31
 1210 0552 F701      		movw r30,r14
 1211 0554 1082      		st Z,__zero_reg__
 1212 0556 1182      		std Z+1,__zero_reg__
 1213 0558 1282      		std Z+2,__zero_reg__
 1214 055a 1382      		std Z+3,__zero_reg__
 1215 055c 4FE0      		ldi r20,lo8(15)
 1216 055e C42E      		mov r12,r20
 1217 0560 D12C      		mov r13,__zero_reg__
 1218               	.L61:
 1219               	.LBB39:
 272:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         readRow( sensors, NULL );
 1221               	.LM110:
 1222 0562 60E0      		ldi r22,0
 1223 0564 70E0      		ldi r23,0
 1224 0566 CE01      		movw r24,r28
 1225 0568 0E94 0000 		call readRow
 273:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         sensors->currentRow++;
 1227               	.LM111:
 1228 056c F801      		movw r30,r16
 1229 056e 8081      		ld r24,Z
 1230 0570 8F5F      		subi r24,lo8(-(1))
 1231 0572 8083      		st Z,r24
 1232 0574 F1E0      		ldi r31,1
 1233 0576 CF1A      		sub r12,r31
 1234 0578 D108      		sbc r13,__zero_reg__
 270:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for ( int i=0; i< MIC_SENSOR_COUNT;i++ )
 1236               	.LM112:
 1237 057a C114      		cp r12,__zero_reg__
 1238 057c D104      		cpc r13,__zero_reg__
 1239 057e 01F4      		brne .L61
 1240               	.LBE39:
 276:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->moyenne /= MIC_SENSOR_COUNT * SENSOR_COUNT;
 1242               	.LM113:
 1243 0580 20E0      		ldi r18,0
 1244 0582 30E0      		ldi r19,0
 1245 0584 41E6      		ldi r20,lo8(97)
 1246 0586 53E4      		ldi r21,lo8(67)
 1247 0588 F701      		movw r30,r14
 1248 058a 6081      		ld r22,Z
 1249 058c 7181      		ldd r23,Z+1
 1250 058e 8281      		ldd r24,Z+2
 1251 0590 9381      		ldd r25,Z+3
 1252 0592 0E94 0000 		call __divsf3
 1253 0596 F701      		movw r30,r14
 1254 0598 6083      		st Z,r22
 1255 059a 7183      		std Z+1,r23
 1256 059c 8283      		std Z+2,r24
 1257 059e 9383      		std Z+3,r25
 278:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->prevMoyenne = sensors->moyenne;
 1259               	.LM114:
 1260 05a0 FE01      		movw r30,r28
 1261 05a2 E653      		subi r30,54
 1262 05a4 FE4F      		sbci r31,-2
 1263 05a6 6083      		st Z,r22
 1264 05a8 7183      		std Z+1,r23
 1265 05aa 8283      		std Z+2,r24
 1266 05ac 9383      		std Z+3,r25
 280:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     analyze( sensors );
 1268               	.LM115:
 1269 05ae CE01      		movw r24,r28
 1270 05b0 0E94 0000 		call analyze
 1271 05b4 1CE1      		ldi r17,lo8(28)
 1272               	.LBB40:
 1273               	.LBB41:
 1274               	.LBB42:
 291:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             if(  val != sensors->display->buff_A[y][x] )
 1276               	.LM116:
 1277 05b6 6E01      		movw r12,r28
 1278 05b8 F2E3      		ldi r31,50
 1279 05ba CF1A      		sub r12,r31
 1280 05bc FEEF      		ldi r31,-2
 1281 05be DF0A      		sbc r13,r31
 1282 05c0 3EE1      		ldi r19,lo8(30)
 1283 05c2 932E      		mov r9,r19
 1284               	.L62:
 291:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             if(  val != sensors->display->buff_A[y][x] )
 1286               	.LM117:
 1287 05c4 E12C      		mov r14,__zero_reg__
 1288 05c6 F12C      		mov r15,__zero_reg__
 1289 05c8 919E      		mul r9,r17
 1290 05ca 5001      		movw r10,r0
 1291 05cc 1124      		clr __zero_reg__
 1292               	.L66:
 1293 05ce 8E2C      		mov r8,r14
 1294 05d0 880C      		lsl r8
 1295 05d2 FE01      		movw r30,r28
 1296 05d4 EE0D      		add r30,r14
 1297 05d6 FF1D      		adc r31,r15
 1298 05d8 EF52      		subi r30,47
 1299 05da FE4F      		sbci r31,-2
 289:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             const uint8_t val =sensors->values[i][j];
 1301               	.LM118:
 1302 05dc 6081      		ld r22,Z
 291:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             if(  val != sensors->display->buff_A[y][x] )
 1304               	.LM119:
 1305 05de F601      		movw r30,r12
 1306 05e0 8081      		ld r24,Z
 1307 05e2 9181      		ldd r25,Z+1
 1308 05e4 F701      		movw r30,r14
 1309 05e6 EE0F      		lsl r30
 1310 05e8 FF1F      		rol r31
 1311 05ea EA0D      		add r30,r10
 1312 05ec FB1D      		adc r31,r11
 1313 05ee E80F      		add r30,r24
 1314 05f0 F91F      		adc r31,r25
 1315 05f2 3081      		ld r19,Z
 1316 05f4 6317      		cp r22,r19
 1317 05f6 01F0      		breq .L63
 293:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 display_setFillColor( sensors->display, val );
 1319               	.LM120:
 1320 05f8 0E94 0000 		call display_setFillColor
 295:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****                 display_fillZone( sensors->display , x , y  , 2, 2 );
 1322               	.LM121:
 1323 05fc 02E0      		ldi r16,lo8(2)
 1324 05fe 22E0      		ldi r18,lo8(2)
 1325 0600 412F      		mov r20,r17
 1326 0602 682D      		mov r22,r8
 1327 0604 F601      		movw r30,r12
 1328 0606 8081      		ld r24,Z
 1329 0608 9181      		ldd r25,Z+1
 1330 060a 0E94 0000 		call display_fillZone
 1331               	.L63:
 1332               	.LBE42:
 284:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         for (int j = 0 ; j<SENSOR_COUNT ; j++)
 1334               	.LM122:
 1335 060e FFEF      		ldi r31,-1
 1336 0610 EF1A      		sub r14,r31
 1337 0612 FF0A      		sbc r15,r31
 1338 0614 8FE0      		ldi r24,15
 1339 0616 E816      		cp r14,r24
 1340 0618 F104      		cpc r15,__zero_reg__
 1341 061a 01F4      		brne .L66
 1342 061c 1250      		subi r17,lo8(-(-2))
 1343 061e 2F96      		adiw r28,15
 1344               	.LBE41:
 283:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     for (int i = 0; i<MIC_SENSOR_COUNT ; i++)
 1346               	.LM123:
 1347 0620 1E3F      		cpi r17,lo8(-2)
 1348 0622 01F4      		brne .L62
 1349               	/* epilogue start */
 1350               	.LBE40:
 298:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 1352               	.LM124:
 1353 0624 DF91      		pop r29
 1354 0626 CF91      		pop r28
 1355 0628 1F91      		pop r17
 1356 062a 0F91      		pop r16
 1357 062c FF90      		pop r15
 1358 062e EF90      		pop r14
 1359 0630 DF90      		pop r13
 1360 0632 CF90      		pop r12
 1361 0634 BF90      		pop r11
 1362 0636 AF90      		pop r10
 1363 0638 9F90      		pop r9
 1364 063a 8F90      		pop r8
 1365 063c 0895      		ret
 1373               	.Lscope8:
 1374               	.global	__subsf3
 1378               	.global	log_blob_hook
 1380               	log_blob_hook:
 330:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****             
 331:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         }
 332:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 333:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 334:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 335:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 336:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 337:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 338:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** void log_blob_hook(void* user_struct, struct blob* b)
 339:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 1382               	.LM125:
 1383               	.LFBB9:
 1384 063e 8F92      		push r8
 1385 0640 9F92      		push r9
 1386 0642 AF92      		push r10
 1387 0644 BF92      		push r11
 1388 0646 CF92      		push r12
 1389 0648 DF92      		push r13
 1390 064a EF92      		push r14
 1391 064c FF92      		push r15
 1392 064e 0F93      		push r16
 1393 0650 1F93      		push r17
 1394 0652 CF93      		push r28
 1395 0654 DF93      		push r29
 1396 0656 00D0      		rcall .
 1397 0658 1F92      		push __zero_reg__
 1398 065a CDB7      		in r28,__SP_L__
 1399 065c DEB7      		in r29,__SP_H__
 1400               	/* prologue: function */
 1401               	/* frame size = 4 */
 1402               	/* stack size = 16 */
 1403               	.L__stack_usage = 16
 1404 065e 4B01      		movw r8,r22
 340:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 341:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 342:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     const uint8_t x = b->center_y*2;
 1406               	.LM126:
 1407 0660 FB01      		movw r30,r22
 1408 0662 C688      		ldd r12,Z+22
 1409 0664 D788      		ldd r13,Z+23
 1410 0666 E08C      		ldd r14,Z+24
 1411 0668 F18C      		ldd r15,Z+25
 343:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     const uint8_t y = (14-b->center_x)*2;
 1413               	.LM127:
 1414 066a 2289      		ldd r18,Z+18
 1415 066c 3389      		ldd r19,Z+19
 1416 066e 4489      		ldd r20,Z+20
 1417 0670 5589      		ldd r21,Z+21
 344:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 345:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     /*
 346:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     if ( ( x <-BLOB_MARGIN ) || ( y <-BLOB_MARGIN ))
 347:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         return;
 348:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 349:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     if ( (x >(30+BLOB_MARGIN)) || (y>(30+BLOB_MARGIN) ) )
 350:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         return;
 351:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 352:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 353:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 354:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     if (( b->size < MIN_BLOB_SIZE ) || ( b->size > MAX_BLOB_SIZE ))
 355:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         return;
 356:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 357:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****      */
 358:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 359:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 360:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     const Sensors* sensors = ( const Sensors* ) user_struct;
 361:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 362:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 363:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     display_clear(sensors->display);
 1419               	.LM128:
 1420 0672 8253      		subi r24,50
 1421 0674 9E4F      		sbci r25,-2
 1422 0676 5C01      		movw r10,r24
 1423 0678 FC01      		movw r30,r24
 1424 067a 8081      		ld r24,Z
 1425 067c 9181      		ldd r25,Z+1
 1426 067e 2983      		std Y+1,r18
 1427 0680 3A83      		std Y+2,r19
 1428 0682 4B83      		std Y+3,r20
 1429 0684 5C83      		std Y+4,r21
 1430 0686 0E94 0000 		call display_clear
 364:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     display_setFillColor( sensors->display, 255 );
 1432               	.LM129:
 1433 068a 6FEF      		ldi r22,lo8(-1)
 1434 068c F501      		movw r30,r10
 1435 068e 8081      		ld r24,Z
 1436 0690 9181      		ldd r25,Z+1
 1437 0692 0E94 0000 		call display_setFillColor
 365:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 366:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 367:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     if ( b->color == BLOB_SHADOW )
 1439               	.LM130:
 1440 0696 F401      		movw r30,r8
 1441 0698 8281      		ldd r24,Z+2
 1442 069a 9381      		ldd r25,Z+3
 1443 069c 2981      		ldd r18,Y+1
 1444 069e 3A81      		ldd r19,Y+2
 1445 06a0 4B81      		ldd r20,Y+3
 1446 06a2 5C81      		ldd r21,Y+4
 1447 06a4 8F37      		cpi r24,127
 1448 06a6 9105      		cpc r25,__zero_reg__
 1449 06a8 01F4      		brne .L68
 1450               	.LBB43:
 368:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 369:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         const uint8_t x1 = b->bb_x1*2;
 370:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         const uint8_t y1 = (14-b->bb_y1)*2;
 371:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 372:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         const uint8_t x2 = b->bb_x2*2;
 373:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         const uint8_t y2 = (14-b->bb_y2)*2;
 1452               	.LM131:
 1453 06aa 4EE0      		ldi r20,lo8(14)
 1454 06ac 50E0      		ldi r21,0
 1455 06ae 80A1      		ldd r24,Z+32
 1456 06b0 91A1      		ldd r25,Z+33
 1457 06b2 8A01      		movw r16,r20
 1458 06b4 081B      		sub r16,r24
 1459 06b6 190B      		sbc r17,r25
 1460 06b8 000F      		lsl r16
 372:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         const uint8_t x2 = b->bb_x2*2;
 1462               	.LM132:
 1463 06ba 268D      		ldd r18,Z+30
 1464 06bc 220F      		lsl r18
 370:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         const uint8_t y1 = (14-b->bb_y1)*2;
 1466               	.LM133:
 1467 06be 848D      		ldd r24,Z+28
 1468 06c0 958D      		ldd r25,Z+29
 1469 06c2 481B      		sub r20,r24
 1470 06c4 590B      		sbc r21,r25
 1471 06c6 440F      		lsl r20
 369:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         const uint8_t x1 = b->bb_x1*2;
 1473               	.LM134:
 1474 06c8 628D      		ldd r22,Z+26
 1475 06ca 660F      		lsl r22
 374:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 375:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         display_fillZone( sensors->display , x1, y1, x2 , y2 );
 1477               	.LM135:
 1478 06cc F501      		movw r30,r10
 1479 06ce 8081      		ld r24,Z
 1480 06d0 9181      		ldd r25,Z+1
 1481 06d2 0E94 0000 		call display_fillZone
 1482               	.LBE43:
 1483 06d6 00C0      		rjmp .L67
 1484               	.L68:
 376:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 377:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 378:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     else if (b->color == BLOB_LIGHT )
 1486               	.LM136:
 1487 06d8 8F3F      		cpi r24,-1
 1488 06da 9105      		cpc r25,__zero_reg__
 1489 06dc 01F4      		brne .L67
 343:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     const uint8_t y = (14-b->center_x)*2;
 1491               	.LM137:
 1492 06de 60E0      		ldi r22,0
 1493 06e0 70E0      		ldi r23,0
 1494 06e2 80E6      		ldi r24,lo8(96)
 1495 06e4 91E4      		ldi r25,lo8(65)
 1496 06e6 0E94 0000 		call __subsf3
 1497 06ea 9B01      		movw r18,r22
 1498 06ec AC01      		movw r20,r24
 1499 06ee 0E94 0000 		call __addsf3
 1500 06f2 0E94 0000 		call __fixunssfsi
 1501 06f6 162F      		mov r17,r22
 342:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     const uint8_t x = b->center_y*2;
 1503               	.LM138:
 1504 06f8 A701      		movw r20,r14
 1505 06fa 9601      		movw r18,r12
 1506 06fc C701      		movw r24,r14
 1507 06fe B601      		movw r22,r12
 1508 0700 0E94 0000 		call __addsf3
 1509 0704 0E94 0000 		call __fixunssfsi
 379:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 380:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         display_drawCircle(sensors->display, x, y, b->size);
 1511               	.LM139:
 1512 0708 F401      		movw r30,r8
 1513 070a 2081      		ld r18,Z
 1514 070c 412F      		mov r20,r17
 1515 070e F501      		movw r30,r10
 1516 0710 8081      		ld r24,Z
 1517 0712 9181      		ldd r25,Z+1
 1518               	/* epilogue start */
 381:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 382:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 383:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 384:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 385:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 1520               	.LM140:
 1521 0714 0F90      		pop __tmp_reg__
 1522 0716 0F90      		pop __tmp_reg__
 1523 0718 0F90      		pop __tmp_reg__
 1524 071a 0F90      		pop __tmp_reg__
 1525 071c DF91      		pop r29
 1526 071e CF91      		pop r28
 1527 0720 1F91      		pop r17
 1528 0722 0F91      		pop r16
 1529 0724 FF90      		pop r15
 1530 0726 EF90      		pop r14
 1531 0728 DF90      		pop r13
 1532 072a CF90      		pop r12
 1533 072c BF90      		pop r11
 1534 072e AF90      		pop r10
 1535 0730 9F90      		pop r9
 1536 0732 8F90      		pop r8
 380:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         display_drawCircle(sensors->display, x, y, b->size);
 1538               	.LM141:
 1539 0734 0C94 0000 		jmp display_drawCircle
 1540               	.L67:
 1541               	/* epilogue start */
 1543               	.LM142:
 1544 0738 0F90      		pop __tmp_reg__
 1545 073a 0F90      		pop __tmp_reg__
 1546 073c 0F90      		pop __tmp_reg__
 1547 073e 0F90      		pop __tmp_reg__
 1548 0740 DF91      		pop r29
 1549 0742 CF91      		pop r28
 1550 0744 1F91      		pop r17
 1551 0746 0F91      		pop r16
 1552 0748 FF90      		pop r15
 1553 074a EF90      		pop r14
 1554 074c DF90      		pop r13
 1555 074e CF90      		pop r12
 1556 0750 BF90      		pop r11
 1557 0752 AF90      		pop r10
 1558 0754 9F90      		pop r9
 1559 0756 8F90      		pop r8
 1560 0758 0895      		ret
 1562               	.Lscope9:
 1566               	.global	init_pixel_stream_hook
 1568               	init_pixel_stream_hook:
 386:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 387:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 388:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 389:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** int init_pixel_stream_hook(void* user_struct, struct stream_state* stream)
 390:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 1570               	.LM143:
 1571               	.LFBB10:
 1572               	/* prologue: function */
 1573               	/* frame size = 0 */
 1574               	/* stack size = 0 */
 1575               	.L__stack_usage = 0
 1576 075a FB01      		movw r30,r22
 391:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 392:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     Sensors* sensors = ( Sensors* ) user_struct;
 393:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->currentRow = 0;
 1578               	.LM144:
 1579 075c 8053      		subi r24,48
 1580 075e 9E4F      		sbci r25,-2
 1581 0760 DC01      		movw r26,r24
 1582 0762 1C92      		st X,__zero_reg__
 394:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 395:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     stream->w = SENSOR_COUNT;
 1584               	.LM145:
 1585 0764 8FE0      		ldi r24,lo8(15)
 1586 0766 90E0      		ldi r25,0
 1587 0768 9183      		std Z+1,r25
 1588 076a 8083      		st Z,r24
 396:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     stream->h = SENSOR_COUNT;
 1590               	.LM146:
 1591 076c 9383      		std Z+3,r25
 1592 076e 8283      		std Z+2,r24
 397:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     stream->x = 0;
 1594               	.LM147:
 1595 0770 1582      		std Z+5,__zero_reg__
 1596 0772 1482      		std Z+4,__zero_reg__
 398:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     stream->y = 0;
 1598               	.LM148:
 1599 0774 1782      		std Z+7,__zero_reg__
 1600 0776 1682      		std Z+6,__zero_reg__
 399:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 400:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     return 0;
 401:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 1602               	.LM149:
 1603 0778 80E0      		ldi r24,0
 1604 077a 90E0      		ldi r25,0
 1605 077c 0895      		ret
 1607               	.Lscope10:
 1611               	.global	close_pixel_stream_hook
 1613               	close_pixel_stream_hook:
 402:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 403:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 404:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 405:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** int close_pixel_stream_hook(void* user_struct, struct stream_state* stream)
 406:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 1615               	.LM150:
 1616               	.LFBB11:
 1617               	/* prologue: function */
 1618               	/* frame size = 0 */
 1619               	/* stack size = 0 */
 1620               	.L__stack_usage = 0
 407:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 408:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     return 0;
 409:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 1622               	.LM151:
 1623 077e 80E0      		ldi r24,0
 1624 0780 90E0      		ldi r25,0
 1625 0782 0895      		ret
 1627               	.Lscope11:
 1631               	.global	next_row_hook
 1633               	next_row_hook:
 410:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 411:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 412:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 413:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** int next_row_hook(void* user_struct, struct stream_state* stream)
 414:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 1635               	.LM152:
 1636               	.LFBB12:
 1637 0784 CF93      		push r28
 1638 0786 DF93      		push r29
 1639               	/* prologue: function */
 1640               	/* frame size = 0 */
 1641               	/* stack size = 2 */
 1642               	.L__stack_usage = 2
 415:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     Sensors* sensors = ( Sensors* ) user_struct;
 416:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 417:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     if ( sensors->currentRow == SENSOR_COUNT)
 1644               	.LM153:
 1645 0788 EC01      		movw r28,r24
 1646 078a C053      		subi r28,48
 1647 078c DE4F      		sbci r29,-2
 1648 078e 2881      		ld r18,Y
 1649 0790 2F30      		cpi r18,lo8(15)
 1650 0792 01F0      		breq .L74
 418:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 419:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         
 420:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         return -1;
 421:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 422:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 423:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     readRow( sensors , stream->row );
 1652               	.LM154:
 1653 0794 FB01      		movw r30,r22
 1654 0796 6285      		ldd r22,Z+10
 1655 0798 7385      		ldd r23,Z+11
 1656 079a 0E94 0000 		call readRow
 424:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 425:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->currentRow++;
 1658               	.LM155:
 1659 079e 8881      		ld r24,Y
 1660 07a0 8F5F      		subi r24,lo8(-(1))
 1661 07a2 8883      		st Y,r24
 426:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 427:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 428:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 429:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     return 0;
 1663               	.LM156:
 1664 07a4 80E0      		ldi r24,0
 1665 07a6 90E0      		ldi r25,0
 1666 07a8 00C0      		rjmp .L73
 1667               	.L74:
 420:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         return -1;
 1669               	.LM157:
 1670 07aa 8FEF      		ldi r24,lo8(-1)
 1671 07ac 9FEF      		ldi r25,lo8(-1)
 1672               	.L73:
 1673               	/* epilogue start */
 430:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 1675               	.LM158:
 1676 07ae DF91      		pop r29
 1677 07b0 CF91      		pop r28
 1678 07b2 0895      		ret
 1680               	.Lscope12:
 1684               	.global	next_frame_hook
 1686               	next_frame_hook:
 431:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 432:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** */
 433:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 434:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** int next_frame_hook(void* user_struct, struct stream_state* stream)
 435:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** {
 1688               	.LM159:
 1689               	.LFBB13:
 1690 07b4 CF93      		push r28
 1691 07b6 DF93      		push r29
 1692               	/* prologue: function */
 1693               	/* frame size = 0 */
 1694               	/* stack size = 2 */
 1695               	.L__stack_usage = 2
 436:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 437:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     Sensors* sensors = ( Sensors*) user_struct;
 438:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     sensors->currentRow = 0;
 1697               	.LM160:
 1698 07b8 EC01      		movw r28,r24
 1699 07ba C053      		subi r28,48
 1700 07bc DE4F      		sbci r29,-2
 1701 07be 1882      		st Y,__zero_reg__
 439:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 440:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 441:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     userCall();
 1703               	.LM161:
 1704 07c0 0E94 0000 		call userCall
 442:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 443:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     if ( sensors->currentRow == SENSOR_COUNT)
 1706               	.LM162:
 1707 07c4 8881      		ld r24,Y
 1708 07c6 8F30      		cpi r24,lo8(15)
 1709 07c8 01F4      		brne .L77
 444:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     {
 445:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         sensors->currentRow = 0;
 1711               	.LM163:
 1712 07ca 1882      		st Y,__zero_reg__
 446:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****         return -1;
 1714               	.LM164:
 1715 07cc 8FEF      		ldi r24,lo8(-1)
 1716 07ce 9FEF      		ldi r25,lo8(-1)
 1717 07d0 00C0      		rjmp .L76
 1718               	.L77:
 447:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     }
 448:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 449:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 450:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     
 451:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** 
 452:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c ****     return 0;
 1720               	.LM165:
 1721 07d2 80E0      		ldi r24,0
 1722 07d4 90E0      		ldi r25,0
 1723               	.L76:
 1724               	/* epilogue start */
 453:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/Sensors.c **** }
 1726               	.LM166:
 1727 07d6 DF91      		pop r29
 1728 07d8 CF91      		pop r28
 1729 07da 0895      		ret
 1731               	.Lscope13:
 1733               	.Letext0:
 1734               		.ident	"GCC: (GNU) 4.8.1"
DEFINED SYMBOLS
                            *ABS*:00000000 Sensors.c
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccxZ0bih.s:2      *ABS*:0000003e __SP_H__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccxZ0bih.s:3      *ABS*:0000003d __SP_L__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccxZ0bih.s:4      *ABS*:0000003f __SREG__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccxZ0bih.s:5      *ABS*:0000003b __RAMPZ__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccxZ0bih.s:6      *ABS*:00000000 __tmp_reg__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccxZ0bih.s:7      *ABS*:00000001 __zero_reg__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccxZ0bih.s:133    .text:00000000 adc_init
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccxZ0bih.s:210    .text:0000004c sensors_resetCalibration
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccxZ0bih.s:264    .text:0000007c sensors_init
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccxZ0bih.s:378    .text:000000f0 sensors_calibration
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccxZ0bih.s:783    .text:00000340 readFrame
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccxZ0bih.s:803    .text:00000344 readRow
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccxZ0bih.s:1066   .text:000004a4 analyze
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccxZ0bih.s:1175   .text:00000524 readAll
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccxZ0bih.s:1380   .text:0000063e log_blob_hook
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccxZ0bih.s:1568   .text:0000075a init_pixel_stream_hook
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccxZ0bih.s:1613   .text:0000077e close_pixel_stream_hook
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccxZ0bih.s:1633   .text:00000784 next_row_hook
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccxZ0bih.s:1686   .text:000007b4 next_frame_hook

UNDEFINED SYMBOLS
__floatunsisf
__addsf3
__floatsisf
__divsf3
__fixunssfsi
extract_image
__fixsfsi
__mulsf3
display_setFillColor
display_fillZone
__subsf3
display_clear
display_drawCircle
userCall
