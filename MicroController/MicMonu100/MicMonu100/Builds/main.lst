   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
 126               		.section	.rodata.str1.1,"aMS",@progbits,1
 127               	.LC0:
 128 0000 4D69 6368 		.string	"Michel\nDurand"
 128      656C 0A44 
 128      7572 616E 
 128      6400 
 129               	.LC1:
 130 000e 6368 656C 		.string	"chelMi\nranDdu"
 130      4D69 0A72 
 130      616E 4464 
 130      7500 
 131               		.text
 133               	.global	writeNext
 135               	writeNext:
   1:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
   2:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <stdlib.h> 
   3:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <stdio.h>
   4:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
   5:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <avr/io.h>
   6:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
   7:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <avr/pgmspace.h>
   8:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <avr/interrupt.h>
   9:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  10:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <util/delay.h>
  11:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <math.h>
  12:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  13:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include "PinsConfig.h"
  14:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  15:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include "Sensors.h"
  16:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  17:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include "Display.h"
  18:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include "Images.h"
  19:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  20:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** */
  21:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /*
  22:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     Global constants defines
  23:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****  */
  24:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  25:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  26:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  27:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  28:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  29:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** Display _display;
  30:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** Sensors _sensors;
  31:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  32:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  33:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  34:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** *
  35:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  36:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****  inline uint16_t adc_read(uint8_t ch)
  37:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** {
  38:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // select the corresponding channel 0~7
  39:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // ANDing with ’7′ will always keep the value
  40:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // of ‘ch’ between 0 and 7
  41:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ch &= 0b00000111;  // AND operation with 7
  42:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ADMUX = (ADMUX & 0xF8)|ch; // clears the bottom 3 bits before ORing
  43:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
  44:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // start single convertion
  45:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // write ’1′ to ADSC
  46:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ADCSRA |= (1<<ADSC);
  47:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
  48:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // wait for conversion to complete
  49:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // ADSC becomes ’0′ again
  50:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // till then, run loop continuously
  51:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     while(ADCSRA & (1<<ADSC));
  52:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
  53:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     return (ADC);
  54:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** }
  55:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  56:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  57:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** *
  58:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  59:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** void writeNext(void)
  60:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** {
 137               	.LM0:
 138               	.LFBB1:
 139 0000 0F93      		push r16
 140               	/* prologue: function */
 141               	/* frame size = 0 */
 142               	/* stack size = 1 */
 143               	.L__stack_usage = 1
  61:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     const  uint8_t count = 2;
  62:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     static uint8_t index=0;
  63:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  64:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     display_clear( &_display);
 145               	.LM1:
 146 0002 80E0      		ldi r24,lo8(_display)
 147 0004 90E0      		ldi r25,hi8(_display)
 148 0006 0E94 0000 		call display_clear
  65:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
  66:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     if (index == 0)
 150               	.LM2:
 151 000a 8091 0000 		lds r24,index.2129
 152 000e 8111      		cpse r24,__zero_reg__
 153 0010 00C0      		rjmp .L2
  67:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     {
  68:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  69:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         display_write( &_display,"Michel\nDurand",0,0);
 155               	.LM3:
 156 0012 20E0      		ldi r18,0
 157 0014 40E0      		ldi r20,0
 158 0016 60E0      		ldi r22,lo8(.LC0)
 159 0018 70E0      		ldi r23,hi8(.LC0)
 160 001a 80E0      		ldi r24,lo8(_display)
 161 001c 90E0      		ldi r25,hi8(_display)
 162 001e 0E94 0000 		call display_write
  70:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
  71:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         _display.fillColor = 0b10101010;
 164               	.LM4:
 165 0022 8AEA      		ldi r24,lo8(-86)
 166 0024 00C0      		rjmp .L6
 167               	.L2:
  72:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         display_fillZone( &_display, 5, 22, 5, 5);
  73:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     }
  74:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
  75:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     else if (index == 1)
 169               	.LM5:
 170 0026 8130      		cpi r24,lo8(1)
 171 0028 01F4      		brne .L3
  76:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     {
  77:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  78:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         display_write( &_display,"chelMi\nranDdu", 0,0);
 173               	.LM6:
 174 002a 20E0      		ldi r18,0
 175 002c 40E0      		ldi r20,0
 176 002e 60E0      		ldi r22,lo8(.LC1)
 177 0030 70E0      		ldi r23,hi8(.LC1)
 178 0032 80E0      		ldi r24,lo8(_display)
 179 0034 90E0      		ldi r25,hi8(_display)
 180 0036 0E94 0000 		call display_write
  79:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
  80:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         _display.fillColor = 0b00010000;
 182               	.LM7:
 183 003a 80E1      		ldi r24,lo8(16)
 184               	.L6:
 185 003c 8093 0000 		sts _display+1803,r24
  81:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         display_fillZone( &_display, 5, 22, 5, 5);
 187               	.LM8:
 188 0040 05E0      		ldi r16,lo8(5)
 189 0042 25E0      		ldi r18,lo8(5)
 190 0044 46E1      		ldi r20,lo8(22)
 191 0046 65E0      		ldi r22,lo8(5)
 192 0048 80E0      		ldi r24,lo8(_display)
 193 004a 90E0      		ldi r25,hi8(_display)
 194 004c 0E94 0000 		call display_fillZone
 195               	.L3:
  82:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     }
  83:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** //        writeName2();
  84:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
  85:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     index++;
 197               	.LM9:
 198 0050 8091 0000 		lds r24,index.2129
 199 0054 8F5F      		subi r24,lo8(-(1))
  86:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
  87:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****   
  88:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
  89:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     if (index == count)
 201               	.LM10:
 202 0056 8230      		cpi r24,lo8(2)
 203 0058 01F0      		breq .L4
  85:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     index++;
 205               	.LM11:
 206 005a 8093 0000 		sts index.2129,r24
 207 005e 00C0      		rjmp .L1
 208               	.L4:
  90:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         index = 0;
 210               	.LM12:
 211 0060 1092 0000 		sts index.2129,__zero_reg__
 212               	.L1:
 213               	/* epilogue start */
  91:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
  92:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** }
 215               	.LM13:
 216 0064 0F91      		pop r16
 217 0066 0895      		ret
 222               	.Lscope1:
 223               		.section	.rodata.str1.1
 224               	.LC2:
 225 001c 6361 6E20 		.string	"can ID"
 225      4944 00
 226               	.LC3:
 227 0023 2569 00   		.string	"%i"
 228               	.global	__divsf3
 229               	.global	__subsf3
 230               	.global	__gesf2
 231               	.global	__floatunsisf
 232               	.global	__addsf3
 233               		.section	.text.startup,"ax",@progbits
 235               	.global	main
 237               	main:
  93:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  94:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** *
  95:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  96:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** int main( void )
  97:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** {
 239               	.LM14:
 240               	.LFBB2:
 241 0000 CF93      		push r28
 242 0002 DF93      		push r29
 243 0004 00D0      		rcall .
 244 0006 CDB7      		in r28,__SP_L__
 245 0008 DEB7      		in r29,__SP_H__
 246               	/* prologue: function */
 247               	/* frame size = 3 */
 248               	/* stack size = 5 */
 249               	.L__stack_usage = 5
  98:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /* Hardware configuration */
  99:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 100:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     display_init( &_display);
 251               	.LM15:
 252 000a 80E0      		ldi r24,lo8(_display)
 253 000c 90E0      		ldi r25,hi8(_display)
 254 000e 0E94 0000 		call display_init
 101:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 102:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 103:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 104:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     sensors_init( &_sensors);
 256               	.LM16:
 257 0012 80E0      		ldi r24,lo8(_sensors)
 258 0014 90E0      		ldi r25,hi8(_sensors)
 259 0016 0E94 0000 		call sensors_init
 105:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 106:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 107:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 108:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 109:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 110:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 111:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 112:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 113:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     sei();
 261               	.LM17:
 262               	/* #APP */
 263               	 ;  113 "/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/mai
 264 001a 7894      		sei
 265               	 ;  0 "" 2
 114:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 115:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 116:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /* **** Splash wait **** */
 117:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 118:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****    display_writeImage( &_display, catImage);
 267               	.LM18:
 268               	/* #NOAPP */
 269 001c 60E0      		ldi r22,lo8(catImage)
 270 001e 70E0      		ldi r23,hi8(catImage)
 271 0020 80E0      		ldi r24,lo8(_display)
 272 0022 90E0      		ldi r25,hi8(_display)
 273 0024 0E94 0000 		call display_writeImage
 274               	.LBB12:
 275               	.LBB13:
 277               	.Ltext1:
   1:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   6:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   9:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  12:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      distribution.
  16:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  17:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  21:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  33:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* $Id$ */
  34:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  35:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  38:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  41:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  42:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  46:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \file */
  47:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \code
  49:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \endcode
  53:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  54:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     used.
  58:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  59:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  68:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  77:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  81:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** */
  82:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  83:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  87:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  88:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  93:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  94:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  97:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  98:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
 103:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 104:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /**
 105:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 107:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 109:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 112:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 114:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 120:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 125:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 129:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 132:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 140:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  */
 141:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** void
 142:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** {
 144:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	double __tmp ; 
 145:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 146:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 147:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 148:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 149:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 152:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 153:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 154:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 155:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 156:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 157:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 158:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#else
 159:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//round up by default
 160:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 161:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#endif
 162:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 163:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 279               	.LM19:
 280 0028 2FEF      		ldi r18,lo8(3199999)
 281 002a 83ED      		ldi r24,hi8(3199999)
 282 002c 90E3      		ldi r25,hlo8(3199999)
 283 002e 2150      		1: subi r18,1
 284 0030 8040      		sbci r24,0
 285 0032 9040      		sbci r25,0
 286 0034 01F4      		brne 1b
 287 0036 00C0      		rjmp .
 288 0038 0000      		nop
 289               	.LBE13:
 290               	.LBE12:
 292               	.Ltext2:
 119:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 120:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 121:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     _delay_ms(1000);
 122:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 123:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /* **** END OF Splash wait **** */
 124:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 125:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /* WRITE CAN ID */
 126:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 127:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     display_clear( &_display);
 294               	.LM20:
 295 003a 80E0      		ldi r24,lo8(_display)
 296 003c 90E0      		ldi r25,hi8(_display)
 297 003e 0E94 0000 		call display_clear
 128:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 129:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     display_write( &_display,"can ID", 0, 0);
 299               	.LM21:
 300 0042 20E0      		ldi r18,0
 301 0044 40E0      		ldi r20,0
 302 0046 60E0      		ldi r22,lo8(.LC2)
 303 0048 70E0      		ldi r23,hi8(.LC2)
 304 004a 80E0      		ldi r24,lo8(_display)
 305 004c 90E0      		ldi r25,hi8(_display)
 306 004e 0E94 0000 		call display_write
 130:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 131:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     char str[3];
 132:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     sprintf(str, "%i" , 16);
 308               	.LM22:
 309 0052 1F92      		push __zero_reg__
 310 0054 80E1      		ldi r24,lo8(16)
 311 0056 8F93      		push r24
 312 0058 80E0      		ldi r24,lo8(.LC3)
 313 005a 90E0      		ldi r25,hi8(.LC3)
 314 005c 9F93      		push r25
 315 005e 8F93      		push r24
 316 0060 8E01      		movw r16,r28
 317 0062 0F5F      		subi r16,-1
 318 0064 1F4F      		sbci r17,-1
 319 0066 1F93      		push r17
 320 0068 0F93      		push r16
 321 006a 0E94 0000 		call sprintf
 133:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     display_write( &_display,str, 0, 8);
 323               	.LM23:
 324 006e 28E0      		ldi r18,lo8(8)
 325 0070 40E0      		ldi r20,0
 326 0072 B801      		movw r22,r16
 327 0074 80E0      		ldi r24,lo8(_display)
 328 0076 90E0      		ldi r25,hi8(_display)
 329 0078 0E94 0000 		call display_write
 330 007c 0F90      		pop __tmp_reg__
 331 007e 0F90      		pop __tmp_reg__
 332 0080 0F90      		pop __tmp_reg__
 333 0082 0F90      		pop __tmp_reg__
 334 0084 0F90      		pop __tmp_reg__
 335 0086 0F90      		pop __tmp_reg__
 134:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 135:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /* END OF WRITE CAN ID */
 136:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 137:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     uint8_t ldr_index = MIC_SENCOR_COUNT;
 138:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 139:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     float prevVal = 0.f;
 140:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     float dVal    =0.f;
 337               	.LM24:
 338 0088 C12C      		mov r12,__zero_reg__
 339 008a B12C      		mov r11,__zero_reg__
 340 008c 912C      		mov r9,__zero_reg__
 341 008e 812C      		mov r8,__zero_reg__
 139:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     float prevVal = 0.f;
 343               	.LM25:
 344 0090 412C      		mov r4,__zero_reg__
 345 0092 512C      		mov r5,__zero_reg__
 346 0094 612C      		mov r6,__zero_reg__
 347 0096 712C      		mov r7,__zero_reg__
 137:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     uint8_t ldr_index = MIC_SENCOR_COUNT;
 349               	.LM26:
 350 0098 8FE0      		ldi r24,lo8(15)
 351 009a D82E      		mov r13,r24
 352               	.LBB14:
 141:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 142:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     uint8_t debouceMax  = 2;
 143:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     static uint8_t debounceCount = 0;
 144:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 145:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     for (;;)
 146:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     {
 147:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         if ( ldr_index == MIC_SENCOR_COUNT)
 148:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         {
 149:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             setHigh( LDR_DATA_PORT , LDR_DATA_PIN );
 150:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             ldr_index = 0;
 151:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 152:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             // matrice entiere
 153:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 154:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             dVal /= MIC_SENCOR_COUNT*SENSOR_COUNT;
 155:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 156:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             float res = fabs( dVal -prevVal );
 157:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 158:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 159:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 160:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             if ((res >= 100) )
 161:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             {
 162:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                 if ( debounceCount >= debouceMax)
 163:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                 {
 164:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     writeNext();
 165:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     
 166:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     _display.buff_A[29][29] = 255;
 354               	.LM27:
 355 009c AA24      		clr r10
 356 009e AA94      		dec r10
 357               	.L17:
 358               	.LBE14:
 147:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         if ( ldr_index == MIC_SENCOR_COUNT)
 360               	.LM28:
 361 00a0 2FE0      		ldi r18,lo8(15)
 362 00a2 D212      		cpse r13,r18
 363 00a4 00C0      		rjmp .L9
 364               	.LBB17:
 149:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             setHigh( LDR_DATA_PORT , LDR_DATA_PIN );
 366               	.LM29:
 367 00a6 5F9A      		sbi 0xb,7
 154:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             dVal /= MIC_SENCOR_COUNT*SENSOR_COUNT;
 369               	.LM30:
 370 00a8 20E0      		ldi r18,0
 371 00aa 30E0      		ldi r19,0
 372 00ac 41E6      		ldi r20,lo8(97)
 373 00ae 53E4      		ldi r21,lo8(67)
 374 00b0 6C2D      		mov r22,r12
 375 00b2 7B2D      		mov r23,r11
 376 00b4 892D      		mov r24,r9
 377 00b6 982D      		mov r25,r8
 378 00b8 0E94 0000 		call __divsf3
 379 00bc 7B01      		movw r14,r22
 380 00be 8C01      		movw r16,r24
 156:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             float res = fabs( dVal -prevVal );
 382               	.LM31:
 383 00c0 9201      		movw r18,r4
 384 00c2 A301      		movw r20,r6
 385 00c4 0E94 0000 		call __subsf3
 386 00c8 9F77      		andi r25,0x7f
 160:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             if ((res >= 100) )
 388               	.LM32:
 389 00ca 20E0      		ldi r18,0
 390 00cc 30E0      		ldi r19,0
 391 00ce 48EC      		ldi r20,lo8(-56)
 392 00d0 52E4      		ldi r21,lo8(66)
 393 00d2 0E94 0000 		call __gesf2
 394 00d6 87FD      		sbrc r24,7
 395 00d8 00C0      		rjmp .L20
 162:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                 if ( debounceCount >= debouceMax)
 397               	.LM33:
 398 00da 8091 0000 		lds r24,debounceCount.2138
 399 00de 8230      		cpi r24,lo8(2)
 400 00e0 00F0      		brlo .L12
 164:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     writeNext();
 402               	.LM34:
 403 00e2 0E94 0000 		call writeNext
 405               	.LM35:
 406 00e6 A092 0000 		sts _display+899,r10
 407               	.LBB15:
 408               	.LBB16:
 410               	.Ltext3:
 412               	.LM36:
 413 00ea 8FEF      		ldi r24,lo8(319999)
 414 00ec 91EE      		ldi r25,hi8(319999)
 415 00ee 24E0      		ldi r18,hlo8(319999)
 416 00f0 8150      		1: subi r24,1
 417 00f2 9040      		sbci r25,0
 418 00f4 2040      		sbci r18,0
 419 00f6 01F4      		brne 1b
 420 00f8 00C0      		rjmp .
 421 00fa 0000      		nop
 422               	.LBE16:
 423               	.LBE15:
 425               	.Ltext4:
 167:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     _delay_ms(100);
 168:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     _display.buff_A[29][29] = 0;
 427               	.LM37:
 428 00fc 1092 0000 		sts _display+899,__zero_reg__
 169:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     
 170:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     debounceCount = 0;
 430               	.LM38:
 431 0100 1092 0000 		sts debounceCount.2138,__zero_reg__
 432 0104 00C0      		rjmp .L20
 433               	.L12:
 171:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                 }
 172:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                 else
 173:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     debounceCount++;
 435               	.LM39:
 436 0106 8F5F      		subi r24,lo8(-(1))
 437 0108 8093 0000 		sts debounceCount.2138,r24
 438 010c 00C0      		rjmp .L20
 439               	.L9:
 440               	.LBE17:
 174:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                 
 175:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 176:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             }
 177:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 178:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             prevVal = dVal;
 179:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         }
 180:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 181:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         else
 182:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             setLow( LDR_DATA_PORT , LDR_DATA_PIN );
 442               	.LM40:
 443 010e 5F98      		cbi 0xb,7
 444 0110 7201      		movw r14,r4
 445 0112 8301      		movw r16,r6
 446 0114 00C0      		rjmp .L10
 447               	.L20:
 448               	.LBB18:
 154:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             dVal /= MIC_SENCOR_COUNT*SENSOR_COUNT;
 450               	.LM41:
 451 0116 CE2C      		mov r12,r14
 452 0118 BF2C      		mov r11,r15
 453 011a 902E      		mov r9,r16
 454 011c 812E      		mov r8,r17
 150:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             ldr_index = 0;
 456               	.LM42:
 457 011e D12C      		mov r13,__zero_reg__
 458               	.L10:
 459               	.LBE18:
 183:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 184:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 185:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         pulse( LDR_CLOCK_PORT , LDR_CLOCK_PIN);
 461               	.LM43:
 462 0120 5E9A      		sbi 0xb,6
 463 0122 5E98      		cbi 0xb,6
 464 0124 712C      		mov r7,__zero_reg__
 465               	.L16:
 466               	.LBB19:
 467               	.LBB20:
 468               	.LBB21:
  42:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ADMUX = (ADMUX & 0xF8)|ch; // clears the bottom 3 bits before ORing
 470               	.LM44:
 471 0126 9091 7C00 		lds r25,124
  41:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ch &= 0b00000111;  // AND operation with 7
 473               	.LM45:
 474 012a 872D      		mov r24,r7
 475 012c 8770      		andi r24,lo8(7)
  42:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ADMUX = (ADMUX & 0xF8)|ch; // clears the bottom 3 bits before ORing
 477               	.LM46:
 478 012e 987F      		andi r25,lo8(-8)
 479 0130 892B      		or r24,r25
 480 0132 8093 7C00 		sts 124,r24
  46:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ADCSRA |= (1<<ADSC);
 482               	.LM47:
 483 0136 8091 7A00 		lds r24,122
 484 013a 8064      		ori r24,lo8(64)
 485 013c 8093 7A00 		sts 122,r24
 486               	.L14:
  51:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     while(ADCSRA & (1<<ADSC));
 488               	.LM48:
 489 0140 8091 7A00 		lds r24,122
 490 0144 86FD      		sbrc r24,6
 491 0146 00C0      		rjmp .L14
  53:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     return (ADC);
 493               	.LM49:
 494 0148 6091 7800 		lds r22,120
 495 014c 7091 7900 		lds r23,120+1
 496               	.LBE21:
 497               	.LBE20:
 186:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 187:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         for (int i=0; i< SENSOR_COUNT ; i++)
 188:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         {
 189:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             // ldr 0 -> pix0 + pix 1
 190:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             // ldr 1 -> pix2 + pix 3
 191:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             // ldr 2 -> pix4 + pix 5
 192:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             // ldr i -> pix i*2 + pix (i*2)+1
 193:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 194:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             //const uint8_t index = ldr_index*2;
 195:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 196:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             //mat_sensors[i] = (uint8_t) adc_read(i);
 197:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 198:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             dVal += adc_read(i);
 499               	.LM50:
 500 0150 80E0      		ldi r24,0
 501 0152 90E0      		ldi r25,0
 502 0154 0E94 0000 		call __floatunsisf
 503 0158 9B01      		movw r18,r22
 504 015a AC01      		movw r20,r24
 505 015c 6C2D      		mov r22,r12
 506 015e 7B2D      		mov r23,r11
 507 0160 892D      		mov r24,r9
 508 0162 982D      		mov r25,r8
 509 0164 0E94 0000 		call __addsf3
 510 0168 C62E      		mov r12,r22
 511 016a B72E      		mov r11,r23
 512 016c 982E      		mov r9,r24
 513 016e 892E      		mov r8,r25
 514 0170 7394      		inc r7
 187:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         for (int i=0; i< SENSOR_COUNT ; i++)
 516               	.LM51:
 517 0172 8FE0      		ldi r24,lo8(15)
 518 0174 7812      		cpse r7,r24
 519 0176 00C0      		rjmp .L16
 520               	.LBE19:
 521               	.LBB22:
 522               	.LBB23:
 524               	.Ltext5:
 526               	.LM52:
 527 0178 9FEF      		ldi r25,lo8(63999)
 528 017a 29EF      		ldi r18,hi8(63999)
 529 017c 80E0      		ldi r24,hlo8(63999)
 530 017e 9150      		1: subi r25,1
 531 0180 2040      		sbci r18,0
 532 0182 8040      		sbci r24,0
 533 0184 01F4      		brne 1b
 534 0186 00C0      		rjmp .
 535 0188 0000      		nop
 536               	.LBE23:
 537               	.LBE22:
 539               	.Ltext6:
 199:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 200:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             /*
 201:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             pixels[i][index] = mat_sensors[i];
 202:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             pixels[i][index+1] = mat_sensors[i];
 203:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****              */
 204:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         }
 205:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 206:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 207:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 208:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 209:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         _delay_ms(20);
 210:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 211:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         ldr_index++;
 541               	.LM53:
 542 018a D394      		inc r13
 212:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 213:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     } // end endless for
 544               	.LM54:
 545 018c 2701      		movw r4,r14
 546 018e 3801      		movw r6,r16
 547 0190 00C0      		rjmp .L17
 554               	.Lscope2:
 555               		.local	debounceCount.2138
 556               		.comm	debounceCount.2138,1,1
 557               		.local	index.2129
 558               		.comm	index.2129,1,1
 559               		.comm	_sensors,15,1
 560               		.comm	_display,1807,1
 561               	.global	catImage
 562               		.data
 565               	catImage:
 566 0000 FF        		.byte	-1
 567 0001 FF        		.byte	-1
 568 0002 FF        		.byte	-1
 569 0003 FF        		.byte	-1
 570 0004 FF        		.byte	-1
 571 0005 FF        		.byte	-1
 572 0006 FF        		.byte	-1
 573 0007 FF        		.byte	-1
 574 0008 FF        		.byte	-1
 575 0009 FF        		.byte	-1
 576 000a FF        		.byte	-1
 577 000b FF        		.byte	-1
 578 000c FF        		.byte	-1
 579 000d FF        		.byte	-1
 580 000e FF        		.byte	-1
 581 000f FF        		.byte	-1
 582 0010 FF        		.byte	-1
 583 0011 FF        		.byte	-1
 584 0012 FF        		.byte	-1
 585 0013 FF        		.byte	-1
 586 0014 FF        		.byte	-1
 587 0015 FF        		.byte	-1
 588 0016 FF        		.byte	-1
 589 0017 FF        		.byte	-1
 590 0018 FF        		.byte	-1
 591 0019 FF        		.byte	-1
 592 001a FF        		.byte	-1
 593 001b 92        		.byte	-110
 594 001c 00        		.byte	0
 595 001d DB        		.byte	-37
 596 001e FF        		.byte	-1
 597 001f FF        		.byte	-1
 598 0020 FF        		.byte	-1
 599 0021 FF        		.byte	-1
 600 0022 FF        		.byte	-1
 601 0023 FF        		.byte	-1
 602 0024 FF        		.byte	-1
 603 0025 FF        		.byte	-1
 604 0026 FF        		.byte	-1
 605 0027 FF        		.byte	-1
 606 0028 FF        		.byte	-1
 607 0029 FF        		.byte	-1
 608 002a FF        		.byte	-1
 609 002b FF        		.byte	-1
 610 002c FF        		.byte	-1
 611 002d FF        		.byte	-1
 612 002e FF        		.byte	-1
 613 002f FF        		.byte	-1
 614 0030 FF        		.byte	-1
 615 0031 FF        		.byte	-1
 616 0032 FF        		.byte	-1
 617 0033 24        		.byte	36
 618 0034 00        		.byte	0
 619 0035 92        		.byte	-110
 620 0036 DB        		.byte	-37
 621 0037 DB        		.byte	-37
 622 0038 6D        		.byte	109
 623 0039 00        		.byte	0
 624 003a 00        		.byte	0
 625 003b 92        		.byte	-110
 626 003c FF        		.byte	-1
 627 003d FF        		.byte	-1
 628 003e FF        		.byte	-1
 629 003f FF        		.byte	-1
 630 0040 FF        		.byte	-1
 631 0041 FF        		.byte	-1
 632 0042 FF        		.byte	-1
 633 0043 FF        		.byte	-1
 634 0044 FF        		.byte	-1
 635 0045 FF        		.byte	-1
 636 0046 FF        		.byte	-1
 637 0047 FF        		.byte	-1
 638 0048 FF        		.byte	-1
 639 0049 FF        		.byte	-1
 640 004a FF        		.byte	-1
 641 004b FF        		.byte	-1
 642 004c FF        		.byte	-1
 643 004d FF        		.byte	-1
 644 004e FF        		.byte	-1
 645 004f FF        		.byte	-1
 646 0050 FF        		.byte	-1
 647 0051 24        		.byte	36
 648 0052 00        		.byte	0
 649 0053 00        		.byte	0
 650 0054 00        		.byte	0
 651 0055 00        		.byte	0
 652 0056 00        		.byte	0
 653 0057 00        		.byte	0
 654 0058 00        		.byte	0
 655 0059 6D        		.byte	109
 656 005a FF        		.byte	-1
 657 005b FF        		.byte	-1
 658 005c FF        		.byte	-1
 659 005d FF        		.byte	-1
 660 005e FF        		.byte	-1
 661 005f FF        		.byte	-1
 662 0060 FF        		.byte	-1
 663 0061 FF        		.byte	-1
 664 0062 FF        		.byte	-1
 665 0063 FF        		.byte	-1
 666 0064 FF        		.byte	-1
 667 0065 FF        		.byte	-1
 668 0066 FF        		.byte	-1
 669 0067 FF        		.byte	-1
 670 0068 FF        		.byte	-1
 671 0069 FF        		.byte	-1
 672 006a FF        		.byte	-1
 673 006b FF        		.byte	-1
 674 006c FF        		.byte	-1
 675 006d FF        		.byte	-1
 676 006e FF        		.byte	-1
 677 006f 6D        		.byte	109
 678 0070 00        		.byte	0
 679 0071 00        		.byte	0
 680 0072 00        		.byte	0
 681 0073 00        		.byte	0
 682 0074 00        		.byte	0
 683 0075 00        		.byte	0
 684 0076 00        		.byte	0
 685 0077 24        		.byte	36
 686 0078 FF        		.byte	-1
 687 0079 FF        		.byte	-1
 688 007a FF        		.byte	-1
 689 007b FF        		.byte	-1
 690 007c FF        		.byte	-1
 691 007d FF        		.byte	-1
 692 007e FF        		.byte	-1
 693 007f FF        		.byte	-1
 694 0080 FF        		.byte	-1
 695 0081 FF        		.byte	-1
 696 0082 FF        		.byte	-1
 697 0083 FF        		.byte	-1
 698 0084 FF        		.byte	-1
 699 0085 FF        		.byte	-1
 700 0086 FF        		.byte	-1
 701 0087 FF        		.byte	-1
 702 0088 FF        		.byte	-1
 703 0089 FF        		.byte	-1
 704 008a FF        		.byte	-1
 705 008b FF        		.byte	-1
 706 008c FF        		.byte	-1
 707 008d DB        		.byte	-37
 708 008e 00        		.byte	0
 709 008f 00        		.byte	0
 710 0090 00        		.byte	0
 711 0091 00        		.byte	0
 712 0092 00        		.byte	0
 713 0093 00        		.byte	0
 714 0094 00        		.byte	0
 715 0095 00        		.byte	0
 716 0096 FF        		.byte	-1
 717 0097 FF        		.byte	-1
 718 0098 FF        		.byte	-1
 719 0099 FF        		.byte	-1
 720 009a FF        		.byte	-1
 721 009b FF        		.byte	-1
 722 009c FF        		.byte	-1
 723 009d FF        		.byte	-1
 724 009e FF        		.byte	-1
 725 009f FF        		.byte	-1
 726 00a0 FF        		.byte	-1
 727 00a1 FF        		.byte	-1
 728 00a2 FF        		.byte	-1
 729 00a3 FF        		.byte	-1
 730 00a4 FF        		.byte	-1
 731 00a5 FF        		.byte	-1
 732 00a6 FF        		.byte	-1
 733 00a7 FF        		.byte	-1
 734 00a8 FF        		.byte	-1
 735 00a9 FF        		.byte	-1
 736 00aa FF        		.byte	-1
 737 00ab FF        		.byte	-1
 738 00ac 24        		.byte	36
 739 00ad 00        		.byte	0
 740 00ae 00        		.byte	0
 741 00af 00        		.byte	0
 742 00b0 00        		.byte	0
 743 00b1 00        		.byte	0
 744 00b2 00        		.byte	0
 745 00b3 49        		.byte	73
 746 00b4 FF        		.byte	-1
 747 00b5 FF        		.byte	-1
 748 00b6 FF        		.byte	-1
 749 00b7 FF        		.byte	-1
 750 00b8 FF        		.byte	-1
 751 00b9 FF        		.byte	-1
 752 00ba FF        		.byte	-1
 753 00bb FF        		.byte	-1
 754 00bc FF        		.byte	-1
 755 00bd FF        		.byte	-1
 756 00be FF        		.byte	-1
 757 00bf FF        		.byte	-1
 758 00c0 FF        		.byte	-1
 759 00c1 FF        		.byte	-1
 760 00c2 FF        		.byte	-1
 761 00c3 FF        		.byte	-1
 762 00c4 FF        		.byte	-1
 763 00c5 FF        		.byte	-1
 764 00c6 FF        		.byte	-1
 765 00c7 FF        		.byte	-1
 766 00c8 FF        		.byte	-1
 767 00c9 FF        		.byte	-1
 768 00ca 6D        		.byte	109
 769 00cb 00        		.byte	0
 770 00cc 00        		.byte	0
 771 00cd 00        		.byte	0
 772 00ce 00        		.byte	0
 773 00cf 00        		.byte	0
 774 00d0 00        		.byte	0
 775 00d1 FF        		.byte	-1
 776 00d2 FF        		.byte	-1
 777 00d3 FF        		.byte	-1
 778 00d4 FF        		.byte	-1
 779 00d5 FF        		.byte	-1
 780 00d6 FF        		.byte	-1
 781 00d7 FF        		.byte	-1
 782 00d8 FF        		.byte	-1
 783 00d9 FF        		.byte	-1
 784 00da FF        		.byte	-1
 785 00db FF        		.byte	-1
 786 00dc FF        		.byte	-1
 787 00dd FF        		.byte	-1
 788 00de FF        		.byte	-1
 789 00df FF        		.byte	-1
 790 00e0 FF        		.byte	-1
 791 00e1 FF        		.byte	-1
 792 00e2 FF        		.byte	-1
 793 00e3 FF        		.byte	-1
 794 00e4 FF        		.byte	-1
 795 00e5 FF        		.byte	-1
 796 00e6 FF        		.byte	-1
 797 00e7 FF        		.byte	-1
 798 00e8 24        		.byte	36
 799 00e9 00        		.byte	0
 800 00ea 00        		.byte	0
 801 00eb 00        		.byte	0
 802 00ec 00        		.byte	0
 803 00ed 00        		.byte	0
 804 00ee 49        		.byte	73
 805 00ef FF        		.byte	-1
 806 00f0 FF        		.byte	-1
 807 00f1 FF        		.byte	-1
 808 00f2 FF        		.byte	-1
 809 00f3 FF        		.byte	-1
 810 00f4 FF        		.byte	-1
 811 00f5 FF        		.byte	-1
 812 00f6 FF        		.byte	-1
 813 00f7 FF        		.byte	-1
 814 00f8 FF        		.byte	-1
 815 00f9 FF        		.byte	-1
 816 00fa FF        		.byte	-1
 817 00fb FF        		.byte	-1
 818 00fc FF        		.byte	-1
 819 00fd FF        		.byte	-1
 820 00fe FF        		.byte	-1
 821 00ff FF        		.byte	-1
 822 0100 FF        		.byte	-1
 823 0101 DB        		.byte	-37
 824 0102 92        		.byte	-110
 825 0103 6D        		.byte	109
 826 0104 24        		.byte	36
 827 0105 00        		.byte	0
 828 0106 00        		.byte	0
 829 0107 00        		.byte	0
 830 0108 00        		.byte	0
 831 0109 00        		.byte	0
 832 010a 00        		.byte	0
 833 010b 00        		.byte	0
 834 010c 00        		.byte	0
 835 010d FF        		.byte	-1
 836 010e FF        		.byte	-1
 837 010f FF        		.byte	-1
 838 0110 FF        		.byte	-1
 839 0111 FF        		.byte	-1
 840 0112 FF        		.byte	-1
 841 0113 FF        		.byte	-1
 842 0114 FF        		.byte	-1
 843 0115 FF        		.byte	-1
 844 0116 FF        		.byte	-1
 845 0117 FF        		.byte	-1
 846 0118 FF        		.byte	-1
 847 0119 FF        		.byte	-1
 848 011a FF        		.byte	-1
 849 011b FF        		.byte	-1
 850 011c FF        		.byte	-1
 851 011d 92        		.byte	-110
 852 011e 24        		.byte	36
 853 011f 00        		.byte	0
 854 0120 00        		.byte	0
 855 0121 00        		.byte	0
 856 0122 00        		.byte	0
 857 0123 00        		.byte	0
 858 0124 00        		.byte	0
 859 0125 00        		.byte	0
 860 0126 00        		.byte	0
 861 0127 00        		.byte	0
 862 0128 00        		.byte	0
 863 0129 00        		.byte	0
 864 012a 00        		.byte	0
 865 012b FF        		.byte	-1
 866 012c FF        		.byte	-1
 867 012d FF        		.byte	-1
 868 012e FF        		.byte	-1
 869 012f FF        		.byte	-1
 870 0130 FF        		.byte	-1
 871 0131 FF        		.byte	-1
 872 0132 FF        		.byte	-1
 873 0133 FF        		.byte	-1
 874 0134 FF        		.byte	-1
 875 0135 FF        		.byte	-1
 876 0136 FF        		.byte	-1
 877 0137 FF        		.byte	-1
 878 0138 FF        		.byte	-1
 879 0139 B6        		.byte	-74
 880 013a 00        		.byte	0
 881 013b 00        		.byte	0
 882 013c 00        		.byte	0
 883 013d 00        		.byte	0
 884 013e 00        		.byte	0
 885 013f 00        		.byte	0
 886 0140 00        		.byte	0
 887 0141 00        		.byte	0
 888 0142 00        		.byte	0
 889 0143 00        		.byte	0
 890 0144 00        		.byte	0
 891 0145 00        		.byte	0
 892 0146 00        		.byte	0
 893 0147 00        		.byte	0
 894 0148 00        		.byte	0
 895 0149 DB        		.byte	-37
 896 014a FF        		.byte	-1
 897 014b FF        		.byte	-1
 898 014c FF        		.byte	-1
 899 014d FF        		.byte	-1
 900 014e FF        		.byte	-1
 901 014f FF        		.byte	-1
 902 0150 FF        		.byte	-1
 903 0151 FF        		.byte	-1
 904 0152 FF        		.byte	-1
 905 0153 FF        		.byte	-1
 906 0154 FF        		.byte	-1
 907 0155 FF        		.byte	-1
 908 0156 92        		.byte	-110
 909 0157 00        		.byte	0
 910 0158 00        		.byte	0
 911 0159 00        		.byte	0
 912 015a 00        		.byte	0
 913 015b 00        		.byte	0
 914 015c 00        		.byte	0
 915 015d 00        		.byte	0
 916 015e 00        		.byte	0
 917 015f 00        		.byte	0
 918 0160 00        		.byte	0
 919 0161 00        		.byte	0
 920 0162 00        		.byte	0
 921 0163 00        		.byte	0
 922 0164 00        		.byte	0
 923 0165 00        		.byte	0
 924 0166 00        		.byte	0
 925 0167 FF        		.byte	-1
 926 0168 FF        		.byte	-1
 927 0169 FF        		.byte	-1
 928 016a FF        		.byte	-1
 929 016b FF        		.byte	-1
 930 016c FF        		.byte	-1
 931 016d FF        		.byte	-1
 932 016e FF        		.byte	-1
 933 016f FF        		.byte	-1
 934 0170 FF        		.byte	-1
 935 0171 FF        		.byte	-1
 936 0172 FF        		.byte	-1
 937 0173 B6        		.byte	-74
 938 0174 00        		.byte	0
 939 0175 00        		.byte	0
 940 0176 00        		.byte	0
 941 0177 00        		.byte	0
 942 0178 00        		.byte	0
 943 0179 00        		.byte	0
 944 017a 00        		.byte	0
 945 017b 00        		.byte	0
 946 017c 00        		.byte	0
 947 017d 00        		.byte	0
 948 017e 00        		.byte	0
 949 017f 00        		.byte	0
 950 0180 00        		.byte	0
 951 0181 00        		.byte	0
 952 0182 00        		.byte	0
 953 0183 00        		.byte	0
 954 0184 6D        		.byte	109
 955 0185 FF        		.byte	-1
 956 0186 FF        		.byte	-1
 957 0187 FF        		.byte	-1
 958 0188 FF        		.byte	-1
 959 0189 FF        		.byte	-1
 960 018a FF        		.byte	-1
 961 018b FF        		.byte	-1
 962 018c FF        		.byte	-1
 963 018d FF        		.byte	-1
 964 018e FF        		.byte	-1
 965 018f FF        		.byte	-1
 966 0190 FF        		.byte	-1
 967 0191 00        		.byte	0
 968 0192 00        		.byte	0
 969 0193 00        		.byte	0
 970 0194 00        		.byte	0
 971 0195 00        		.byte	0
 972 0196 00        		.byte	0
 973 0197 00        		.byte	0
 974 0198 00        		.byte	0
 975 0199 00        		.byte	0
 976 019a 00        		.byte	0
 977 019b 00        		.byte	0
 978 019c 00        		.byte	0
 979 019d 00        		.byte	0
 980 019e 00        		.byte	0
 981 019f 00        		.byte	0
 982 01a0 00        		.byte	0
 983 01a1 49        		.byte	73
 984 01a2 FF        		.byte	-1
 985 01a3 FF        		.byte	-1
 986 01a4 FF        		.byte	-1
 987 01a5 FF        		.byte	-1
 988 01a6 FF        		.byte	-1
 989 01a7 FF        		.byte	-1
 990 01a8 FF        		.byte	-1
 991 01a9 FF        		.byte	-1
 992 01aa FF        		.byte	-1
 993 01ab FF        		.byte	-1
 994 01ac FF        		.byte	-1
 995 01ad FF        		.byte	-1
 996 01ae 49        		.byte	73
 997 01af 00        		.byte	0
 998 01b0 00        		.byte	0
 999 01b1 00        		.byte	0
 1000 01b2 00        		.byte	0
 1001 01b3 00        		.byte	0
 1002 01b4 00        		.byte	0
 1003 01b5 00        		.byte	0
 1004 01b6 00        		.byte	0
 1005 01b7 00        		.byte	0
 1006 01b8 00        		.byte	0
 1007 01b9 00        		.byte	0
 1008 01ba 00        		.byte	0
 1009 01bb 00        		.byte	0
 1010 01bc 00        		.byte	0
 1011 01bd 00        		.byte	0
 1012 01be 24        		.byte	36
 1013 01bf FF        		.byte	-1
 1014 01c0 FF        		.byte	-1
 1015 01c1 FF        		.byte	-1
 1016 01c2 FF        		.byte	-1
 1017 01c3 FF        		.byte	-1
 1018 01c4 FF        		.byte	-1
 1019 01c5 FF        		.byte	-1
 1020 01c6 FF        		.byte	-1
 1021 01c7 FF        		.byte	-1
 1022 01c8 FF        		.byte	-1
 1023 01c9 FF        		.byte	-1
 1024 01ca FF        		.byte	-1
 1025 01cb DB        		.byte	-37
 1026 01cc 00        		.byte	0
 1027 01cd 00        		.byte	0
 1028 01ce 00        		.byte	0
 1029 01cf 00        		.byte	0
 1030 01d0 00        		.byte	0
 1031 01d1 00        		.byte	0
 1032 01d2 00        		.byte	0
 1033 01d3 00        		.byte	0
 1034 01d4 00        		.byte	0
 1035 01d5 00        		.byte	0
 1036 01d6 00        		.byte	0
 1037 01d7 00        		.byte	0
 1038 01d8 00        		.byte	0
 1039 01d9 00        		.byte	0
 1040 01da 00        		.byte	0
 1041 01db 00        		.byte	0
 1042 01dc DB        		.byte	-37
 1043 01dd FF        		.byte	-1
 1044 01de FF        		.byte	-1
 1045 01df FF        		.byte	-1
 1046 01e0 FF        		.byte	-1
 1047 01e1 FF        		.byte	-1
 1048 01e2 FF        		.byte	-1
 1049 01e3 FF        		.byte	-1
 1050 01e4 FF        		.byte	-1
 1051 01e5 FF        		.byte	-1
 1052 01e6 FF        		.byte	-1
 1053 01e7 FF        		.byte	-1
 1054 01e8 FF        		.byte	-1
 1055 01e9 92        		.byte	-110
 1056 01ea 00        		.byte	0
 1057 01eb 00        		.byte	0
 1058 01ec 00        		.byte	0
 1059 01ed 00        		.byte	0
 1060 01ee 00        		.byte	0
 1061 01ef 00        		.byte	0
 1062 01f0 00        		.byte	0
 1063 01f1 00        		.byte	0
 1064 01f2 00        		.byte	0
 1065 01f3 00        		.byte	0
 1066 01f4 00        		.byte	0
 1067 01f5 00        		.byte	0
 1068 01f6 00        		.byte	0
 1069 01f7 00        		.byte	0
 1070 01f8 00        		.byte	0
 1071 01f9 49        		.byte	73
 1072 01fa FF        		.byte	-1
 1073 01fb FF        		.byte	-1
 1074 01fc FF        		.byte	-1
 1075 01fd FF        		.byte	-1
 1076 01fe FF        		.byte	-1
 1077 01ff FF        		.byte	-1
 1078 0200 FF        		.byte	-1
 1079 0201 FF        		.byte	-1
 1080 0202 FF        		.byte	-1
 1081 0203 FF        		.byte	-1
 1082 0204 FF        		.byte	-1
 1083 0205 FF        		.byte	-1
 1084 0206 FF        		.byte	-1
 1085 0207 24        		.byte	36
 1086 0208 00        		.byte	0
 1087 0209 00        		.byte	0
 1088 020a 00        		.byte	0
 1089 020b 00        		.byte	0
 1090 020c 00        		.byte	0
 1091 020d 00        		.byte	0
 1092 020e 00        		.byte	0
 1093 020f 00        		.byte	0
 1094 0210 00        		.byte	0
 1095 0211 00        		.byte	0
 1096 0212 00        		.byte	0
 1097 0213 00        		.byte	0
 1098 0214 00        		.byte	0
 1099 0215 00        		.byte	0
 1100 0216 00        		.byte	0
 1101 0217 92        		.byte	-110
 1102 0218 FF        		.byte	-1
 1103 0219 FF        		.byte	-1
 1104 021a FF        		.byte	-1
 1105 021b FF        		.byte	-1
 1106 021c FF        		.byte	-1
 1107 021d FF        		.byte	-1
 1108 021e FF        		.byte	-1
 1109 021f FF        		.byte	-1
 1110 0220 FF        		.byte	-1
 1111 0221 FF        		.byte	-1
 1112 0222 FF        		.byte	-1
 1113 0223 FF        		.byte	-1
 1114 0224 FF        		.byte	-1
 1115 0225 00        		.byte	0
 1116 0226 00        		.byte	0
 1117 0227 00        		.byte	0
 1118 0228 00        		.byte	0
 1119 0229 00        		.byte	0
 1120 022a 00        		.byte	0
 1121 022b 00        		.byte	0
 1122 022c 00        		.byte	0
 1123 022d 00        		.byte	0
 1124 022e 00        		.byte	0
 1125 022f 00        		.byte	0
 1126 0230 00        		.byte	0
 1127 0231 00        		.byte	0
 1128 0232 00        		.byte	0
 1129 0233 00        		.byte	0
 1130 0234 00        		.byte	0
 1131 0235 B6        		.byte	-74
 1132 0236 FF        		.byte	-1
 1133 0237 FF        		.byte	-1
 1134 0238 FF        		.byte	-1
 1135 0239 FF        		.byte	-1
 1136 023a FF        		.byte	-1
 1137 023b FF        		.byte	-1
 1138 023c FF        		.byte	-1
 1139 023d FF        		.byte	-1
 1140 023e FF        		.byte	-1
 1141 023f FF        		.byte	-1
 1142 0240 FF        		.byte	-1
 1143 0241 FF        		.byte	-1
 1144 0242 92        		.byte	-110
 1145 0243 00        		.byte	0
 1146 0244 00        		.byte	0
 1147 0245 00        		.byte	0
 1148 0246 00        		.byte	0
 1149 0247 00        		.byte	0
 1150 0248 00        		.byte	0
 1151 0249 00        		.byte	0
 1152 024a 00        		.byte	0
 1153 024b 00        		.byte	0
 1154 024c 00        		.byte	0
 1155 024d 00        		.byte	0
 1156 024e 00        		.byte	0
 1157 024f 49        		.byte	73
 1158 0250 00        		.byte	0
 1159 0251 00        		.byte	0
 1160 0252 00        		.byte	0
 1161 0253 B6        		.byte	-74
 1162 0254 FF        		.byte	-1
 1163 0255 FF        		.byte	-1
 1164 0256 FF        		.byte	-1
 1165 0257 FF        		.byte	-1
 1166 0258 FF        		.byte	-1
 1167 0259 FF        		.byte	-1
 1168 025a FF        		.byte	-1
 1169 025b FF        		.byte	-1
 1170 025c FF        		.byte	-1
 1171 025d FF        		.byte	-1
 1172 025e FF        		.byte	-1
 1173 025f FF        		.byte	-1
 1174 0260 49        		.byte	73
 1175 0261 00        		.byte	0
 1176 0262 00        		.byte	0
 1177 0263 00        		.byte	0
 1178 0264 00        		.byte	0
 1179 0265 00        		.byte	0
 1180 0266 00        		.byte	0
 1181 0267 00        		.byte	0
 1182 0268 00        		.byte	0
 1183 0269 00        		.byte	0
 1184 026a 00        		.byte	0
 1185 026b 00        		.byte	0
 1186 026c B6        		.byte	-74
 1187 026d FF        		.byte	-1
 1188 026e FF        		.byte	-1
 1189 026f 00        		.byte	0
 1190 0270 00        		.byte	0
 1191 0271 92        		.byte	-110
 1192 0272 FF        		.byte	-1
 1193 0273 FF        		.byte	-1
 1194 0274 FF        		.byte	-1
 1195 0275 FF        		.byte	-1
 1196 0276 FF        		.byte	-1
 1197 0277 FF        		.byte	-1
 1198 0278 FF        		.byte	-1
 1199 0279 FF        		.byte	-1
 1200 027a FF        		.byte	-1
 1201 027b FF        		.byte	-1
 1202 027c FF        		.byte	-1
 1203 027d B6        		.byte	-74
 1204 027e 00        		.byte	0
 1205 027f 00        		.byte	0
 1206 0280 00        		.byte	0
 1207 0281 00        		.byte	0
 1208 0282 00        		.byte	0
 1209 0283 00        		.byte	0
 1210 0284 00        		.byte	0
 1211 0285 00        		.byte	0
 1212 0286 00        		.byte	0
 1213 0287 00        		.byte	0
 1214 0288 00        		.byte	0
 1215 0289 6D        		.byte	109
 1216 028a FF        		.byte	-1
 1217 028b FF        		.byte	-1
 1218 028c FF        		.byte	-1
 1219 028d 24        		.byte	36
 1220 028e 00        		.byte	0
 1221 028f 49        		.byte	73
 1222 0290 FF        		.byte	-1
 1223 0291 FF        		.byte	-1
 1224 0292 FF        		.byte	-1
 1225 0293 FF        		.byte	-1
 1226 0294 FF        		.byte	-1
 1227 0295 FF        		.byte	-1
 1228 0296 FF        		.byte	-1
 1229 0297 FF        		.byte	-1
 1230 0298 FF        		.byte	-1
 1231 0299 FF        		.byte	-1
 1232 029a B6        		.byte	-74
 1233 029b 00        		.byte	0
 1234 029c 00        		.byte	0
 1235 029d 00        		.byte	0
 1236 029e 00        		.byte	0
 1237 029f 00        		.byte	0
 1238 02a0 00        		.byte	0
 1239 02a1 00        		.byte	0
 1240 02a2 00        		.byte	0
 1241 02a3 00        		.byte	0
 1242 02a4 00        		.byte	0
 1243 02a5 00        		.byte	0
 1244 02a6 00        		.byte	0
 1245 02a7 FF        		.byte	-1
 1246 02a8 FF        		.byte	-1
 1247 02a9 FF        		.byte	-1
 1248 02aa FF        		.byte	-1
 1249 02ab 6D        		.byte	109
 1250 02ac 00        		.byte	0
 1251 02ad 00        		.byte	0
 1252 02ae DB        		.byte	-37
 1253 02af FF        		.byte	-1
 1254 02b0 FF        		.byte	-1
 1255 02b1 FF        		.byte	-1
 1256 02b2 FF        		.byte	-1
 1257 02b3 FF        		.byte	-1
 1258 02b4 FF        		.byte	-1
 1259 02b5 FF        		.byte	-1
 1260 02b6 FF        		.byte	-1
 1261 02b7 6D        		.byte	109
 1262 02b8 00        		.byte	0
 1263 02b9 00        		.byte	0
 1264 02ba 00        		.byte	0
 1265 02bb 00        		.byte	0
 1266 02bc 00        		.byte	0
 1267 02bd 00        		.byte	0
 1268 02be 00        		.byte	0
 1269 02bf 00        		.byte	0
 1270 02c0 00        		.byte	0
 1271 02c1 00        		.byte	0
 1272 02c2 00        		.byte	0
 1273 02c3 00        		.byte	0
 1274 02c4 24        		.byte	36
 1275 02c5 92        		.byte	-110
 1276 02c6 DB        		.byte	-37
 1277 02c7 FF        		.byte	-1
 1278 02c8 FF        		.byte	-1
 1279 02c9 FF        		.byte	-1
 1280 02ca 24        		.byte	36
 1281 02cb 00        		.byte	0
 1282 02cc 00        		.byte	0
 1283 02cd DB        		.byte	-37
 1284 02ce FF        		.byte	-1
 1285 02cf FF        		.byte	-1
 1286 02d0 FF        		.byte	-1
 1287 02d1 FF        		.byte	-1
 1288 02d2 DB        		.byte	-37
 1289 02d3 6D        		.byte	109
 1290 02d4 00        		.byte	0
 1291 02d5 00        		.byte	0
 1292 02d6 00        		.byte	0
 1293 02d7 24        		.byte	36
 1294 02d8 6D        		.byte	109
 1295 02d9 49        		.byte	73
 1296 02da 00        		.byte	0
 1297 02db 00        		.byte	0
 1298 02dc 00        		.byte	0
 1299 02dd 00        		.byte	0
 1300 02de 00        		.byte	0
 1301 02df 00        		.byte	0
 1302 02e0 00        		.byte	0
 1303 02e1 00        		.byte	0
 1304 02e2 00        		.byte	0
 1305 02e3 00        		.byte	0
 1306 02e4 00        		.byte	0
 1307 02e5 FF        		.byte	-1
 1308 02e6 FF        		.byte	-1
 1309 02e7 FF        		.byte	-1
 1310 02e8 DB        		.byte	-37
 1311 02e9 24        		.byte	36
 1312 02ea 00        		.byte	0
 1313 02eb 49        		.byte	73
 1314 02ec FF        		.byte	-1
 1315 02ed FF        		.byte	-1
 1316 02ee DB        		.byte	-37
 1317 02ef 24        		.byte	36
 1318 02f0 00        		.byte	0
 1319 02f1 00        		.byte	0
 1320 02f2 00        		.byte	0
 1321 02f3 6D        		.byte	109
 1322 02f4 DB        		.byte	-37
 1323 02f5 FF        		.byte	-1
 1324 02f6 FF        		.byte	-1
 1325 02f7 FF        		.byte	-1
 1326 02f8 DB        		.byte	-37
 1327 02f9 DB        		.byte	-37
 1328 02fa DB        		.byte	-37
 1329 02fb DB        		.byte	-37
 1330 02fc DB        		.byte	-37
 1331 02fd DB        		.byte	-37
 1332 02fe DB        		.byte	-37
 1333 02ff DB        		.byte	-37
 1334 0300 DB        		.byte	-37
 1335 0301 DB        		.byte	-37
 1336 0302 DB        		.byte	-37
 1337 0303 FF        		.byte	-1
 1338 0304 FF        		.byte	-1
 1339 0305 FF        		.byte	-1
 1340 0306 FF        		.byte	-1
 1341 0307 FF        		.byte	-1
 1342 0308 92        		.byte	-110
 1343 0309 DB        		.byte	-37
 1344 030a FF        		.byte	-1
 1345 030b FF        		.byte	-1
 1346 030c 24        		.byte	36
 1347 030d 00        		.byte	0
 1348 030e 00        		.byte	0
 1349 030f 92        		.byte	-110
 1350 0310 FF        		.byte	-1
 1351 0311 FF        		.byte	-1
 1352 0312 FF        		.byte	-1
 1353 0313 FF        		.byte	-1
 1354 0314 FF        		.byte	-1
 1355 0315 FF        		.byte	-1
 1356 0316 FF        		.byte	-1
 1357 0317 FF        		.byte	-1
 1358 0318 FF        		.byte	-1
 1359 0319 FF        		.byte	-1
 1360 031a FF        		.byte	-1
 1361 031b FF        		.byte	-1
 1362 031c FF        		.byte	-1
 1363 031d FF        		.byte	-1
 1364 031e FF        		.byte	-1
 1365 031f FF        		.byte	-1
 1366 0320 FF        		.byte	-1
 1367 0321 FF        		.byte	-1
 1368 0322 FF        		.byte	-1
 1369 0323 FF        		.byte	-1
 1370 0324 FF        		.byte	-1
 1371 0325 FF        		.byte	-1
 1372 0326 FF        		.byte	-1
 1373 0327 FF        		.byte	-1
 1374 0328 FF        		.byte	-1
 1375 0329 FF        		.byte	-1
 1376 032a 00        		.byte	0
 1377 032b 00        		.byte	0
 1378 032c DB        		.byte	-37
 1379 032d FF        		.byte	-1
 1380 032e FF        		.byte	-1
 1381 032f FF        		.byte	-1
 1382 0330 FF        		.byte	-1
 1383 0331 FF        		.byte	-1
 1384 0332 FF        		.byte	-1
 1385 0333 FF        		.byte	-1
 1386 0334 FF        		.byte	-1
 1387 0335 FF        		.byte	-1
 1388 0336 FF        		.byte	-1
 1389 0337 FF        		.byte	-1
 1390 0338 FF        		.byte	-1
 1391 0339 FF        		.byte	-1
 1392 033a FF        		.byte	-1
 1393 033b FF        		.byte	-1
 1394 033c FF        		.byte	-1
 1395 033d FF        		.byte	-1
 1396 033e FF        		.byte	-1
 1397 033f FF        		.byte	-1
 1398 0340 FF        		.byte	-1
 1399 0341 FF        		.byte	-1
 1400 0342 FF        		.byte	-1
 1401 0343 FF        		.byte	-1
 1402 0344 FF        		.byte	-1
 1403 0345 FF        		.byte	-1
 1404 0346 FF        		.byte	-1
 1405 0347 FF        		.byte	-1
 1406 0348 49        		.byte	73
 1407 0349 00        		.byte	0
 1408 034a B6        		.byte	-74
 1409 034b FF        		.byte	-1
 1410 034c FF        		.byte	-1
 1411 034d FF        		.byte	-1
 1412 034e FF        		.byte	-1
 1413 034f FF        		.byte	-1
 1414 0350 FF        		.byte	-1
 1415 0351 FF        		.byte	-1
 1416 0352 FF        		.byte	-1
 1417 0353 FF        		.byte	-1
 1418 0354 FF        		.byte	-1
 1419 0355 FF        		.byte	-1
 1420 0356 FF        		.byte	-1
 1421 0357 FF        		.byte	-1
 1422 0358 FF        		.byte	-1
 1423 0359 FF        		.byte	-1
 1424 035a FF        		.byte	-1
 1425 035b FF        		.byte	-1
 1426 035c FF        		.byte	-1
 1427 035d FF        		.byte	-1
 1428 035e FF        		.byte	-1
 1429 035f FF        		.byte	-1
 1430 0360 FF        		.byte	-1
 1431 0361 FF        		.byte	-1
 1432 0362 FF        		.byte	-1
 1433 0363 FF        		.byte	-1
 1434 0364 FF        		.byte	-1
 1435 0365 FF        		.byte	-1
 1436 0366 FF        		.byte	-1
 1437 0367 6D        		.byte	109
 1438 0368 00        		.byte	0
 1439 0369 DB        		.byte	-37
 1440 036a FF        		.byte	-1
 1441 036b FF        		.byte	-1
 1442 036c FF        		.byte	-1
 1443 036d FF        		.byte	-1
 1444 036e FF        		.byte	-1
 1445 036f FF        		.byte	-1
 1446 0370 FF        		.byte	-1
 1447 0371 FF        		.byte	-1
 1448 0372 FF        		.byte	-1
 1449 0373 FF        		.byte	-1
 1450 0374 FF        		.byte	-1
 1451 0375 FF        		.byte	-1
 1452 0376 FF        		.byte	-1
 1453 0377 FF        		.byte	-1
 1454 0378 FF        		.byte	-1
 1455 0379 FF        		.byte	-1
 1456 037a FF        		.byte	-1
 1457 037b FF        		.byte	-1
 1458 037c FF        		.byte	-1
 1459 037d FF        		.byte	-1
 1460 037e FF        		.byte	-1
 1461 037f FF        		.byte	-1
 1462 0380 FF        		.byte	-1
 1463 0381 FF        		.byte	-1
 1464 0382 FF        		.byte	-1
 1465 0383 FF        		.byte	-1
 1466               	.global	spashImage
 1469               	spashImage:
 1470 0384 FF        		.byte	-1
 1471 0385 FF        		.byte	-1
 1472 0386 FF        		.byte	-1
 1473 0387 FF        		.byte	-1
 1474 0388 FF        		.byte	-1
 1475 0389 FF        		.byte	-1
 1476 038a FF        		.byte	-1
 1477 038b FF        		.byte	-1
 1478 038c FF        		.byte	-1
 1479 038d FF        		.byte	-1
 1480 038e B6        		.byte	-74
 1481 038f 6D        		.byte	109
 1482 0390 49        		.byte	73
 1483 0391 24        		.byte	36
 1484 0392 00        		.byte	0
 1485 0393 00        		.byte	0
 1486 0394 24        		.byte	36
 1487 0395 49        		.byte	73
 1488 0396 6D        		.byte	109
 1489 0397 B6        		.byte	-74
 1490 0398 FF        		.byte	-1
 1491 0399 FF        		.byte	-1
 1492 039a FF        		.byte	-1
 1493 039b FF        		.byte	-1
 1494 039c FF        		.byte	-1
 1495 039d FF        		.byte	-1
 1496 039e FF        		.byte	-1
 1497 039f FF        		.byte	-1
 1498 03a0 FF        		.byte	-1
 1499 03a1 FF        		.byte	-1
 1500 03a2 FF        		.byte	-1
 1501 03a3 FF        		.byte	-1
 1502 03a4 FF        		.byte	-1
 1503 03a5 FF        		.byte	-1
 1504 03a6 FF        		.byte	-1
 1505 03a7 FF        		.byte	-1
 1506 03a8 FF        		.byte	-1
 1507 03a9 FF        		.byte	-1
 1508 03aa 6D        		.byte	109
 1509 03ab 24        		.byte	36
 1510 03ac 00        		.byte	0
 1511 03ad 00        		.byte	0
 1512 03ae 00        		.byte	0
 1513 03af 00        		.byte	0
 1514 03b0 00        		.byte	0
 1515 03b1 00        		.byte	0
 1516 03b2 00        		.byte	0
 1517 03b3 00        		.byte	0
 1518 03b4 00        		.byte	0
 1519 03b5 00        		.byte	0
 1520 03b6 24        		.byte	36
 1521 03b7 92        		.byte	-110
 1522 03b8 FF        		.byte	-1
 1523 03b9 FF        		.byte	-1
 1524 03ba FF        		.byte	-1
 1525 03bb FF        		.byte	-1
 1526 03bc FF        		.byte	-1
 1527 03bd FF        		.byte	-1
 1528 03be FF        		.byte	-1
 1529 03bf FF        		.byte	-1
 1530 03c0 FF        		.byte	-1
 1531 03c1 FF        		.byte	-1
 1532 03c2 FF        		.byte	-1
 1533 03c3 FF        		.byte	-1
 1534 03c4 FF        		.byte	-1
 1535 03c5 FF        		.byte	-1
 1536 03c6 92        		.byte	-110
 1537 03c7 24        		.byte	36
 1538 03c8 00        		.byte	0
 1539 03c9 00        		.byte	0
 1540 03ca 00        		.byte	0
 1541 03cb 00        		.byte	0
 1542 03cc 00        		.byte	0
 1543 03cd 00        		.byte	0
 1544 03ce 00        		.byte	0
 1545 03cf 00        		.byte	0
 1546 03d0 00        		.byte	0
 1547 03d1 00        		.byte	0
 1548 03d2 00        		.byte	0
 1549 03d3 00        		.byte	0
 1550 03d4 00        		.byte	0
 1551 03d5 00        		.byte	0
 1552 03d6 24        		.byte	36
 1553 03d7 B6        		.byte	-74
 1554 03d8 FF        		.byte	-1
 1555 03d9 FF        		.byte	-1
 1556 03da FF        		.byte	-1
 1557 03db FF        		.byte	-1
 1558 03dc FF        		.byte	-1
 1559 03dd FF        		.byte	-1
 1560 03de FF        		.byte	-1
 1561 03df FF        		.byte	-1
 1562 03e0 FF        		.byte	-1
 1563 03e1 FF        		.byte	-1
 1564 03e2 FF        		.byte	-1
 1565 03e3 6D        		.byte	109
 1566 03e4 00        		.byte	0
 1567 03e5 00        		.byte	0
 1568 03e6 00        		.byte	0
 1569 03e7 00        		.byte	0
 1570 03e8 00        		.byte	0
 1571 03e9 00        		.byte	0
 1572 03ea 00        		.byte	0
 1573 03eb 00        		.byte	0
 1574 03ec 00        		.byte	0
 1575 03ed 00        		.byte	0
 1576 03ee 00        		.byte	0
 1577 03ef 00        		.byte	0
 1578 03f0 00        		.byte	0
 1579 03f1 00        		.byte	0
 1580 03f2 00        		.byte	0
 1581 03f3 00        		.byte	0
 1582 03f4 00        		.byte	0
 1583 03f5 00        		.byte	0
 1584 03f6 6E        		.byte	110
 1585 03f7 FF        		.byte	-1
 1586 03f8 FF        		.byte	-1
 1587 03f9 FF        		.byte	-1
 1588 03fa FF        		.byte	-1
 1589 03fb FF        		.byte	-1
 1590 03fc FF        		.byte	-1
 1591 03fd FF        		.byte	-1
 1592 03fe FF        		.byte	-1
 1593 03ff FF        		.byte	-1
 1594 0400 49        		.byte	73
 1595 0401 00        		.byte	0
 1596 0402 00        		.byte	0
 1597 0403 00        		.byte	0
 1598 0404 00        		.byte	0
 1599 0405 00        		.byte	0
 1600 0406 00        		.byte	0
 1601 0407 24        		.byte	36
 1602 0408 00        		.byte	0
 1603 0409 00        		.byte	0
 1604 040a 00        		.byte	0
 1605 040b 00        		.byte	0
 1606 040c 00        		.byte	0
 1607 040d 00        		.byte	0
 1608 040e 00        		.byte	0
 1609 040f 00        		.byte	0
 1610 0410 00        		.byte	0
 1611 0411 00        		.byte	0
 1612 0412 00        		.byte	0
 1613 0413 00        		.byte	0
 1614 0414 00        		.byte	0
 1615 0415 6D        		.byte	109
 1616 0416 FF        		.byte	-1
 1617 0417 FF        		.byte	-1
 1618 0418 FF        		.byte	-1
 1619 0419 FF        		.byte	-1
 1620 041a FF        		.byte	-1
 1621 041b FF        		.byte	-1
 1622 041c FF        		.byte	-1
 1623 041d 6D        		.byte	109
 1624 041e 00        		.byte	0
 1625 041f 00        		.byte	0
 1626 0420 00        		.byte	0
 1627 0421 00        		.byte	0
 1628 0422 00        		.byte	0
 1629 0423 00        		.byte	0
 1630 0424 49        		.byte	73
 1631 0425 FF        		.byte	-1
 1632 0426 49        		.byte	73
 1633 0427 00        		.byte	0
 1634 0428 00        		.byte	0
 1635 0429 00        		.byte	0
 1636 042a 00        		.byte	0
 1637 042b 00        		.byte	0
 1638 042c 00        		.byte	0
 1639 042d 00        		.byte	0
 1640 042e 00        		.byte	0
 1641 042f 00        		.byte	0
 1642 0430 00        		.byte	0
 1643 0431 00        		.byte	0
 1644 0432 00        		.byte	0
 1645 0433 00        		.byte	0
 1646 0434 6D        		.byte	109
 1647 0435 FF        		.byte	-1
 1648 0436 FF        		.byte	-1
 1649 0437 FF        		.byte	-1
 1650 0438 FF        		.byte	-1
 1651 0439 FF        		.byte	-1
 1652 043a 92        		.byte	-110
 1653 043b 00        		.byte	0
 1654 043c 00        		.byte	0
 1655 043d 00        		.byte	0
 1656 043e 00        		.byte	0
 1657 043f 00        		.byte	0
 1658 0440 00        		.byte	0
 1659 0441 49        		.byte	73
 1660 0442 FF        		.byte	-1
 1661 0443 FF        		.byte	-1
 1662 0444 6D        		.byte	109
 1663 0445 00        		.byte	0
 1664 0446 00        		.byte	0
 1665 0447 00        		.byte	0
 1666 0448 00        		.byte	0
 1667 0449 00        		.byte	0
 1668 044a 00        		.byte	0
 1669 044b 00        		.byte	0
 1670 044c 00        		.byte	0
 1671 044d 00        		.byte	0
 1672 044e 00        		.byte	0
 1673 044f 00        		.byte	0
 1674 0450 00        		.byte	0
 1675 0451 00        		.byte	0
 1676 0452 00        		.byte	0
 1677 0453 B6        		.byte	-74
 1678 0454 FF        		.byte	-1
 1679 0455 FF        		.byte	-1
 1680 0456 FF        		.byte	-1
 1681 0457 FF        		.byte	-1
 1682 0458 24        		.byte	36
 1683 0459 00        		.byte	0
 1684 045a 00        		.byte	0
 1685 045b 00        		.byte	0
 1686 045c 00        		.byte	0
 1687 045d 00        		.byte	0
 1688 045e 24        		.byte	36
 1689 045f FF        		.byte	-1
 1690 0460 FF        		.byte	-1
 1691 0461 FF        		.byte	-1
 1692 0462 49        		.byte	73
 1693 0463 00        		.byte	0
 1694 0464 00        		.byte	0
 1695 0465 00        		.byte	0
 1696 0466 00        		.byte	0
 1697 0467 00        		.byte	0
 1698 0468 00        		.byte	0
 1699 0469 00        		.byte	0
 1700 046a 00        		.byte	0
 1701 046b 00        		.byte	0
 1702 046c 00        		.byte	0
 1703 046d 00        		.byte	0
 1704 046e 00        		.byte	0
 1705 046f 00        		.byte	0
 1706 0470 00        		.byte	0
 1707 0471 24        		.byte	36
 1708 0472 FF        		.byte	-1
 1709 0473 FF        		.byte	-1
 1710 0474 FF        		.byte	-1
 1711 0475 6D        		.byte	109
 1712 0476 00        		.byte	0
 1713 0477 00        		.byte	0
 1714 0478 00        		.byte	0
 1715 0479 00        		.byte	0
 1716 047a 00        		.byte	0
 1717 047b 00        		.byte	0
 1718 047c B6        		.byte	-74
 1719 047d FF        		.byte	-1
 1720 047e FF        		.byte	-1
 1721 047f 92        		.byte	-110
 1722 0480 00        		.byte	0
 1723 0481 00        		.byte	0
 1724 0482 00        		.byte	0
 1725 0483 00        		.byte	0
 1726 0484 00        		.byte	0
 1727 0485 00        		.byte	0
 1728 0486 00        		.byte	0
 1729 0487 00        		.byte	0
 1730 0488 00        		.byte	0
 1731 0489 00        		.byte	0
 1732 048a 00        		.byte	0
 1733 048b 00        		.byte	0
 1734 048c 00        		.byte	0
 1735 048d 00        		.byte	0
 1736 048e 00        		.byte	0
 1737 048f 00        		.byte	0
 1738 0490 92        		.byte	-110
 1739 0491 FF        		.byte	-1
 1740 0492 FF        		.byte	-1
 1741 0493 24        		.byte	36
 1742 0494 00        		.byte	0
 1743 0495 00        		.byte	0
 1744 0496 00        		.byte	0
 1745 0497 00        		.byte	0
 1746 0498 24        		.byte	36
 1747 0499 92        		.byte	-110
 1748 049a FF        		.byte	-1
 1749 049b FF        		.byte	-1
 1750 049c 6D        		.byte	109
 1751 049d 00        		.byte	0
 1752 049e 00        		.byte	0
 1753 049f 00        		.byte	0
 1754 04a0 00        		.byte	0
 1755 04a1 00        		.byte	0
 1756 04a2 00        		.byte	0
 1757 04a3 00        		.byte	0
 1758 04a4 00        		.byte	0
 1759 04a5 00        		.byte	0
 1760 04a6 00        		.byte	0
 1761 04a7 00        		.byte	0
 1762 04a8 00        		.byte	0
 1763 04a9 00        		.byte	0
 1764 04aa 00        		.byte	0
 1765 04ab 00        		.byte	0
 1766 04ac 00        		.byte	0
 1767 04ad 00        		.byte	0
 1768 04ae 24        		.byte	36
 1769 04af FF        		.byte	-1
 1770 04b0 B6        		.byte	-74
 1771 04b1 00        		.byte	0
 1772 04b2 00        		.byte	0
 1773 04b3 00        		.byte	0
 1774 04b4 00        		.byte	0
 1775 04b5 6D        		.byte	109
 1776 04b6 FF        		.byte	-1
 1777 04b7 FF        		.byte	-1
 1778 04b8 FF        		.byte	-1
 1779 04b9 FF        		.byte	-1
 1780 04ba FF        		.byte	-1
 1781 04bb 24        		.byte	36
 1782 04bc 00        		.byte	0
 1783 04bd 00        		.byte	0
 1784 04be 00        		.byte	0
 1785 04bf 00        		.byte	0
 1786 04c0 00        		.byte	0
 1787 04c1 00        		.byte	0
 1788 04c2 00        		.byte	0
 1789 04c3 00        		.byte	0
 1790 04c4 00        		.byte	0
 1791 04c5 00        		.byte	0
 1792 04c6 00        		.byte	0
 1793 04c7 00        		.byte	0
 1794 04c8 00        		.byte	0
 1795 04c9 00        		.byte	0
 1796 04ca 00        		.byte	0
 1797 04cb 00        		.byte	0
 1798 04cc 00        		.byte	0
 1799 04cd B6        		.byte	-74
 1800 04ce 6D        		.byte	109
 1801 04cf 00        		.byte	0
 1802 04d0 00        		.byte	0
 1803 04d1 00        		.byte	0
 1804 04d2 6D        		.byte	109
 1805 04d3 FF        		.byte	-1
 1806 04d4 FF        		.byte	-1
 1807 04d5 FF        		.byte	-1
 1808 04d6 FF        		.byte	-1
 1809 04d7 FF        		.byte	-1
 1810 04d8 FF        		.byte	-1
 1811 04d9 FF        		.byte	-1
 1812 04da 6D        		.byte	109
 1813 04db 49        		.byte	73
 1814 04dc 49        		.byte	73
 1815 04dd 6D        		.byte	109
 1816 04de B6        		.byte	-74
 1817 04df DB        		.byte	-37
 1818 04e0 DB        		.byte	-37
 1819 04e1 B6        		.byte	-74
 1820 04e2 6D        		.byte	109
 1821 04e3 24        		.byte	36
 1822 04e4 00        		.byte	0
 1823 04e5 00        		.byte	0
 1824 04e6 00        		.byte	0
 1825 04e7 00        		.byte	0
 1826 04e8 00        		.byte	0
 1827 04e9 00        		.byte	0
 1828 04ea 00        		.byte	0
 1829 04eb 6D        		.byte	109
 1830 04ec 49        		.byte	73
 1831 04ed 00        		.byte	0
 1832 04ee 00        		.byte	0
 1833 04ef 00        		.byte	0
 1834 04f0 DB        		.byte	-37
 1835 04f1 FF        		.byte	-1
 1836 04f2 FF        		.byte	-1
 1837 04f3 FF        		.byte	-1
 1838 04f4 FF        		.byte	-1
 1839 04f5 FF        		.byte	-1
 1840 04f6 FF        		.byte	-1
 1841 04f7 FF        		.byte	-1
 1842 04f8 FF        		.byte	-1
 1843 04f9 FF        		.byte	-1
 1844 04fa FF        		.byte	-1
 1845 04fb FF        		.byte	-1
 1846 04fc FF        		.byte	-1
 1847 04fd FF        		.byte	-1
 1848 04fe FF        		.byte	-1
 1849 04ff FF        		.byte	-1
 1850 0500 FF        		.byte	-1
 1851 0501 DB        		.byte	-37
 1852 0502 24        		.byte	36
 1853 0503 00        		.byte	0
 1854 0504 00        		.byte	0
 1855 0505 00        		.byte	0
 1856 0506 00        		.byte	0
 1857 0507 00        		.byte	0
 1858 0508 00        		.byte	0
 1859 0509 49        		.byte	73
 1860 050a 24        		.byte	36
 1861 050b 00        		.byte	0
 1862 050c 00        		.byte	0
 1863 050d 00        		.byte	0
 1864 050e 6D        		.byte	109
 1865 050f FF        		.byte	-1
 1866 0510 FF        		.byte	-1
 1867 0511 FF        		.byte	-1
 1868 0512 FF        		.byte	-1
 1869 0513 FF        		.byte	-1
 1870 0514 FF        		.byte	-1
 1871 0515 FF        		.byte	-1
 1872 0516 FF        		.byte	-1
 1873 0517 FF        		.byte	-1
 1874 0518 FF        		.byte	-1
 1875 0519 FF        		.byte	-1
 1876 051a FF        		.byte	-1
 1877 051b FF        		.byte	-1
 1878 051c FF        		.byte	-1
 1879 051d FF        		.byte	-1
 1880 051e FF        		.byte	-1
 1881 051f FF        		.byte	-1
 1882 0520 DB        		.byte	-37
 1883 0521 00        		.byte	0
 1884 0522 00        		.byte	0
 1885 0523 00        		.byte	0
 1886 0524 00        		.byte	0
 1887 0525 00        		.byte	0
 1888 0526 00        		.byte	0
 1889 0527 24        		.byte	36
 1890 0528 00        		.byte	0
 1891 0529 00        		.byte	0
 1892 052a 00        		.byte	0
 1893 052b 00        		.byte	0
 1894 052c 00        		.byte	0
 1895 052d 49        		.byte	73
 1896 052e 92        		.byte	-110
 1897 052f DB        		.byte	-37
 1898 0530 FF        		.byte	-1
 1899 0531 FF        		.byte	-1
 1900 0532 FF        		.byte	-1
 1901 0533 FF        		.byte	-1
 1902 0534 FF        		.byte	-1
 1903 0535 FF        		.byte	-1
 1904 0536 FF        		.byte	-1
 1905 0537 FF        		.byte	-1
 1906 0538 FF        		.byte	-1
 1907 0539 FF        		.byte	-1
 1908 053a FF        		.byte	-1
 1909 053b FF        		.byte	-1
 1910 053c FF        		.byte	-1
 1911 053d FF        		.byte	-1
 1912 053e FF        		.byte	-1
 1913 053f 6D        		.byte	109
 1914 0540 00        		.byte	0
 1915 0541 00        		.byte	0
 1916 0542 00        		.byte	0
 1917 0543 00        		.byte	0
 1918 0544 00        		.byte	0
 1919 0545 00        		.byte	0
 1920 0546 00        		.byte	0
 1921 0547 00        		.byte	0
 1922 0548 00        		.byte	0
 1923 0549 00        		.byte	0
 1924 054a 00        		.byte	0
 1925 054b 00        		.byte	0
 1926 054c 00        		.byte	0
 1927 054d 00        		.byte	0
 1928 054e B6        		.byte	-74
 1929 054f FF        		.byte	-1
 1930 0550 FF        		.byte	-1
 1931 0551 FF        		.byte	-1
 1932 0552 FF        		.byte	-1
 1933 0553 FF        		.byte	-1
 1934 0554 FF        		.byte	-1
 1935 0555 FF        		.byte	-1
 1936 0556 FF        		.byte	-1
 1937 0557 FF        		.byte	-1
 1938 0558 FF        		.byte	-1
 1939 0559 FF        		.byte	-1
 1940 055a FF        		.byte	-1
 1941 055b FF        		.byte	-1
 1942 055c FF        		.byte	-1
 1943 055d B6        		.byte	-74
 1944 055e 00        		.byte	0
 1945 055f 00        		.byte	0
 1946 0560 00        		.byte	0
 1947 0561 00        		.byte	0
 1948 0562 00        		.byte	0
 1949 0563 20        		.byte	32
 1950 0564 24        		.byte	36
 1951 0565 00        		.byte	0
 1952 0566 00        		.byte	0
 1953 0567 00        		.byte	0
 1954 0568 00        		.byte	0
 1955 0569 00        		.byte	0
 1956 056a 00        		.byte	0
 1957 056b 00        		.byte	0
 1958 056c 92        		.byte	-110
 1959 056d FF        		.byte	-1
 1960 056e FF        		.byte	-1
 1961 056f FF        		.byte	-1
 1962 0570 FF        		.byte	-1
 1963 0571 FF        		.byte	-1
 1964 0572 FF        		.byte	-1
 1965 0573 FF        		.byte	-1
 1966 0574 FF        		.byte	-1
 1967 0575 FF        		.byte	-1
 1968 0576 FF        		.byte	-1
 1969 0577 FF        		.byte	-1
 1970 0578 FF        		.byte	-1
 1971 0579 FF        		.byte	-1
 1972 057a FF        		.byte	-1
 1973 057b FF        		.byte	-1
 1974 057c 49        		.byte	73
 1975 057d 24        		.byte	36
 1976 057e 00        		.byte	0
 1977 057f 00        		.byte	0
 1978 0580 00        		.byte	0
 1979 0581 24        		.byte	36
 1980 0582 49        		.byte	73
 1981 0583 00        		.byte	0
 1982 0584 00        		.byte	0
 1983 0585 00        		.byte	0
 1984 0586 00        		.byte	0
 1985 0587 00        		.byte	0
 1986 0588 00        		.byte	0
 1987 0589 00        		.byte	0
 1988 058a 24        		.byte	36
 1989 058b FF        		.byte	-1
 1990 058c FF        		.byte	-1
 1991 058d FF        		.byte	-1
 1992 058e FF        		.byte	-1
 1993 058f FF        		.byte	-1
 1994 0590 FF        		.byte	-1
 1995 0591 FF        		.byte	-1
 1996 0592 FF        		.byte	-1
 1997 0593 FF        		.byte	-1
 1998 0594 FF        		.byte	-1
 1999 0595 FF        		.byte	-1
 2000 0596 FF        		.byte	-1
 2001 0597 FF        		.byte	-1
 2002 0598 FF        		.byte	-1
 2003 0599 FF        		.byte	-1
 2004 059a FF        		.byte	-1
 2005 059b DB        		.byte	-37
 2006 059c 00        		.byte	0
 2007 059d 00        		.byte	0
 2008 059e 00        		.byte	0
 2009 059f 49        		.byte	73
 2010 05a0 6D        		.byte	109
 2011 05a1 00        		.byte	0
 2012 05a2 00        		.byte	0
 2013 05a3 00        		.byte	0
 2014 05a4 00        		.byte	0
 2015 05a5 00        		.byte	0
 2016 05a6 00        		.byte	0
 2017 05a7 00        		.byte	0
 2018 05a8 00        		.byte	0
 2019 05a9 49        		.byte	73
 2020 05aa FF        		.byte	-1
 2021 05ab FF        		.byte	-1
 2022 05ac FF        		.byte	-1
 2023 05ad DB        		.byte	-37
 2024 05ae DB        		.byte	-37
 2025 05af FF        		.byte	-1
 2026 05b0 FF        		.byte	-1
 2027 05b1 FF        		.byte	-1
 2028 05b2 FF        		.byte	-1
 2029 05b3 FF        		.byte	-1
 2030 05b4 FF        		.byte	-1
 2031 05b5 FF        		.byte	-1
 2032 05b6 FF        		.byte	-1
 2033 05b7 FF        		.byte	-1
 2034 05b8 FF        		.byte	-1
 2035 05b9 FF        		.byte	-1
 2036 05ba 00        		.byte	0
 2037 05bb 00        		.byte	0
 2038 05bc 00        		.byte	0
 2039 05bd 6D        		.byte	109
 2040 05be B6        		.byte	-74
 2041 05bf 00        		.byte	0
 2042 05c0 00        		.byte	0
 2043 05c1 00        		.byte	0
 2044 05c2 00        		.byte	0
 2045 05c3 00        		.byte	0
 2046 05c4 00        		.byte	0
 2047 05c5 00        		.byte	0
 2048 05c6 00        		.byte	0
 2049 05c7 24        		.byte	36
 2050 05c8 FF        		.byte	-1
 2051 05c9 FF        		.byte	-1
 2052 05ca B6        		.byte	-74
 2053 05cb 24        		.byte	36
 2054 05cc 24        		.byte	36
 2055 05cd 6D        		.byte	109
 2056 05ce B6        		.byte	-74
 2057 05cf FF        		.byte	-1
 2058 05d0 FF        		.byte	-1
 2059 05d1 FF        		.byte	-1
 2060 05d2 FF        		.byte	-1
 2061 05d3 FF        		.byte	-1
 2062 05d4 FF        		.byte	-1
 2063 05d5 FF        		.byte	-1
 2064 05d6 FF        		.byte	-1
 2065 05d7 92        		.byte	-110
 2066 05d8 00        		.byte	0
 2067 05d9 00        		.byte	0
 2068 05da 00        		.byte	0
 2069 05db B6        		.byte	-74
 2070 05dc FF        		.byte	-1
 2071 05dd 24        		.byte	36
 2072 05de 00        		.byte	0
 2073 05df 00        		.byte	0
 2074 05e0 00        		.byte	0
 2075 05e1 00        		.byte	0
 2076 05e2 00        		.byte	0
 2077 05e3 24        		.byte	36
 2078 05e4 6D        		.byte	109
 2079 05e5 FF        		.byte	-1
 2080 05e6 DB        		.byte	-37
 2081 05e7 49        		.byte	73
 2082 05e8 24        		.byte	36
 2083 05e9 49        		.byte	73
 2084 05ea 49        		.byte	73
 2085 05eb 49        		.byte	73
 2086 05ec 49        		.byte	73
 2087 05ed DB        		.byte	-37
 2088 05ee FF        		.byte	-1
 2089 05ef FF        		.byte	-1
 2090 05f0 FF        		.byte	-1
 2091 05f1 FF        		.byte	-1
 2092 05f2 FF        		.byte	-1
 2093 05f3 24        		.byte	36
 2094 05f4 24        		.byte	36
 2095 05f5 00        		.byte	0
 2096 05f6 00        		.byte	0
 2097 05f7 00        		.byte	0
 2098 05f8 24        		.byte	36
 2099 05f9 FF        		.byte	-1
 2100 05fa FF        		.byte	-1
 2101 05fb 92        		.byte	-110
 2102 05fc 00        		.byte	0
 2103 05fd 00        		.byte	0
 2104 05fe 00        		.byte	0
 2105 05ff 00        		.byte	0
 2106 0600 00        		.byte	0
 2107 0601 24        		.byte	36
 2108 0602 6D        		.byte	109
 2109 0603 49        		.byte	73
 2110 0604 00        		.byte	0
 2111 0605 00        		.byte	0
 2112 0606 49        		.byte	73
 2113 0607 92        		.byte	-110
 2114 0608 92        		.byte	-110
 2115 0609 B6        		.byte	-74
 2116 060a B6        		.byte	-74
 2117 060b B6        		.byte	-74
 2118 060c B6        		.byte	-74
 2119 060d DB        		.byte	-37
 2120 060e DB        		.byte	-37
 2121 060f DB        		.byte	-37
 2122 0610 92        		.byte	-110
 2123 0611 00        		.byte	0
 2124 0612 00        		.byte	0
 2125 0613 00        		.byte	0
 2126 0614 00        		.byte	0
 2127 0615 00        		.byte	0
 2128 0616 92        		.byte	-110
 2129 0617 FF        		.byte	-1
 2130 0618 FF        		.byte	-1
 2131 0619 FF        		.byte	-1
 2132 061a 24        		.byte	36
 2133 061b 00        		.byte	0
 2134 061c 00        		.byte	0
 2135 061d 00        		.byte	0
 2136 061e 00        		.byte	0
 2137 061f 00        		.byte	0
 2138 0620 00        		.byte	0
 2139 0621 00        		.byte	0
 2140 0622 00        		.byte	0
 2141 0623 00        		.byte	0
 2142 0624 00        		.byte	0
 2143 0625 00        		.byte	0
 2144 0626 00        		.byte	0
 2145 0627 00        		.byte	0
 2146 0628 00        		.byte	0
 2147 0629 00        		.byte	0
 2148 062a 00        		.byte	0
 2149 062b 00        		.byte	0
 2150 062c 00        		.byte	0
 2151 062d 00        		.byte	0
 2152 062e 00        		.byte	0
 2153 062f 00        		.byte	0
 2154 0630 00        		.byte	0
 2155 0631 00        		.byte	0
 2156 0632 00        		.byte	0
 2157 0633 24        		.byte	36
 2158 0634 FF        		.byte	-1
 2159 0635 FF        		.byte	-1
 2160 0636 FF        		.byte	-1
 2161 0637 FF        		.byte	-1
 2162 0638 B6        		.byte	-74
 2163 0639 00        		.byte	0
 2164 063a 00        		.byte	0
 2165 063b 00        		.byte	0
 2166 063c 00        		.byte	0
 2167 063d 00        		.byte	0
 2168 063e 00        		.byte	0
 2169 063f 00        		.byte	0
 2170 0640 00        		.byte	0
 2171 0641 00        		.byte	0
 2172 0642 00        		.byte	0
 2173 0643 00        		.byte	0
 2174 0644 00        		.byte	0
 2175 0645 00        		.byte	0
 2176 0646 00        		.byte	0
 2177 0647 00        		.byte	0
 2178 0648 00        		.byte	0
 2179 0649 00        		.byte	0
 2180 064a 00        		.byte	0
 2181 064b 00        		.byte	0
 2182 064c 00        		.byte	0
 2183 064d 00        		.byte	0
 2184 064e 00        		.byte	0
 2185 064f 00        		.byte	0
 2186 0650 00        		.byte	0
 2187 0651 B6        		.byte	-74
 2188 0652 FF        		.byte	-1
 2189 0653 FF        		.byte	-1
 2190 0654 FF        		.byte	-1
 2191 0655 FF        		.byte	-1
 2192 0656 FF        		.byte	-1
 2193 0657 92        		.byte	-110
 2194 0658 00        		.byte	0
 2195 0659 00        		.byte	0
 2196 065a 00        		.byte	0
 2197 065b 00        		.byte	0
 2198 065c 00        		.byte	0
 2199 065d 00        		.byte	0
 2200 065e 00        		.byte	0
 2201 065f 00        		.byte	0
 2202 0660 00        		.byte	0
 2203 0661 00        		.byte	0
 2204 0662 00        		.byte	0
 2205 0663 00        		.byte	0
 2206 0664 00        		.byte	0
 2207 0665 00        		.byte	0
 2208 0666 00        		.byte	0
 2209 0667 00        		.byte	0
 2210 0668 00        		.byte	0
 2211 0669 00        		.byte	0
 2212 066a 00        		.byte	0
 2213 066b 00        		.byte	0
 2214 066c 00        		.byte	0
 2215 066d 00        		.byte	0
 2216 066e 6D        		.byte	109
 2217 066f FF        		.byte	-1
 2218 0670 FF        		.byte	-1
 2219 0671 FF        		.byte	-1
 2220 0672 FF        		.byte	-1
 2221 0673 FF        		.byte	-1
 2222 0674 FF        		.byte	-1
 2223 0675 FF        		.byte	-1
 2224 0676 6D        		.byte	109
 2225 0677 00        		.byte	0
 2226 0678 00        		.byte	0
 2227 0679 00        		.byte	0
 2228 067a 00        		.byte	0
 2229 067b 00        		.byte	0
 2230 067c 00        		.byte	0
 2231 067d 00        		.byte	0
 2232 067e 00        		.byte	0
 2233 067f 00        		.byte	0
 2234 0680 00        		.byte	0
 2235 0681 00        		.byte	0
 2236 0682 00        		.byte	0
 2237 0683 00        		.byte	0
 2238 0684 00        		.byte	0
 2239 0685 00        		.byte	0
 2240 0686 00        		.byte	0
 2241 0687 00        		.byte	0
 2242 0688 00        		.byte	0
 2243 0689 00        		.byte	0
 2244 068a 00        		.byte	0
 2245 068b 6D        		.byte	109
 2246 068c FF        		.byte	-1
 2247 068d FF        		.byte	-1
 2248 068e FF        		.byte	-1
 2249 068f FF        		.byte	-1
 2250 0690 FF        		.byte	-1
 2251 0691 FF        		.byte	-1
 2252 0692 FF        		.byte	-1
 2253 0693 FF        		.byte	-1
 2254 0694 FF        		.byte	-1
 2255 0695 92        		.byte	-110
 2256 0696 00        		.byte	0
 2257 0697 00        		.byte	0
 2258 0698 00        		.byte	0
 2259 0699 00        		.byte	0
 2260 069a 00        		.byte	0
 2261 069b 00        		.byte	0
 2262 069c 00        		.byte	0
 2263 069d 00        		.byte	0
 2264 069e 00        		.byte	0
 2265 069f 00        		.byte	0
 2266 06a0 00        		.byte	0
 2267 06a1 00        		.byte	0
 2268 06a2 00        		.byte	0
 2269 06a3 00        		.byte	0
 2270 06a4 00        		.byte	0
 2271 06a5 00        		.byte	0
 2272 06a6 00        		.byte	0
 2273 06a7 00        		.byte	0
 2274 06a8 6D        		.byte	109
 2275 06a9 FF        		.byte	-1
 2276 06aa FF        		.byte	-1
 2277 06ab FF        		.byte	-1
 2278 06ac FF        		.byte	-1
 2279 06ad FF        		.byte	-1
 2280 06ae FF        		.byte	-1
 2281 06af FF        		.byte	-1
 2282 06b0 FF        		.byte	-1
 2283 06b1 FF        		.byte	-1
 2284 06b2 FF        		.byte	-1
 2285 06b3 FF        		.byte	-1
 2286 06b4 B6        		.byte	-74
 2287 06b5 24        		.byte	36
 2288 06b6 00        		.byte	0
 2289 06b7 00        		.byte	0
 2290 06b8 00        		.byte	0
 2291 06b9 00        		.byte	0
 2292 06ba 00        		.byte	0
 2293 06bb 00        		.byte	0
 2294 06bc 00        		.byte	0
 2295 06bd 00        		.byte	0
 2296 06be 00        		.byte	0
 2297 06bf 00        		.byte	0
 2298 06c0 00        		.byte	0
 2299 06c1 00        		.byte	0
 2300 06c2 00        		.byte	0
 2301 06c3 00        		.byte	0
 2302 06c4 24        		.byte	36
 2303 06c5 B6        		.byte	-74
 2304 06c6 FF        		.byte	-1
 2305 06c7 FF        		.byte	-1
 2306 06c8 FF        		.byte	-1
 2307 06c9 FF        		.byte	-1
 2308 06ca FF        		.byte	-1
 2309 06cb FF        		.byte	-1
 2310 06cc FF        		.byte	-1
 2311 06cd FF        		.byte	-1
 2312 06ce FF        		.byte	-1
 2313 06cf FF        		.byte	-1
 2314 06d0 FF        		.byte	-1
 2315 06d1 FF        		.byte	-1
 2316 06d2 FF        		.byte	-1
 2317 06d3 FF        		.byte	-1
 2318 06d4 92        		.byte	-110
 2319 06d5 24        		.byte	36
 2320 06d6 00        		.byte	0
 2321 06d7 00        		.byte	0
 2322 06d8 00        		.byte	0
 2323 06d9 00        		.byte	0
 2324 06da 00        		.byte	0
 2325 06db 00        		.byte	0
 2326 06dc 00        		.byte	0
 2327 06dd 00        		.byte	0
 2328 06de 00        		.byte	0
 2329 06df 00        		.byte	0
 2330 06e0 24        		.byte	36
 2331 06e1 92        		.byte	-110
 2332 06e2 FF        		.byte	-1
 2333 06e3 FF        		.byte	-1
 2334 06e4 FF        		.byte	-1
 2335 06e5 FF        		.byte	-1
 2336 06e6 FF        		.byte	-1
 2337 06e7 FF        		.byte	-1
 2338 06e8 FF        		.byte	-1
 2339 06e9 FF        		.byte	-1
 2340 06ea FF        		.byte	-1
 2341 06eb FF        		.byte	-1
 2342 06ec FF        		.byte	-1
 2343 06ed FF        		.byte	-1
 2344 06ee FF        		.byte	-1
 2345 06ef FF        		.byte	-1
 2346 06f0 FF        		.byte	-1
 2347 06f1 FF        		.byte	-1
 2348 06f2 FF        		.byte	-1
 2349 06f3 FF        		.byte	-1
 2350 06f4 B6        		.byte	-74
 2351 06f5 6D        		.byte	109
 2352 06f6 49        		.byte	73
 2353 06f7 24        		.byte	36
 2354 06f8 00        		.byte	0
 2355 06f9 20        		.byte	32
 2356 06fa 24        		.byte	36
 2357 06fb 49        		.byte	73
 2358 06fc 92        		.byte	-110
 2359 06fd DB        		.byte	-37
 2360 06fe FF        		.byte	-1
 2361 06ff FF        		.byte	-1
 2362 0700 FF        		.byte	-1
 2363 0701 FF        		.byte	-1
 2364 0702 FF        		.byte	-1
 2365 0703 FF        		.byte	-1
 2366 0704 FF        		.byte	-1
 2367 0705 FF        		.byte	-1
 2368 0706 FF        		.byte	-1
 2369 0707 FF        		.byte	-1
 2374               		.text
 2376               	.Letext0:
 2377               		.ident	"GCC: (GNU) 4.8.1"
 2378               	.global __do_copy_data
 2379               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccWEgsme.s:2      *ABS*:0000003e __SP_H__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccWEgsme.s:3      *ABS*:0000003d __SP_L__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccWEgsme.s:4      *ABS*:0000003f __SREG__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccWEgsme.s:5      *ABS*:0000003b __RAMPZ__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccWEgsme.s:6      *ABS*:00000000 __tmp_reg__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccWEgsme.s:7      *ABS*:00000001 __zero_reg__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccWEgsme.s:135    .text:00000000 writeNext
                            *COM*:0000070f _display
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccWEgsme.s:556    .bss:00000001 index.2129
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccWEgsme.s:237    .text.startup:00000000 main
                            *COM*:0000000f _sensors
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccWEgsme.s:565    .data:00000000 catImage
                             .bss:00000000 debounceCount.2138
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccWEgsme.s:1469   .data:00000384 spashImage

UNDEFINED SYMBOLS
display_clear
display_write
display_fillZone
__divsf3
__subsf3
__gesf2
__floatunsisf
__addsf3
display_init
sensors_init
display_writeImage
sprintf
__do_copy_data
__do_clear_bss
