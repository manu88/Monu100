   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
 123               	.global	adc_init
 125               	adc_init:
   1:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
   2:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <stdlib.h> 
   3:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <stdio.h>
   4:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
   5:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <avr/io.h>
   6:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
   7:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <avr/pgmspace.h>
   8:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <avr/interrupt.h>
   9:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  10:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <util/delay.h>
  11:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <math.h>
  12:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  13:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include "PinsConfig.h"
  14:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  15:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  16:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include "Display.h"
  17:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  18:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  19:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  20:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include "Images.h"
  21:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  22:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** */
  23:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /*
  24:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     Global constants defines
  25:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****  */
  26:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  27:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  28:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  29:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #define SENSOR_COUNT     15
  30:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #define MIC_SENCOR_COUNT 15
  31:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  32:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** Display _display;
  33:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  34:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** uint8_t mat_sensors[ SENSOR_COUNT ] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 };
  35:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  36:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  37:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  38:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** *
  39:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /*
  40:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****  
  41:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****  ADC part
  42:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****  
  43:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****  */
  44:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** *
  45:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** // initialize adc
  46:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** void adc_init(void)
  47:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** {
 127               	.LM0:
 128               	.LFBB1:
 129               	/* prologue: function */
 130               	/* frame size = 0 */
 131               	/* stack size = 0 */
 132               	.L__stack_usage = 0
  48:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // AREF = AVcc
  49:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ADMUX = (1<<REFS0);
 134               	.LM1:
 135 0000 80E4      		ldi r24,lo8(64)
 136 0002 8093 7C00 		sts 124,r24
  50:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
  51:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // ADC Enable and prescaler of 128
  52:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // 16000000/128 = 125000
  53:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
 138               	.LM2:
 139 0006 87E8      		ldi r24,lo8(-121)
 140 0008 8093 7A00 		sts 122,r24
 141 000c 0895      		ret
 143               	.Lscope1:
 144               		.section	.rodata.str1.1,"aMS",@progbits,1
 145               	.LC0:
 146 0000 4D69 6368 		.string	"Michel\nDurand"
 146      656C 0A44 
 146      7572 616E 
 146      6400 
 147               	.LC1:
 148 000e 6368 656C 		.string	"chelMi\nranDdu"
 148      4D69 0A72 
 148      616E 4464 
 148      7500 
 149               		.text
 151               	.global	writeNext
 153               	writeNext:
  54:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
  55:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** }
  56:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  57:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** *
  58:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  59:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****  inline uint16_t adc_read(uint8_t ch)
  60:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** {
  61:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // select the corresponding channel 0~7
  62:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // ANDing with ’7′ will always keep the value
  63:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // of ‘ch’ between 0 and 7
  64:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ch &= 0b00000111;  // AND operation with 7
  65:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ADMUX = (ADMUX & 0xF8)|ch; // clears the bottom 3 bits before ORing
  66:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
  67:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // start single convertion
  68:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // write ’1′ to ADSC
  69:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ADCSRA |= (1<<ADSC);
  70:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
  71:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // wait for conversion to complete
  72:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // ADSC becomes ’0′ again
  73:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // till then, run loop continuously
  74:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     while(ADCSRA & (1<<ADSC));
  75:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
  76:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     return (ADC);
  77:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** }
  78:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  79:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  80:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** *
  81:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  82:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** void writeNext(void)
  83:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** {
 155               	.LM3:
 156               	.LFBB2:
 157 000e 0F93      		push r16
 158               	/* prologue: function */
 159               	/* frame size = 0 */
 160               	/* stack size = 1 */
 161               	.L__stack_usage = 1
  84:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     const  uint8_t count = 2;
  85:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     static uint8_t index=0;
  86:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  87:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     display_clear( &_display);
 163               	.LM4:
 164 0010 80E0      		ldi r24,lo8(_display)
 165 0012 90E0      		ldi r25,hi8(_display)
 166 0014 0E94 0000 		call display_clear
  88:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
  89:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     if (index == 0)
 168               	.LM5:
 169 0018 8091 0000 		lds r24,index.2124
 170 001c 8111      		cpse r24,__zero_reg__
 171 001e 00C0      		rjmp .L3
  90:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     {
  91:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  92:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         display_write( &_display,"Michel\nDurand",0,0);
 173               	.LM6:
 174 0020 20E0      		ldi r18,0
 175 0022 40E0      		ldi r20,0
 176 0024 60E0      		ldi r22,lo8(.LC0)
 177 0026 70E0      		ldi r23,hi8(.LC0)
 178 0028 80E0      		ldi r24,lo8(_display)
 179 002a 90E0      		ldi r25,hi8(_display)
 180 002c 0E94 0000 		call display_write
  93:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
  94:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         _display.fillColor = 0b10101010;
 182               	.LM7:
 183 0030 8AEA      		ldi r24,lo8(-86)
 184 0032 00C0      		rjmp .L7
 185               	.L3:
  95:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         display_fillZone( &_display, 5, 22, 5, 5);
  96:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     }
  97:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
  98:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     else if (index == 1)
 187               	.LM8:
 188 0034 8130      		cpi r24,lo8(1)
 189 0036 01F4      		brne .L4
  99:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     {
 100:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 101:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         display_write( &_display,"chelMi\nranDdu", 0,0);
 191               	.LM9:
 192 0038 20E0      		ldi r18,0
 193 003a 40E0      		ldi r20,0
 194 003c 60E0      		ldi r22,lo8(.LC1)
 195 003e 70E0      		ldi r23,hi8(.LC1)
 196 0040 80E0      		ldi r24,lo8(_display)
 197 0042 90E0      		ldi r25,hi8(_display)
 198 0044 0E94 0000 		call display_write
 102:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 103:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         _display.fillColor = 0b00010000;
 200               	.LM10:
 201 0048 80E1      		ldi r24,lo8(16)
 202               	.L7:
 203 004a 8093 0000 		sts _display+1803,r24
 104:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         display_fillZone( &_display, 5, 22, 5, 5);
 205               	.LM11:
 206 004e 05E0      		ldi r16,lo8(5)
 207 0050 25E0      		ldi r18,lo8(5)
 208 0052 46E1      		ldi r20,lo8(22)
 209 0054 65E0      		ldi r22,lo8(5)
 210 0056 80E0      		ldi r24,lo8(_display)
 211 0058 90E0      		ldi r25,hi8(_display)
 212 005a 0E94 0000 		call display_fillZone
 213               	.L4:
 105:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     }
 106:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** //        writeName2();
 107:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 108:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     index++;
 215               	.LM12:
 216 005e 8091 0000 		lds r24,index.2124
 217 0062 8F5F      		subi r24,lo8(-(1))
 109:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 110:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****   
 111:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 112:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     if (index == count)
 219               	.LM13:
 220 0064 8230      		cpi r24,lo8(2)
 221 0066 01F0      		breq .L5
 108:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     index++;
 223               	.LM14:
 224 0068 8093 0000 		sts index.2124,r24
 225 006c 00C0      		rjmp .L2
 226               	.L5:
 113:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         index = 0;
 228               	.LM15:
 229 006e 1092 0000 		sts index.2124,__zero_reg__
 230               	.L2:
 231               	/* epilogue start */
 114:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 115:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** }
 233               	.LM16:
 234 0072 0F91      		pop r16
 235 0074 0895      		ret
 240               	.Lscope2:
 241               		.section	.rodata.str1.1
 242               	.LC2:
 243 001c 6361 6E20 		.string	"can ID"
 243      4944 00
 244               	.LC3:
 245 0023 2569 00   		.string	"%i"
 246               	.global	__divsf3
 247               	.global	__subsf3
 248               	.global	__gesf2
 249               	.global	__floatunsisf
 250               	.global	__addsf3
 251               		.section	.text.startup,"ax",@progbits
 253               	.global	main
 255               	main:
 116:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 117:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 118:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 119:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** *
 120:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 121:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** int main( void )
 122:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** {
 257               	.LM17:
 258               	.LFBB3:
 259 0000 CF93      		push r28
 260 0002 DF93      		push r29
 261 0004 00D0      		rcall .
 262 0006 CDB7      		in r28,__SP_L__
 263 0008 DEB7      		in r29,__SP_H__
 264               	/* prologue: function */
 265               	/* frame size = 3 */
 266               	/* stack size = 5 */
 267               	.L__stack_usage = 5
 123:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /* Hardware configuration */
 124:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 125:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     display_init( &_display);
 269               	.LM18:
 270 000a 80E0      		ldi r24,lo8(_display)
 271 000c 90E0      		ldi r25,hi8(_display)
 272 000e 0E94 0000 		call display_init
 126:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 127:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 128:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 129:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     adc_init();
 274               	.LM19:
 275 0012 0E94 0000 		call adc_init
 130:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 131:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 132:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 133:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // MICs LDR
 134:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 135:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setOutput( LDR_DATA_DDR       , LDR_DATA_PIN ); // data
 277               	.LM20:
 278 0016 579A      		sbi 0xa,7
 136:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setOutput( LDR_STROBE_DDR     , LDR_STROBE_PIN ); // strobe
 280               	.LM21:
 281 0018 6C9A      		sbi 0xd,4
 137:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setOutput( LDR_OUT_ENABLE_DDR , LDR_OUT_ENABLE_PIN ); // out enable
 283               	.LM22:
 284 001a 6B9A      		sbi 0xd,3
 138:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setOutput( LDR_CLOCK_DDR      , LDR_CLOCK_PIN ); // clock
 286               	.LM23:
 287 001c 569A      		sbi 0xa,6
 139:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 140:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 141:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setHigh( MIC_STROBE_PORT , MIC_STROBE_PIN ); // strobe mic leds
 289               	.LM24:
 290 001e 8091 0B01 		lds r24,267
 291 0022 8460      		ori r24,lo8(4)
 292 0024 8093 0B01 		sts 267,r24
 142:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setHigh( LDR_STROBE_PORT , LDR_STROBE_PIN ); // strobe mic LDR
 294               	.LM25:
 295 0028 749A      		sbi 0xe,4
 143:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 144:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 145:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // reset mic ldr
 146:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 147:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setLow( LDR_DATA_PORT , LDR_DATA_PIN ); // data to low
 297               	.LM26:
 298 002a 5F98      		cbi 0xb,7
 299 002c 80E1      		ldi r24,lo8(16)
 300 002e 90E0      		ldi r25,0
 301               	.L11:
 302               	.LBB13:
 148:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 149:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     for (int i =0;i< 16;i++)
 150:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         pulse( LDR_CLOCK_PORT , LDR_CLOCK_PIN );
 304               	.LM27:
 305 0030 5E9A      		sbi 0xb,6
 306 0032 5E98      		cbi 0xb,6
 307 0034 0197      		sbiw r24,1
 149:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     for (int i =0;i< 16;i++)
 309               	.LM28:
 310 0036 0097      		sbiw r24,0
 311 0038 01F4      		brne .L11
 312               	.LBE13:
 151:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 152:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 153:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 154:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 155:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 156:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /* Vars configuration */    
 157:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 158:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 159:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 160:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 161:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 162:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 163:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 164:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     sei();
 314               	.LM29:
 315               	/* #APP */
 316               	 ;  164 "/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/mai
 317 003a 7894      		sei
 318               	 ;  0 "" 2
 165:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 166:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 167:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /* **** Splash wait **** */
 168:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 169:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****    display_writeImage( &_display, catImage);
 320               	.LM30:
 321               	/* #NOAPP */
 322 003c 60E0      		ldi r22,lo8(catImage)
 323 003e 70E0      		ldi r23,hi8(catImage)
 324 0040 80E0      		ldi r24,lo8(_display)
 325 0042 90E0      		ldi r25,hi8(_display)
 326 0044 0E94 0000 		call display_writeImage
 327               	.LBB14:
 328               	.LBB15:
 330               	.Ltext1:
   1:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   6:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   9:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  12:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      distribution.
  16:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  17:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  21:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  33:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* $Id$ */
  34:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  35:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  38:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  41:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  42:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  46:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \file */
  47:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \code
  49:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \endcode
  53:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  54:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     used.
  58:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  59:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  68:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  77:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  81:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** */
  82:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  83:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  87:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  88:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  93:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  94:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  97:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  98:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
 103:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 104:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /**
 105:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 107:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 109:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 112:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 114:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 120:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 125:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 129:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 132:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 140:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  */
 141:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** void
 142:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** {
 144:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	double __tmp ; 
 145:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 146:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 147:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 148:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 149:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 152:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 153:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 154:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 155:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 156:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 157:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 158:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#else
 159:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//round up by default
 160:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 161:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#endif
 162:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 163:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 332               	.LM31:
 333 0048 2FEF      		ldi r18,lo8(3199999)
 334 004a 83ED      		ldi r24,hi8(3199999)
 335 004c 90E3      		ldi r25,hlo8(3199999)
 336 004e 2150      		1: subi r18,1
 337 0050 8040      		sbci r24,0
 338 0052 9040      		sbci r25,0
 339 0054 01F4      		brne 1b
 340 0056 00C0      		rjmp .
 341 0058 0000      		nop
 342               	.LBE15:
 343               	.LBE14:
 345               	.Ltext2:
 170:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 171:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 172:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     _delay_ms(1000);
 173:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 174:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /* **** END OF Splash wait **** */
 175:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 176:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /* WRITE CAN ID */
 177:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 178:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     display_clear( &_display);
 347               	.LM32:
 348 005a 80E0      		ldi r24,lo8(_display)
 349 005c 90E0      		ldi r25,hi8(_display)
 350 005e 0E94 0000 		call display_clear
 179:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 180:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     display_write( &_display,"can ID", 0, 0);
 352               	.LM33:
 353 0062 20E0      		ldi r18,0
 354 0064 40E0      		ldi r20,0
 355 0066 60E0      		ldi r22,lo8(.LC2)
 356 0068 70E0      		ldi r23,hi8(.LC2)
 357 006a 80E0      		ldi r24,lo8(_display)
 358 006c 90E0      		ldi r25,hi8(_display)
 359 006e 0E94 0000 		call display_write
 181:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 182:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     char str[3];
 183:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     sprintf(str, "%i" , 16);
 361               	.LM34:
 362 0072 1F92      		push __zero_reg__
 363 0074 80E1      		ldi r24,lo8(16)
 364 0076 8F93      		push r24
 365 0078 80E0      		ldi r24,lo8(.LC3)
 366 007a 90E0      		ldi r25,hi8(.LC3)
 367 007c 9F93      		push r25
 368 007e 8F93      		push r24
 369 0080 8E01      		movw r16,r28
 370 0082 0F5F      		subi r16,-1
 371 0084 1F4F      		sbci r17,-1
 372 0086 1F93      		push r17
 373 0088 0F93      		push r16
 374 008a 0E94 0000 		call sprintf
 184:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     display_write( &_display,str, 0, 8);
 376               	.LM35:
 377 008e 28E0      		ldi r18,lo8(8)
 378 0090 40E0      		ldi r20,0
 379 0092 B801      		movw r22,r16
 380 0094 80E0      		ldi r24,lo8(_display)
 381 0096 90E0      		ldi r25,hi8(_display)
 382 0098 0E94 0000 		call display_write
 383 009c 0F90      		pop __tmp_reg__
 384 009e 0F90      		pop __tmp_reg__
 385 00a0 0F90      		pop __tmp_reg__
 386 00a2 0F90      		pop __tmp_reg__
 387 00a4 0F90      		pop __tmp_reg__
 388 00a6 0F90      		pop __tmp_reg__
 185:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 186:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /* END OF WRITE CAN ID */
 187:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 188:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     uint8_t ldr_index = MIC_SENCOR_COUNT;
 189:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 190:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     float prevVal = 0.f;
 191:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     float dVal    =0.f;
 390               	.LM36:
 391 00a8 C12C      		mov r12,__zero_reg__
 392 00aa B12C      		mov r11,__zero_reg__
 393 00ac 912C      		mov r9,__zero_reg__
 394 00ae 812C      		mov r8,__zero_reg__
 190:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     float prevVal = 0.f;
 396               	.LM37:
 397 00b0 412C      		mov r4,__zero_reg__
 398 00b2 512C      		mov r5,__zero_reg__
 399 00b4 612C      		mov r6,__zero_reg__
 400 00b6 712C      		mov r7,__zero_reg__
 188:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     uint8_t ldr_index = MIC_SENCOR_COUNT;
 402               	.LM38:
 403 00b8 8FE0      		ldi r24,lo8(15)
 404 00ba D82E      		mov r13,r24
 405               	.LBB16:
 192:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 193:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     uint8_t debouceMax  = 2;
 194:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     static uint8_t debounceCount = 0;
 195:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 196:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     for (;;)
 197:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     {
 198:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         if ( ldr_index == MIC_SENCOR_COUNT)
 199:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         {
 200:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             setHigh( LDR_DATA_PORT , LDR_DATA_PIN );
 201:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             ldr_index = 0;
 202:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 203:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             // matrice entiere
 204:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 205:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             dVal /= MIC_SENCOR_COUNT*SENSOR_COUNT;
 206:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 207:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             float res = fabs( dVal -prevVal );
 208:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 209:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 210:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 211:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             if ((res >= 100) )
 212:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             {
 213:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                 if ( debounceCount >= debouceMax)
 214:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                 {
 215:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     writeNext();
 216:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     
 217:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     _display.buff_A[29][29] = 255;
 407               	.LM39:
 408 00bc AA24      		clr r10
 409 00be AA94      		dec r10
 410               	.L20:
 411               	.LBE16:
 198:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         if ( ldr_index == MIC_SENCOR_COUNT)
 413               	.LM40:
 414 00c0 2FE0      		ldi r18,lo8(15)
 415 00c2 D212      		cpse r13,r18
 416 00c4 00C0      		rjmp .L12
 417               	.LBB19:
 200:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             setHigh( LDR_DATA_PORT , LDR_DATA_PIN );
 419               	.LM41:
 420 00c6 5F9A      		sbi 0xb,7
 205:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             dVal /= MIC_SENCOR_COUNT*SENSOR_COUNT;
 422               	.LM42:
 423 00c8 20E0      		ldi r18,0
 424 00ca 30E0      		ldi r19,0
 425 00cc 41E6      		ldi r20,lo8(97)
 426 00ce 53E4      		ldi r21,lo8(67)
 427 00d0 6C2D      		mov r22,r12
 428 00d2 7B2D      		mov r23,r11
 429 00d4 892D      		mov r24,r9
 430 00d6 982D      		mov r25,r8
 431 00d8 0E94 0000 		call __divsf3
 432 00dc 7B01      		movw r14,r22
 433 00de 8C01      		movw r16,r24
 207:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             float res = fabs( dVal -prevVal );
 435               	.LM43:
 436 00e0 9201      		movw r18,r4
 437 00e2 A301      		movw r20,r6
 438 00e4 0E94 0000 		call __subsf3
 439 00e8 9F77      		andi r25,0x7f
 211:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             if ((res >= 100) )
 441               	.LM44:
 442 00ea 20E0      		ldi r18,0
 443 00ec 30E0      		ldi r19,0
 444 00ee 48EC      		ldi r20,lo8(-56)
 445 00f0 52E4      		ldi r21,lo8(66)
 446 00f2 0E94 0000 		call __gesf2
 447 00f6 87FD      		sbrc r24,7
 448 00f8 00C0      		rjmp .L23
 213:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                 if ( debounceCount >= debouceMax)
 450               	.LM45:
 451 00fa 8091 0000 		lds r24,debounceCount.2137
 452 00fe 8230      		cpi r24,lo8(2)
 453 0100 00F0      		brlo .L15
 215:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     writeNext();
 455               	.LM46:
 456 0102 0E94 0000 		call writeNext
 458               	.LM47:
 459 0106 A092 0000 		sts _display+899,r10
 460               	.LBB17:
 461               	.LBB18:
 463               	.Ltext3:
 465               	.LM48:
 466 010a 8FEF      		ldi r24,lo8(319999)
 467 010c 91EE      		ldi r25,hi8(319999)
 468 010e 24E0      		ldi r18,hlo8(319999)
 469 0110 8150      		1: subi r24,1
 470 0112 9040      		sbci r25,0
 471 0114 2040      		sbci r18,0
 472 0116 01F4      		brne 1b
 473 0118 00C0      		rjmp .
 474 011a 0000      		nop
 475               	.LBE18:
 476               	.LBE17:
 478               	.Ltext4:
 218:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     _delay_ms(100);
 219:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     _display.buff_A[29][29] = 0;
 480               	.LM49:
 481 011c 1092 0000 		sts _display+899,__zero_reg__
 220:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     
 221:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     debounceCount = 0;
 483               	.LM50:
 484 0120 1092 0000 		sts debounceCount.2137,__zero_reg__
 485 0124 00C0      		rjmp .L23
 486               	.L15:
 222:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                 }
 223:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                 else
 224:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     debounceCount++;
 488               	.LM51:
 489 0126 8F5F      		subi r24,lo8(-(1))
 490 0128 8093 0000 		sts debounceCount.2137,r24
 491 012c 00C0      		rjmp .L23
 492               	.L12:
 493               	.LBE19:
 225:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                 
 226:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 227:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             }
 228:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 229:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             prevVal = dVal;
 230:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         }
 231:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 232:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         else
 233:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             setLow( LDR_DATA_PORT , LDR_DATA_PIN );
 495               	.LM52:
 496 012e 5F98      		cbi 0xb,7
 497 0130 7201      		movw r14,r4
 498 0132 8301      		movw r16,r6
 499 0134 00C0      		rjmp .L13
 500               	.L23:
 501               	.LBB20:
 205:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             dVal /= MIC_SENCOR_COUNT*SENSOR_COUNT;
 503               	.LM53:
 504 0136 CE2C      		mov r12,r14
 505 0138 BF2C      		mov r11,r15
 506 013a 902E      		mov r9,r16
 507 013c 812E      		mov r8,r17
 201:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             ldr_index = 0;
 509               	.LM54:
 510 013e D12C      		mov r13,__zero_reg__
 511               	.L13:
 512               	.LBE20:
 234:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 235:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 236:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         pulse( LDR_CLOCK_PORT , LDR_CLOCK_PIN);
 514               	.LM55:
 515 0140 5E9A      		sbi 0xb,6
 516 0142 5E98      		cbi 0xb,6
 517 0144 712C      		mov r7,__zero_reg__
 518               	.L19:
 519               	.LBB21:
 520               	.LBB22:
 521               	.LBB23:
  65:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ADMUX = (ADMUX & 0xF8)|ch; // clears the bottom 3 bits before ORing
 523               	.LM56:
 524 0146 9091 7C00 		lds r25,124
  64:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ch &= 0b00000111;  // AND operation with 7
 526               	.LM57:
 527 014a 872D      		mov r24,r7
 528 014c 8770      		andi r24,lo8(7)
  65:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ADMUX = (ADMUX & 0xF8)|ch; // clears the bottom 3 bits before ORing
 530               	.LM58:
 531 014e 987F      		andi r25,lo8(-8)
 532 0150 892B      		or r24,r25
 533 0152 8093 7C00 		sts 124,r24
  69:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ADCSRA |= (1<<ADSC);
 535               	.LM59:
 536 0156 8091 7A00 		lds r24,122
 537 015a 8064      		ori r24,lo8(64)
 538 015c 8093 7A00 		sts 122,r24
 539               	.L17:
  74:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     while(ADCSRA & (1<<ADSC));
 541               	.LM60:
 542 0160 8091 7A00 		lds r24,122
 543 0164 86FD      		sbrc r24,6
 544 0166 00C0      		rjmp .L17
  76:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     return (ADC);
 546               	.LM61:
 547 0168 6091 7800 		lds r22,120
 548 016c 7091 7900 		lds r23,120+1
 549               	.LBE23:
 550               	.LBE22:
 237:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 238:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         for (int i=0; i< SENSOR_COUNT ; i++)
 239:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         {
 240:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             // ldr 0 -> pix0 + pix 1
 241:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             // ldr 1 -> pix2 + pix 3
 242:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             // ldr 2 -> pix4 + pix 5
 243:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             // ldr i -> pix i*2 + pix (i*2)+1
 244:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 245:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             //const uint8_t index = ldr_index*2;
 246:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 247:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             //mat_sensors[i] = (uint8_t) adc_read(i);
 248:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 249:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             dVal += adc_read(i);
 552               	.LM62:
 553 0170 80E0      		ldi r24,0
 554 0172 90E0      		ldi r25,0
 555 0174 0E94 0000 		call __floatunsisf
 556 0178 9B01      		movw r18,r22
 557 017a AC01      		movw r20,r24
 558 017c 6C2D      		mov r22,r12
 559 017e 7B2D      		mov r23,r11
 560 0180 892D      		mov r24,r9
 561 0182 982D      		mov r25,r8
 562 0184 0E94 0000 		call __addsf3
 563 0188 C62E      		mov r12,r22
 564 018a B72E      		mov r11,r23
 565 018c 982E      		mov r9,r24
 566 018e 892E      		mov r8,r25
 567 0190 7394      		inc r7
 238:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         for (int i=0; i< SENSOR_COUNT ; i++)
 569               	.LM63:
 570 0192 8FE0      		ldi r24,lo8(15)
 571 0194 7812      		cpse r7,r24
 572 0196 00C0      		rjmp .L19
 573               	.LBE21:
 574               	.LBB24:
 575               	.LBB25:
 577               	.Ltext5:
 579               	.LM64:
 580 0198 9FEF      		ldi r25,lo8(63999)
 581 019a 29EF      		ldi r18,hi8(63999)
 582 019c 80E0      		ldi r24,hlo8(63999)
 583 019e 9150      		1: subi r25,1
 584 01a0 2040      		sbci r18,0
 585 01a2 8040      		sbci r24,0
 586 01a4 01F4      		brne 1b
 587 01a6 00C0      		rjmp .
 588 01a8 0000      		nop
 589               	.LBE25:
 590               	.LBE24:
 592               	.Ltext6:
 250:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 251:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             /*
 252:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             pixels[i][index] = mat_sensors[i];
 253:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             pixels[i][index+1] = mat_sensors[i];
 254:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****              */
 255:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         }
 256:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 257:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 258:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 259:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 260:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         _delay_ms(20);
 261:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 262:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         ldr_index++;
 594               	.LM65:
 595 01aa D394      		inc r13
 263:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 264:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     } // end endless for
 597               	.LM66:
 598 01ac 2701      		movw r4,r14
 599 01ae 3801      		movw r6,r16
 600 01b0 00C0      		rjmp .L20
 607               	.Lscope3:
 608               		.local	debounceCount.2137
 609               		.comm	debounceCount.2137,1,1
 610               		.local	index.2124
 611               		.comm	index.2124,1,1
 612               	.global	mat_sensors
 613               		.section .bss
 616               	mat_sensors:
 617 0000 0000 0000 		.zero	15
 617      0000 0000 
 617      0000 0000 
 617      0000 00
 618               		.comm	_display,1807,1
 619               	.global	catImage
 620               		.data
 623               	catImage:
 624 0000 FF        		.byte	-1
 625 0001 FF        		.byte	-1
 626 0002 FF        		.byte	-1
 627 0003 FF        		.byte	-1
 628 0004 FF        		.byte	-1
 629 0005 FF        		.byte	-1
 630 0006 FF        		.byte	-1
 631 0007 FF        		.byte	-1
 632 0008 FF        		.byte	-1
 633 0009 FF        		.byte	-1
 634 000a FF        		.byte	-1
 635 000b FF        		.byte	-1
 636 000c FF        		.byte	-1
 637 000d FF        		.byte	-1
 638 000e FF        		.byte	-1
 639 000f FF        		.byte	-1
 640 0010 FF        		.byte	-1
 641 0011 FF        		.byte	-1
 642 0012 FF        		.byte	-1
 643 0013 FF        		.byte	-1
 644 0014 FF        		.byte	-1
 645 0015 FF        		.byte	-1
 646 0016 FF        		.byte	-1
 647 0017 FF        		.byte	-1
 648 0018 FF        		.byte	-1
 649 0019 FF        		.byte	-1
 650 001a FF        		.byte	-1
 651 001b 92        		.byte	-110
 652 001c 00        		.byte	0
 653 001d DB        		.byte	-37
 654 001e FF        		.byte	-1
 655 001f FF        		.byte	-1
 656 0020 FF        		.byte	-1
 657 0021 FF        		.byte	-1
 658 0022 FF        		.byte	-1
 659 0023 FF        		.byte	-1
 660 0024 FF        		.byte	-1
 661 0025 FF        		.byte	-1
 662 0026 FF        		.byte	-1
 663 0027 FF        		.byte	-1
 664 0028 FF        		.byte	-1
 665 0029 FF        		.byte	-1
 666 002a FF        		.byte	-1
 667 002b FF        		.byte	-1
 668 002c FF        		.byte	-1
 669 002d FF        		.byte	-1
 670 002e FF        		.byte	-1
 671 002f FF        		.byte	-1
 672 0030 FF        		.byte	-1
 673 0031 FF        		.byte	-1
 674 0032 FF        		.byte	-1
 675 0033 24        		.byte	36
 676 0034 00        		.byte	0
 677 0035 92        		.byte	-110
 678 0036 DB        		.byte	-37
 679 0037 DB        		.byte	-37
 680 0038 6D        		.byte	109
 681 0039 00        		.byte	0
 682 003a 00        		.byte	0
 683 003b 92        		.byte	-110
 684 003c FF        		.byte	-1
 685 003d FF        		.byte	-1
 686 003e FF        		.byte	-1
 687 003f FF        		.byte	-1
 688 0040 FF        		.byte	-1
 689 0041 FF        		.byte	-1
 690 0042 FF        		.byte	-1
 691 0043 FF        		.byte	-1
 692 0044 FF        		.byte	-1
 693 0045 FF        		.byte	-1
 694 0046 FF        		.byte	-1
 695 0047 FF        		.byte	-1
 696 0048 FF        		.byte	-1
 697 0049 FF        		.byte	-1
 698 004a FF        		.byte	-1
 699 004b FF        		.byte	-1
 700 004c FF        		.byte	-1
 701 004d FF        		.byte	-1
 702 004e FF        		.byte	-1
 703 004f FF        		.byte	-1
 704 0050 FF        		.byte	-1
 705 0051 24        		.byte	36
 706 0052 00        		.byte	0
 707 0053 00        		.byte	0
 708 0054 00        		.byte	0
 709 0055 00        		.byte	0
 710 0056 00        		.byte	0
 711 0057 00        		.byte	0
 712 0058 00        		.byte	0
 713 0059 6D        		.byte	109
 714 005a FF        		.byte	-1
 715 005b FF        		.byte	-1
 716 005c FF        		.byte	-1
 717 005d FF        		.byte	-1
 718 005e FF        		.byte	-1
 719 005f FF        		.byte	-1
 720 0060 FF        		.byte	-1
 721 0061 FF        		.byte	-1
 722 0062 FF        		.byte	-1
 723 0063 FF        		.byte	-1
 724 0064 FF        		.byte	-1
 725 0065 FF        		.byte	-1
 726 0066 FF        		.byte	-1
 727 0067 FF        		.byte	-1
 728 0068 FF        		.byte	-1
 729 0069 FF        		.byte	-1
 730 006a FF        		.byte	-1
 731 006b FF        		.byte	-1
 732 006c FF        		.byte	-1
 733 006d FF        		.byte	-1
 734 006e FF        		.byte	-1
 735 006f 6D        		.byte	109
 736 0070 00        		.byte	0
 737 0071 00        		.byte	0
 738 0072 00        		.byte	0
 739 0073 00        		.byte	0
 740 0074 00        		.byte	0
 741 0075 00        		.byte	0
 742 0076 00        		.byte	0
 743 0077 24        		.byte	36
 744 0078 FF        		.byte	-1
 745 0079 FF        		.byte	-1
 746 007a FF        		.byte	-1
 747 007b FF        		.byte	-1
 748 007c FF        		.byte	-1
 749 007d FF        		.byte	-1
 750 007e FF        		.byte	-1
 751 007f FF        		.byte	-1
 752 0080 FF        		.byte	-1
 753 0081 FF        		.byte	-1
 754 0082 FF        		.byte	-1
 755 0083 FF        		.byte	-1
 756 0084 FF        		.byte	-1
 757 0085 FF        		.byte	-1
 758 0086 FF        		.byte	-1
 759 0087 FF        		.byte	-1
 760 0088 FF        		.byte	-1
 761 0089 FF        		.byte	-1
 762 008a FF        		.byte	-1
 763 008b FF        		.byte	-1
 764 008c FF        		.byte	-1
 765 008d DB        		.byte	-37
 766 008e 00        		.byte	0
 767 008f 00        		.byte	0
 768 0090 00        		.byte	0
 769 0091 00        		.byte	0
 770 0092 00        		.byte	0
 771 0093 00        		.byte	0
 772 0094 00        		.byte	0
 773 0095 00        		.byte	0
 774 0096 FF        		.byte	-1
 775 0097 FF        		.byte	-1
 776 0098 FF        		.byte	-1
 777 0099 FF        		.byte	-1
 778 009a FF        		.byte	-1
 779 009b FF        		.byte	-1
 780 009c FF        		.byte	-1
 781 009d FF        		.byte	-1
 782 009e FF        		.byte	-1
 783 009f FF        		.byte	-1
 784 00a0 FF        		.byte	-1
 785 00a1 FF        		.byte	-1
 786 00a2 FF        		.byte	-1
 787 00a3 FF        		.byte	-1
 788 00a4 FF        		.byte	-1
 789 00a5 FF        		.byte	-1
 790 00a6 FF        		.byte	-1
 791 00a7 FF        		.byte	-1
 792 00a8 FF        		.byte	-1
 793 00a9 FF        		.byte	-1
 794 00aa FF        		.byte	-1
 795 00ab FF        		.byte	-1
 796 00ac 24        		.byte	36
 797 00ad 00        		.byte	0
 798 00ae 00        		.byte	0
 799 00af 00        		.byte	0
 800 00b0 00        		.byte	0
 801 00b1 00        		.byte	0
 802 00b2 00        		.byte	0
 803 00b3 49        		.byte	73
 804 00b4 FF        		.byte	-1
 805 00b5 FF        		.byte	-1
 806 00b6 FF        		.byte	-1
 807 00b7 FF        		.byte	-1
 808 00b8 FF        		.byte	-1
 809 00b9 FF        		.byte	-1
 810 00ba FF        		.byte	-1
 811 00bb FF        		.byte	-1
 812 00bc FF        		.byte	-1
 813 00bd FF        		.byte	-1
 814 00be FF        		.byte	-1
 815 00bf FF        		.byte	-1
 816 00c0 FF        		.byte	-1
 817 00c1 FF        		.byte	-1
 818 00c2 FF        		.byte	-1
 819 00c3 FF        		.byte	-1
 820 00c4 FF        		.byte	-1
 821 00c5 FF        		.byte	-1
 822 00c6 FF        		.byte	-1
 823 00c7 FF        		.byte	-1
 824 00c8 FF        		.byte	-1
 825 00c9 FF        		.byte	-1
 826 00ca 6D        		.byte	109
 827 00cb 00        		.byte	0
 828 00cc 00        		.byte	0
 829 00cd 00        		.byte	0
 830 00ce 00        		.byte	0
 831 00cf 00        		.byte	0
 832 00d0 00        		.byte	0
 833 00d1 FF        		.byte	-1
 834 00d2 FF        		.byte	-1
 835 00d3 FF        		.byte	-1
 836 00d4 FF        		.byte	-1
 837 00d5 FF        		.byte	-1
 838 00d6 FF        		.byte	-1
 839 00d7 FF        		.byte	-1
 840 00d8 FF        		.byte	-1
 841 00d9 FF        		.byte	-1
 842 00da FF        		.byte	-1
 843 00db FF        		.byte	-1
 844 00dc FF        		.byte	-1
 845 00dd FF        		.byte	-1
 846 00de FF        		.byte	-1
 847 00df FF        		.byte	-1
 848 00e0 FF        		.byte	-1
 849 00e1 FF        		.byte	-1
 850 00e2 FF        		.byte	-1
 851 00e3 FF        		.byte	-1
 852 00e4 FF        		.byte	-1
 853 00e5 FF        		.byte	-1
 854 00e6 FF        		.byte	-1
 855 00e7 FF        		.byte	-1
 856 00e8 24        		.byte	36
 857 00e9 00        		.byte	0
 858 00ea 00        		.byte	0
 859 00eb 00        		.byte	0
 860 00ec 00        		.byte	0
 861 00ed 00        		.byte	0
 862 00ee 49        		.byte	73
 863 00ef FF        		.byte	-1
 864 00f0 FF        		.byte	-1
 865 00f1 FF        		.byte	-1
 866 00f2 FF        		.byte	-1
 867 00f3 FF        		.byte	-1
 868 00f4 FF        		.byte	-1
 869 00f5 FF        		.byte	-1
 870 00f6 FF        		.byte	-1
 871 00f7 FF        		.byte	-1
 872 00f8 FF        		.byte	-1
 873 00f9 FF        		.byte	-1
 874 00fa FF        		.byte	-1
 875 00fb FF        		.byte	-1
 876 00fc FF        		.byte	-1
 877 00fd FF        		.byte	-1
 878 00fe FF        		.byte	-1
 879 00ff FF        		.byte	-1
 880 0100 FF        		.byte	-1
 881 0101 DB        		.byte	-37
 882 0102 92        		.byte	-110
 883 0103 6D        		.byte	109
 884 0104 24        		.byte	36
 885 0105 00        		.byte	0
 886 0106 00        		.byte	0
 887 0107 00        		.byte	0
 888 0108 00        		.byte	0
 889 0109 00        		.byte	0
 890 010a 00        		.byte	0
 891 010b 00        		.byte	0
 892 010c 00        		.byte	0
 893 010d FF        		.byte	-1
 894 010e FF        		.byte	-1
 895 010f FF        		.byte	-1
 896 0110 FF        		.byte	-1
 897 0111 FF        		.byte	-1
 898 0112 FF        		.byte	-1
 899 0113 FF        		.byte	-1
 900 0114 FF        		.byte	-1
 901 0115 FF        		.byte	-1
 902 0116 FF        		.byte	-1
 903 0117 FF        		.byte	-1
 904 0118 FF        		.byte	-1
 905 0119 FF        		.byte	-1
 906 011a FF        		.byte	-1
 907 011b FF        		.byte	-1
 908 011c FF        		.byte	-1
 909 011d 92        		.byte	-110
 910 011e 24        		.byte	36
 911 011f 00        		.byte	0
 912 0120 00        		.byte	0
 913 0121 00        		.byte	0
 914 0122 00        		.byte	0
 915 0123 00        		.byte	0
 916 0124 00        		.byte	0
 917 0125 00        		.byte	0
 918 0126 00        		.byte	0
 919 0127 00        		.byte	0
 920 0128 00        		.byte	0
 921 0129 00        		.byte	0
 922 012a 00        		.byte	0
 923 012b FF        		.byte	-1
 924 012c FF        		.byte	-1
 925 012d FF        		.byte	-1
 926 012e FF        		.byte	-1
 927 012f FF        		.byte	-1
 928 0130 FF        		.byte	-1
 929 0131 FF        		.byte	-1
 930 0132 FF        		.byte	-1
 931 0133 FF        		.byte	-1
 932 0134 FF        		.byte	-1
 933 0135 FF        		.byte	-1
 934 0136 FF        		.byte	-1
 935 0137 FF        		.byte	-1
 936 0138 FF        		.byte	-1
 937 0139 B6        		.byte	-74
 938 013a 00        		.byte	0
 939 013b 00        		.byte	0
 940 013c 00        		.byte	0
 941 013d 00        		.byte	0
 942 013e 00        		.byte	0
 943 013f 00        		.byte	0
 944 0140 00        		.byte	0
 945 0141 00        		.byte	0
 946 0142 00        		.byte	0
 947 0143 00        		.byte	0
 948 0144 00        		.byte	0
 949 0145 00        		.byte	0
 950 0146 00        		.byte	0
 951 0147 00        		.byte	0
 952 0148 00        		.byte	0
 953 0149 DB        		.byte	-37
 954 014a FF        		.byte	-1
 955 014b FF        		.byte	-1
 956 014c FF        		.byte	-1
 957 014d FF        		.byte	-1
 958 014e FF        		.byte	-1
 959 014f FF        		.byte	-1
 960 0150 FF        		.byte	-1
 961 0151 FF        		.byte	-1
 962 0152 FF        		.byte	-1
 963 0153 FF        		.byte	-1
 964 0154 FF        		.byte	-1
 965 0155 FF        		.byte	-1
 966 0156 92        		.byte	-110
 967 0157 00        		.byte	0
 968 0158 00        		.byte	0
 969 0159 00        		.byte	0
 970 015a 00        		.byte	0
 971 015b 00        		.byte	0
 972 015c 00        		.byte	0
 973 015d 00        		.byte	0
 974 015e 00        		.byte	0
 975 015f 00        		.byte	0
 976 0160 00        		.byte	0
 977 0161 00        		.byte	0
 978 0162 00        		.byte	0
 979 0163 00        		.byte	0
 980 0164 00        		.byte	0
 981 0165 00        		.byte	0
 982 0166 00        		.byte	0
 983 0167 FF        		.byte	-1
 984 0168 FF        		.byte	-1
 985 0169 FF        		.byte	-1
 986 016a FF        		.byte	-1
 987 016b FF        		.byte	-1
 988 016c FF        		.byte	-1
 989 016d FF        		.byte	-1
 990 016e FF        		.byte	-1
 991 016f FF        		.byte	-1
 992 0170 FF        		.byte	-1
 993 0171 FF        		.byte	-1
 994 0172 FF        		.byte	-1
 995 0173 B6        		.byte	-74
 996 0174 00        		.byte	0
 997 0175 00        		.byte	0
 998 0176 00        		.byte	0
 999 0177 00        		.byte	0
 1000 0178 00        		.byte	0
 1001 0179 00        		.byte	0
 1002 017a 00        		.byte	0
 1003 017b 00        		.byte	0
 1004 017c 00        		.byte	0
 1005 017d 00        		.byte	0
 1006 017e 00        		.byte	0
 1007 017f 00        		.byte	0
 1008 0180 00        		.byte	0
 1009 0181 00        		.byte	0
 1010 0182 00        		.byte	0
 1011 0183 00        		.byte	0
 1012 0184 6D        		.byte	109
 1013 0185 FF        		.byte	-1
 1014 0186 FF        		.byte	-1
 1015 0187 FF        		.byte	-1
 1016 0188 FF        		.byte	-1
 1017 0189 FF        		.byte	-1
 1018 018a FF        		.byte	-1
 1019 018b FF        		.byte	-1
 1020 018c FF        		.byte	-1
 1021 018d FF        		.byte	-1
 1022 018e FF        		.byte	-1
 1023 018f FF        		.byte	-1
 1024 0190 FF        		.byte	-1
 1025 0191 00        		.byte	0
 1026 0192 00        		.byte	0
 1027 0193 00        		.byte	0
 1028 0194 00        		.byte	0
 1029 0195 00        		.byte	0
 1030 0196 00        		.byte	0
 1031 0197 00        		.byte	0
 1032 0198 00        		.byte	0
 1033 0199 00        		.byte	0
 1034 019a 00        		.byte	0
 1035 019b 00        		.byte	0
 1036 019c 00        		.byte	0
 1037 019d 00        		.byte	0
 1038 019e 00        		.byte	0
 1039 019f 00        		.byte	0
 1040 01a0 00        		.byte	0
 1041 01a1 49        		.byte	73
 1042 01a2 FF        		.byte	-1
 1043 01a3 FF        		.byte	-1
 1044 01a4 FF        		.byte	-1
 1045 01a5 FF        		.byte	-1
 1046 01a6 FF        		.byte	-1
 1047 01a7 FF        		.byte	-1
 1048 01a8 FF        		.byte	-1
 1049 01a9 FF        		.byte	-1
 1050 01aa FF        		.byte	-1
 1051 01ab FF        		.byte	-1
 1052 01ac FF        		.byte	-1
 1053 01ad FF        		.byte	-1
 1054 01ae 49        		.byte	73
 1055 01af 00        		.byte	0
 1056 01b0 00        		.byte	0
 1057 01b1 00        		.byte	0
 1058 01b2 00        		.byte	0
 1059 01b3 00        		.byte	0
 1060 01b4 00        		.byte	0
 1061 01b5 00        		.byte	0
 1062 01b6 00        		.byte	0
 1063 01b7 00        		.byte	0
 1064 01b8 00        		.byte	0
 1065 01b9 00        		.byte	0
 1066 01ba 00        		.byte	0
 1067 01bb 00        		.byte	0
 1068 01bc 00        		.byte	0
 1069 01bd 00        		.byte	0
 1070 01be 24        		.byte	36
 1071 01bf FF        		.byte	-1
 1072 01c0 FF        		.byte	-1
 1073 01c1 FF        		.byte	-1
 1074 01c2 FF        		.byte	-1
 1075 01c3 FF        		.byte	-1
 1076 01c4 FF        		.byte	-1
 1077 01c5 FF        		.byte	-1
 1078 01c6 FF        		.byte	-1
 1079 01c7 FF        		.byte	-1
 1080 01c8 FF        		.byte	-1
 1081 01c9 FF        		.byte	-1
 1082 01ca FF        		.byte	-1
 1083 01cb DB        		.byte	-37
 1084 01cc 00        		.byte	0
 1085 01cd 00        		.byte	0
 1086 01ce 00        		.byte	0
 1087 01cf 00        		.byte	0
 1088 01d0 00        		.byte	0
 1089 01d1 00        		.byte	0
 1090 01d2 00        		.byte	0
 1091 01d3 00        		.byte	0
 1092 01d4 00        		.byte	0
 1093 01d5 00        		.byte	0
 1094 01d6 00        		.byte	0
 1095 01d7 00        		.byte	0
 1096 01d8 00        		.byte	0
 1097 01d9 00        		.byte	0
 1098 01da 00        		.byte	0
 1099 01db 00        		.byte	0
 1100 01dc DB        		.byte	-37
 1101 01dd FF        		.byte	-1
 1102 01de FF        		.byte	-1
 1103 01df FF        		.byte	-1
 1104 01e0 FF        		.byte	-1
 1105 01e1 FF        		.byte	-1
 1106 01e2 FF        		.byte	-1
 1107 01e3 FF        		.byte	-1
 1108 01e4 FF        		.byte	-1
 1109 01e5 FF        		.byte	-1
 1110 01e6 FF        		.byte	-1
 1111 01e7 FF        		.byte	-1
 1112 01e8 FF        		.byte	-1
 1113 01e9 92        		.byte	-110
 1114 01ea 00        		.byte	0
 1115 01eb 00        		.byte	0
 1116 01ec 00        		.byte	0
 1117 01ed 00        		.byte	0
 1118 01ee 00        		.byte	0
 1119 01ef 00        		.byte	0
 1120 01f0 00        		.byte	0
 1121 01f1 00        		.byte	0
 1122 01f2 00        		.byte	0
 1123 01f3 00        		.byte	0
 1124 01f4 00        		.byte	0
 1125 01f5 00        		.byte	0
 1126 01f6 00        		.byte	0
 1127 01f7 00        		.byte	0
 1128 01f8 00        		.byte	0
 1129 01f9 49        		.byte	73
 1130 01fa FF        		.byte	-1
 1131 01fb FF        		.byte	-1
 1132 01fc FF        		.byte	-1
 1133 01fd FF        		.byte	-1
 1134 01fe FF        		.byte	-1
 1135 01ff FF        		.byte	-1
 1136 0200 FF        		.byte	-1
 1137 0201 FF        		.byte	-1
 1138 0202 FF        		.byte	-1
 1139 0203 FF        		.byte	-1
 1140 0204 FF        		.byte	-1
 1141 0205 FF        		.byte	-1
 1142 0206 FF        		.byte	-1
 1143 0207 24        		.byte	36
 1144 0208 00        		.byte	0
 1145 0209 00        		.byte	0
 1146 020a 00        		.byte	0
 1147 020b 00        		.byte	0
 1148 020c 00        		.byte	0
 1149 020d 00        		.byte	0
 1150 020e 00        		.byte	0
 1151 020f 00        		.byte	0
 1152 0210 00        		.byte	0
 1153 0211 00        		.byte	0
 1154 0212 00        		.byte	0
 1155 0213 00        		.byte	0
 1156 0214 00        		.byte	0
 1157 0215 00        		.byte	0
 1158 0216 00        		.byte	0
 1159 0217 92        		.byte	-110
 1160 0218 FF        		.byte	-1
 1161 0219 FF        		.byte	-1
 1162 021a FF        		.byte	-1
 1163 021b FF        		.byte	-1
 1164 021c FF        		.byte	-1
 1165 021d FF        		.byte	-1
 1166 021e FF        		.byte	-1
 1167 021f FF        		.byte	-1
 1168 0220 FF        		.byte	-1
 1169 0221 FF        		.byte	-1
 1170 0222 FF        		.byte	-1
 1171 0223 FF        		.byte	-1
 1172 0224 FF        		.byte	-1
 1173 0225 00        		.byte	0
 1174 0226 00        		.byte	0
 1175 0227 00        		.byte	0
 1176 0228 00        		.byte	0
 1177 0229 00        		.byte	0
 1178 022a 00        		.byte	0
 1179 022b 00        		.byte	0
 1180 022c 00        		.byte	0
 1181 022d 00        		.byte	0
 1182 022e 00        		.byte	0
 1183 022f 00        		.byte	0
 1184 0230 00        		.byte	0
 1185 0231 00        		.byte	0
 1186 0232 00        		.byte	0
 1187 0233 00        		.byte	0
 1188 0234 00        		.byte	0
 1189 0235 B6        		.byte	-74
 1190 0236 FF        		.byte	-1
 1191 0237 FF        		.byte	-1
 1192 0238 FF        		.byte	-1
 1193 0239 FF        		.byte	-1
 1194 023a FF        		.byte	-1
 1195 023b FF        		.byte	-1
 1196 023c FF        		.byte	-1
 1197 023d FF        		.byte	-1
 1198 023e FF        		.byte	-1
 1199 023f FF        		.byte	-1
 1200 0240 FF        		.byte	-1
 1201 0241 FF        		.byte	-1
 1202 0242 92        		.byte	-110
 1203 0243 00        		.byte	0
 1204 0244 00        		.byte	0
 1205 0245 00        		.byte	0
 1206 0246 00        		.byte	0
 1207 0247 00        		.byte	0
 1208 0248 00        		.byte	0
 1209 0249 00        		.byte	0
 1210 024a 00        		.byte	0
 1211 024b 00        		.byte	0
 1212 024c 00        		.byte	0
 1213 024d 00        		.byte	0
 1214 024e 00        		.byte	0
 1215 024f 49        		.byte	73
 1216 0250 00        		.byte	0
 1217 0251 00        		.byte	0
 1218 0252 00        		.byte	0
 1219 0253 B6        		.byte	-74
 1220 0254 FF        		.byte	-1
 1221 0255 FF        		.byte	-1
 1222 0256 FF        		.byte	-1
 1223 0257 FF        		.byte	-1
 1224 0258 FF        		.byte	-1
 1225 0259 FF        		.byte	-1
 1226 025a FF        		.byte	-1
 1227 025b FF        		.byte	-1
 1228 025c FF        		.byte	-1
 1229 025d FF        		.byte	-1
 1230 025e FF        		.byte	-1
 1231 025f FF        		.byte	-1
 1232 0260 49        		.byte	73
 1233 0261 00        		.byte	0
 1234 0262 00        		.byte	0
 1235 0263 00        		.byte	0
 1236 0264 00        		.byte	0
 1237 0265 00        		.byte	0
 1238 0266 00        		.byte	0
 1239 0267 00        		.byte	0
 1240 0268 00        		.byte	0
 1241 0269 00        		.byte	0
 1242 026a 00        		.byte	0
 1243 026b 00        		.byte	0
 1244 026c B6        		.byte	-74
 1245 026d FF        		.byte	-1
 1246 026e FF        		.byte	-1
 1247 026f 00        		.byte	0
 1248 0270 00        		.byte	0
 1249 0271 92        		.byte	-110
 1250 0272 FF        		.byte	-1
 1251 0273 FF        		.byte	-1
 1252 0274 FF        		.byte	-1
 1253 0275 FF        		.byte	-1
 1254 0276 FF        		.byte	-1
 1255 0277 FF        		.byte	-1
 1256 0278 FF        		.byte	-1
 1257 0279 FF        		.byte	-1
 1258 027a FF        		.byte	-1
 1259 027b FF        		.byte	-1
 1260 027c FF        		.byte	-1
 1261 027d B6        		.byte	-74
 1262 027e 00        		.byte	0
 1263 027f 00        		.byte	0
 1264 0280 00        		.byte	0
 1265 0281 00        		.byte	0
 1266 0282 00        		.byte	0
 1267 0283 00        		.byte	0
 1268 0284 00        		.byte	0
 1269 0285 00        		.byte	0
 1270 0286 00        		.byte	0
 1271 0287 00        		.byte	0
 1272 0288 00        		.byte	0
 1273 0289 6D        		.byte	109
 1274 028a FF        		.byte	-1
 1275 028b FF        		.byte	-1
 1276 028c FF        		.byte	-1
 1277 028d 24        		.byte	36
 1278 028e 00        		.byte	0
 1279 028f 49        		.byte	73
 1280 0290 FF        		.byte	-1
 1281 0291 FF        		.byte	-1
 1282 0292 FF        		.byte	-1
 1283 0293 FF        		.byte	-1
 1284 0294 FF        		.byte	-1
 1285 0295 FF        		.byte	-1
 1286 0296 FF        		.byte	-1
 1287 0297 FF        		.byte	-1
 1288 0298 FF        		.byte	-1
 1289 0299 FF        		.byte	-1
 1290 029a B6        		.byte	-74
 1291 029b 00        		.byte	0
 1292 029c 00        		.byte	0
 1293 029d 00        		.byte	0
 1294 029e 00        		.byte	0
 1295 029f 00        		.byte	0
 1296 02a0 00        		.byte	0
 1297 02a1 00        		.byte	0
 1298 02a2 00        		.byte	0
 1299 02a3 00        		.byte	0
 1300 02a4 00        		.byte	0
 1301 02a5 00        		.byte	0
 1302 02a6 00        		.byte	0
 1303 02a7 FF        		.byte	-1
 1304 02a8 FF        		.byte	-1
 1305 02a9 FF        		.byte	-1
 1306 02aa FF        		.byte	-1
 1307 02ab 6D        		.byte	109
 1308 02ac 00        		.byte	0
 1309 02ad 00        		.byte	0
 1310 02ae DB        		.byte	-37
 1311 02af FF        		.byte	-1
 1312 02b0 FF        		.byte	-1
 1313 02b1 FF        		.byte	-1
 1314 02b2 FF        		.byte	-1
 1315 02b3 FF        		.byte	-1
 1316 02b4 FF        		.byte	-1
 1317 02b5 FF        		.byte	-1
 1318 02b6 FF        		.byte	-1
 1319 02b7 6D        		.byte	109
 1320 02b8 00        		.byte	0
 1321 02b9 00        		.byte	0
 1322 02ba 00        		.byte	0
 1323 02bb 00        		.byte	0
 1324 02bc 00        		.byte	0
 1325 02bd 00        		.byte	0
 1326 02be 00        		.byte	0
 1327 02bf 00        		.byte	0
 1328 02c0 00        		.byte	0
 1329 02c1 00        		.byte	0
 1330 02c2 00        		.byte	0
 1331 02c3 00        		.byte	0
 1332 02c4 24        		.byte	36
 1333 02c5 92        		.byte	-110
 1334 02c6 DB        		.byte	-37
 1335 02c7 FF        		.byte	-1
 1336 02c8 FF        		.byte	-1
 1337 02c9 FF        		.byte	-1
 1338 02ca 24        		.byte	36
 1339 02cb 00        		.byte	0
 1340 02cc 00        		.byte	0
 1341 02cd DB        		.byte	-37
 1342 02ce FF        		.byte	-1
 1343 02cf FF        		.byte	-1
 1344 02d0 FF        		.byte	-1
 1345 02d1 FF        		.byte	-1
 1346 02d2 DB        		.byte	-37
 1347 02d3 6D        		.byte	109
 1348 02d4 00        		.byte	0
 1349 02d5 00        		.byte	0
 1350 02d6 00        		.byte	0
 1351 02d7 24        		.byte	36
 1352 02d8 6D        		.byte	109
 1353 02d9 49        		.byte	73
 1354 02da 00        		.byte	0
 1355 02db 00        		.byte	0
 1356 02dc 00        		.byte	0
 1357 02dd 00        		.byte	0
 1358 02de 00        		.byte	0
 1359 02df 00        		.byte	0
 1360 02e0 00        		.byte	0
 1361 02e1 00        		.byte	0
 1362 02e2 00        		.byte	0
 1363 02e3 00        		.byte	0
 1364 02e4 00        		.byte	0
 1365 02e5 FF        		.byte	-1
 1366 02e6 FF        		.byte	-1
 1367 02e7 FF        		.byte	-1
 1368 02e8 DB        		.byte	-37
 1369 02e9 24        		.byte	36
 1370 02ea 00        		.byte	0
 1371 02eb 49        		.byte	73
 1372 02ec FF        		.byte	-1
 1373 02ed FF        		.byte	-1
 1374 02ee DB        		.byte	-37
 1375 02ef 24        		.byte	36
 1376 02f0 00        		.byte	0
 1377 02f1 00        		.byte	0
 1378 02f2 00        		.byte	0
 1379 02f3 6D        		.byte	109
 1380 02f4 DB        		.byte	-37
 1381 02f5 FF        		.byte	-1
 1382 02f6 FF        		.byte	-1
 1383 02f7 FF        		.byte	-1
 1384 02f8 DB        		.byte	-37
 1385 02f9 DB        		.byte	-37
 1386 02fa DB        		.byte	-37
 1387 02fb DB        		.byte	-37
 1388 02fc DB        		.byte	-37
 1389 02fd DB        		.byte	-37
 1390 02fe DB        		.byte	-37
 1391 02ff DB        		.byte	-37
 1392 0300 DB        		.byte	-37
 1393 0301 DB        		.byte	-37
 1394 0302 DB        		.byte	-37
 1395 0303 FF        		.byte	-1
 1396 0304 FF        		.byte	-1
 1397 0305 FF        		.byte	-1
 1398 0306 FF        		.byte	-1
 1399 0307 FF        		.byte	-1
 1400 0308 92        		.byte	-110
 1401 0309 DB        		.byte	-37
 1402 030a FF        		.byte	-1
 1403 030b FF        		.byte	-1
 1404 030c 24        		.byte	36
 1405 030d 00        		.byte	0
 1406 030e 00        		.byte	0
 1407 030f 92        		.byte	-110
 1408 0310 FF        		.byte	-1
 1409 0311 FF        		.byte	-1
 1410 0312 FF        		.byte	-1
 1411 0313 FF        		.byte	-1
 1412 0314 FF        		.byte	-1
 1413 0315 FF        		.byte	-1
 1414 0316 FF        		.byte	-1
 1415 0317 FF        		.byte	-1
 1416 0318 FF        		.byte	-1
 1417 0319 FF        		.byte	-1
 1418 031a FF        		.byte	-1
 1419 031b FF        		.byte	-1
 1420 031c FF        		.byte	-1
 1421 031d FF        		.byte	-1
 1422 031e FF        		.byte	-1
 1423 031f FF        		.byte	-1
 1424 0320 FF        		.byte	-1
 1425 0321 FF        		.byte	-1
 1426 0322 FF        		.byte	-1
 1427 0323 FF        		.byte	-1
 1428 0324 FF        		.byte	-1
 1429 0325 FF        		.byte	-1
 1430 0326 FF        		.byte	-1
 1431 0327 FF        		.byte	-1
 1432 0328 FF        		.byte	-1
 1433 0329 FF        		.byte	-1
 1434 032a 00        		.byte	0
 1435 032b 00        		.byte	0
 1436 032c DB        		.byte	-37
 1437 032d FF        		.byte	-1
 1438 032e FF        		.byte	-1
 1439 032f FF        		.byte	-1
 1440 0330 FF        		.byte	-1
 1441 0331 FF        		.byte	-1
 1442 0332 FF        		.byte	-1
 1443 0333 FF        		.byte	-1
 1444 0334 FF        		.byte	-1
 1445 0335 FF        		.byte	-1
 1446 0336 FF        		.byte	-1
 1447 0337 FF        		.byte	-1
 1448 0338 FF        		.byte	-1
 1449 0339 FF        		.byte	-1
 1450 033a FF        		.byte	-1
 1451 033b FF        		.byte	-1
 1452 033c FF        		.byte	-1
 1453 033d FF        		.byte	-1
 1454 033e FF        		.byte	-1
 1455 033f FF        		.byte	-1
 1456 0340 FF        		.byte	-1
 1457 0341 FF        		.byte	-1
 1458 0342 FF        		.byte	-1
 1459 0343 FF        		.byte	-1
 1460 0344 FF        		.byte	-1
 1461 0345 FF        		.byte	-1
 1462 0346 FF        		.byte	-1
 1463 0347 FF        		.byte	-1
 1464 0348 49        		.byte	73
 1465 0349 00        		.byte	0
 1466 034a B6        		.byte	-74
 1467 034b FF        		.byte	-1
 1468 034c FF        		.byte	-1
 1469 034d FF        		.byte	-1
 1470 034e FF        		.byte	-1
 1471 034f FF        		.byte	-1
 1472 0350 FF        		.byte	-1
 1473 0351 FF        		.byte	-1
 1474 0352 FF        		.byte	-1
 1475 0353 FF        		.byte	-1
 1476 0354 FF        		.byte	-1
 1477 0355 FF        		.byte	-1
 1478 0356 FF        		.byte	-1
 1479 0357 FF        		.byte	-1
 1480 0358 FF        		.byte	-1
 1481 0359 FF        		.byte	-1
 1482 035a FF        		.byte	-1
 1483 035b FF        		.byte	-1
 1484 035c FF        		.byte	-1
 1485 035d FF        		.byte	-1
 1486 035e FF        		.byte	-1
 1487 035f FF        		.byte	-1
 1488 0360 FF        		.byte	-1
 1489 0361 FF        		.byte	-1
 1490 0362 FF        		.byte	-1
 1491 0363 FF        		.byte	-1
 1492 0364 FF        		.byte	-1
 1493 0365 FF        		.byte	-1
 1494 0366 FF        		.byte	-1
 1495 0367 6D        		.byte	109
 1496 0368 00        		.byte	0
 1497 0369 DB        		.byte	-37
 1498 036a FF        		.byte	-1
 1499 036b FF        		.byte	-1
 1500 036c FF        		.byte	-1
 1501 036d FF        		.byte	-1
 1502 036e FF        		.byte	-1
 1503 036f FF        		.byte	-1
 1504 0370 FF        		.byte	-1
 1505 0371 FF        		.byte	-1
 1506 0372 FF        		.byte	-1
 1507 0373 FF        		.byte	-1
 1508 0374 FF        		.byte	-1
 1509 0375 FF        		.byte	-1
 1510 0376 FF        		.byte	-1
 1511 0377 FF        		.byte	-1
 1512 0378 FF        		.byte	-1
 1513 0379 FF        		.byte	-1
 1514 037a FF        		.byte	-1
 1515 037b FF        		.byte	-1
 1516 037c FF        		.byte	-1
 1517 037d FF        		.byte	-1
 1518 037e FF        		.byte	-1
 1519 037f FF        		.byte	-1
 1520 0380 FF        		.byte	-1
 1521 0381 FF        		.byte	-1
 1522 0382 FF        		.byte	-1
 1523 0383 FF        		.byte	-1
 1524               	.global	spashImage
 1527               	spashImage:
 1528 0384 FF        		.byte	-1
 1529 0385 FF        		.byte	-1
 1530 0386 FF        		.byte	-1
 1531 0387 FF        		.byte	-1
 1532 0388 FF        		.byte	-1
 1533 0389 FF        		.byte	-1
 1534 038a FF        		.byte	-1
 1535 038b FF        		.byte	-1
 1536 038c FF        		.byte	-1
 1537 038d FF        		.byte	-1
 1538 038e B6        		.byte	-74
 1539 038f 6D        		.byte	109
 1540 0390 49        		.byte	73
 1541 0391 24        		.byte	36
 1542 0392 00        		.byte	0
 1543 0393 00        		.byte	0
 1544 0394 24        		.byte	36
 1545 0395 49        		.byte	73
 1546 0396 6D        		.byte	109
 1547 0397 B6        		.byte	-74
 1548 0398 FF        		.byte	-1
 1549 0399 FF        		.byte	-1
 1550 039a FF        		.byte	-1
 1551 039b FF        		.byte	-1
 1552 039c FF        		.byte	-1
 1553 039d FF        		.byte	-1
 1554 039e FF        		.byte	-1
 1555 039f FF        		.byte	-1
 1556 03a0 FF        		.byte	-1
 1557 03a1 FF        		.byte	-1
 1558 03a2 FF        		.byte	-1
 1559 03a3 FF        		.byte	-1
 1560 03a4 FF        		.byte	-1
 1561 03a5 FF        		.byte	-1
 1562 03a6 FF        		.byte	-1
 1563 03a7 FF        		.byte	-1
 1564 03a8 FF        		.byte	-1
 1565 03a9 FF        		.byte	-1
 1566 03aa 6D        		.byte	109
 1567 03ab 24        		.byte	36
 1568 03ac 00        		.byte	0
 1569 03ad 00        		.byte	0
 1570 03ae 00        		.byte	0
 1571 03af 00        		.byte	0
 1572 03b0 00        		.byte	0
 1573 03b1 00        		.byte	0
 1574 03b2 00        		.byte	0
 1575 03b3 00        		.byte	0
 1576 03b4 00        		.byte	0
 1577 03b5 00        		.byte	0
 1578 03b6 24        		.byte	36
 1579 03b7 92        		.byte	-110
 1580 03b8 FF        		.byte	-1
 1581 03b9 FF        		.byte	-1
 1582 03ba FF        		.byte	-1
 1583 03bb FF        		.byte	-1
 1584 03bc FF        		.byte	-1
 1585 03bd FF        		.byte	-1
 1586 03be FF        		.byte	-1
 1587 03bf FF        		.byte	-1
 1588 03c0 FF        		.byte	-1
 1589 03c1 FF        		.byte	-1
 1590 03c2 FF        		.byte	-1
 1591 03c3 FF        		.byte	-1
 1592 03c4 FF        		.byte	-1
 1593 03c5 FF        		.byte	-1
 1594 03c6 92        		.byte	-110
 1595 03c7 24        		.byte	36
 1596 03c8 00        		.byte	0
 1597 03c9 00        		.byte	0
 1598 03ca 00        		.byte	0
 1599 03cb 00        		.byte	0
 1600 03cc 00        		.byte	0
 1601 03cd 00        		.byte	0
 1602 03ce 00        		.byte	0
 1603 03cf 00        		.byte	0
 1604 03d0 00        		.byte	0
 1605 03d1 00        		.byte	0
 1606 03d2 00        		.byte	0
 1607 03d3 00        		.byte	0
 1608 03d4 00        		.byte	0
 1609 03d5 00        		.byte	0
 1610 03d6 24        		.byte	36
 1611 03d7 B6        		.byte	-74
 1612 03d8 FF        		.byte	-1
 1613 03d9 FF        		.byte	-1
 1614 03da FF        		.byte	-1
 1615 03db FF        		.byte	-1
 1616 03dc FF        		.byte	-1
 1617 03dd FF        		.byte	-1
 1618 03de FF        		.byte	-1
 1619 03df FF        		.byte	-1
 1620 03e0 FF        		.byte	-1
 1621 03e1 FF        		.byte	-1
 1622 03e2 FF        		.byte	-1
 1623 03e3 6D        		.byte	109
 1624 03e4 00        		.byte	0
 1625 03e5 00        		.byte	0
 1626 03e6 00        		.byte	0
 1627 03e7 00        		.byte	0
 1628 03e8 00        		.byte	0
 1629 03e9 00        		.byte	0
 1630 03ea 00        		.byte	0
 1631 03eb 00        		.byte	0
 1632 03ec 00        		.byte	0
 1633 03ed 00        		.byte	0
 1634 03ee 00        		.byte	0
 1635 03ef 00        		.byte	0
 1636 03f0 00        		.byte	0
 1637 03f1 00        		.byte	0
 1638 03f2 00        		.byte	0
 1639 03f3 00        		.byte	0
 1640 03f4 00        		.byte	0
 1641 03f5 00        		.byte	0
 1642 03f6 6E        		.byte	110
 1643 03f7 FF        		.byte	-1
 1644 03f8 FF        		.byte	-1
 1645 03f9 FF        		.byte	-1
 1646 03fa FF        		.byte	-1
 1647 03fb FF        		.byte	-1
 1648 03fc FF        		.byte	-1
 1649 03fd FF        		.byte	-1
 1650 03fe FF        		.byte	-1
 1651 03ff FF        		.byte	-1
 1652 0400 49        		.byte	73
 1653 0401 00        		.byte	0
 1654 0402 00        		.byte	0
 1655 0403 00        		.byte	0
 1656 0404 00        		.byte	0
 1657 0405 00        		.byte	0
 1658 0406 00        		.byte	0
 1659 0407 24        		.byte	36
 1660 0408 00        		.byte	0
 1661 0409 00        		.byte	0
 1662 040a 00        		.byte	0
 1663 040b 00        		.byte	0
 1664 040c 00        		.byte	0
 1665 040d 00        		.byte	0
 1666 040e 00        		.byte	0
 1667 040f 00        		.byte	0
 1668 0410 00        		.byte	0
 1669 0411 00        		.byte	0
 1670 0412 00        		.byte	0
 1671 0413 00        		.byte	0
 1672 0414 00        		.byte	0
 1673 0415 6D        		.byte	109
 1674 0416 FF        		.byte	-1
 1675 0417 FF        		.byte	-1
 1676 0418 FF        		.byte	-1
 1677 0419 FF        		.byte	-1
 1678 041a FF        		.byte	-1
 1679 041b FF        		.byte	-1
 1680 041c FF        		.byte	-1
 1681 041d 6D        		.byte	109
 1682 041e 00        		.byte	0
 1683 041f 00        		.byte	0
 1684 0420 00        		.byte	0
 1685 0421 00        		.byte	0
 1686 0422 00        		.byte	0
 1687 0423 00        		.byte	0
 1688 0424 49        		.byte	73
 1689 0425 FF        		.byte	-1
 1690 0426 49        		.byte	73
 1691 0427 00        		.byte	0
 1692 0428 00        		.byte	0
 1693 0429 00        		.byte	0
 1694 042a 00        		.byte	0
 1695 042b 00        		.byte	0
 1696 042c 00        		.byte	0
 1697 042d 00        		.byte	0
 1698 042e 00        		.byte	0
 1699 042f 00        		.byte	0
 1700 0430 00        		.byte	0
 1701 0431 00        		.byte	0
 1702 0432 00        		.byte	0
 1703 0433 00        		.byte	0
 1704 0434 6D        		.byte	109
 1705 0435 FF        		.byte	-1
 1706 0436 FF        		.byte	-1
 1707 0437 FF        		.byte	-1
 1708 0438 FF        		.byte	-1
 1709 0439 FF        		.byte	-1
 1710 043a 92        		.byte	-110
 1711 043b 00        		.byte	0
 1712 043c 00        		.byte	0
 1713 043d 00        		.byte	0
 1714 043e 00        		.byte	0
 1715 043f 00        		.byte	0
 1716 0440 00        		.byte	0
 1717 0441 49        		.byte	73
 1718 0442 FF        		.byte	-1
 1719 0443 FF        		.byte	-1
 1720 0444 6D        		.byte	109
 1721 0445 00        		.byte	0
 1722 0446 00        		.byte	0
 1723 0447 00        		.byte	0
 1724 0448 00        		.byte	0
 1725 0449 00        		.byte	0
 1726 044a 00        		.byte	0
 1727 044b 00        		.byte	0
 1728 044c 00        		.byte	0
 1729 044d 00        		.byte	0
 1730 044e 00        		.byte	0
 1731 044f 00        		.byte	0
 1732 0450 00        		.byte	0
 1733 0451 00        		.byte	0
 1734 0452 00        		.byte	0
 1735 0453 B6        		.byte	-74
 1736 0454 FF        		.byte	-1
 1737 0455 FF        		.byte	-1
 1738 0456 FF        		.byte	-1
 1739 0457 FF        		.byte	-1
 1740 0458 24        		.byte	36
 1741 0459 00        		.byte	0
 1742 045a 00        		.byte	0
 1743 045b 00        		.byte	0
 1744 045c 00        		.byte	0
 1745 045d 00        		.byte	0
 1746 045e 24        		.byte	36
 1747 045f FF        		.byte	-1
 1748 0460 FF        		.byte	-1
 1749 0461 FF        		.byte	-1
 1750 0462 49        		.byte	73
 1751 0463 00        		.byte	0
 1752 0464 00        		.byte	0
 1753 0465 00        		.byte	0
 1754 0466 00        		.byte	0
 1755 0467 00        		.byte	0
 1756 0468 00        		.byte	0
 1757 0469 00        		.byte	0
 1758 046a 00        		.byte	0
 1759 046b 00        		.byte	0
 1760 046c 00        		.byte	0
 1761 046d 00        		.byte	0
 1762 046e 00        		.byte	0
 1763 046f 00        		.byte	0
 1764 0470 00        		.byte	0
 1765 0471 24        		.byte	36
 1766 0472 FF        		.byte	-1
 1767 0473 FF        		.byte	-1
 1768 0474 FF        		.byte	-1
 1769 0475 6D        		.byte	109
 1770 0476 00        		.byte	0
 1771 0477 00        		.byte	0
 1772 0478 00        		.byte	0
 1773 0479 00        		.byte	0
 1774 047a 00        		.byte	0
 1775 047b 00        		.byte	0
 1776 047c B6        		.byte	-74
 1777 047d FF        		.byte	-1
 1778 047e FF        		.byte	-1
 1779 047f 92        		.byte	-110
 1780 0480 00        		.byte	0
 1781 0481 00        		.byte	0
 1782 0482 00        		.byte	0
 1783 0483 00        		.byte	0
 1784 0484 00        		.byte	0
 1785 0485 00        		.byte	0
 1786 0486 00        		.byte	0
 1787 0487 00        		.byte	0
 1788 0488 00        		.byte	0
 1789 0489 00        		.byte	0
 1790 048a 00        		.byte	0
 1791 048b 00        		.byte	0
 1792 048c 00        		.byte	0
 1793 048d 00        		.byte	0
 1794 048e 00        		.byte	0
 1795 048f 00        		.byte	0
 1796 0490 92        		.byte	-110
 1797 0491 FF        		.byte	-1
 1798 0492 FF        		.byte	-1
 1799 0493 24        		.byte	36
 1800 0494 00        		.byte	0
 1801 0495 00        		.byte	0
 1802 0496 00        		.byte	0
 1803 0497 00        		.byte	0
 1804 0498 24        		.byte	36
 1805 0499 92        		.byte	-110
 1806 049a FF        		.byte	-1
 1807 049b FF        		.byte	-1
 1808 049c 6D        		.byte	109
 1809 049d 00        		.byte	0
 1810 049e 00        		.byte	0
 1811 049f 00        		.byte	0
 1812 04a0 00        		.byte	0
 1813 04a1 00        		.byte	0
 1814 04a2 00        		.byte	0
 1815 04a3 00        		.byte	0
 1816 04a4 00        		.byte	0
 1817 04a5 00        		.byte	0
 1818 04a6 00        		.byte	0
 1819 04a7 00        		.byte	0
 1820 04a8 00        		.byte	0
 1821 04a9 00        		.byte	0
 1822 04aa 00        		.byte	0
 1823 04ab 00        		.byte	0
 1824 04ac 00        		.byte	0
 1825 04ad 00        		.byte	0
 1826 04ae 24        		.byte	36
 1827 04af FF        		.byte	-1
 1828 04b0 B6        		.byte	-74
 1829 04b1 00        		.byte	0
 1830 04b2 00        		.byte	0
 1831 04b3 00        		.byte	0
 1832 04b4 00        		.byte	0
 1833 04b5 6D        		.byte	109
 1834 04b6 FF        		.byte	-1
 1835 04b7 FF        		.byte	-1
 1836 04b8 FF        		.byte	-1
 1837 04b9 FF        		.byte	-1
 1838 04ba FF        		.byte	-1
 1839 04bb 24        		.byte	36
 1840 04bc 00        		.byte	0
 1841 04bd 00        		.byte	0
 1842 04be 00        		.byte	0
 1843 04bf 00        		.byte	0
 1844 04c0 00        		.byte	0
 1845 04c1 00        		.byte	0
 1846 04c2 00        		.byte	0
 1847 04c3 00        		.byte	0
 1848 04c4 00        		.byte	0
 1849 04c5 00        		.byte	0
 1850 04c6 00        		.byte	0
 1851 04c7 00        		.byte	0
 1852 04c8 00        		.byte	0
 1853 04c9 00        		.byte	0
 1854 04ca 00        		.byte	0
 1855 04cb 00        		.byte	0
 1856 04cc 00        		.byte	0
 1857 04cd B6        		.byte	-74
 1858 04ce 6D        		.byte	109
 1859 04cf 00        		.byte	0
 1860 04d0 00        		.byte	0
 1861 04d1 00        		.byte	0
 1862 04d2 6D        		.byte	109
 1863 04d3 FF        		.byte	-1
 1864 04d4 FF        		.byte	-1
 1865 04d5 FF        		.byte	-1
 1866 04d6 FF        		.byte	-1
 1867 04d7 FF        		.byte	-1
 1868 04d8 FF        		.byte	-1
 1869 04d9 FF        		.byte	-1
 1870 04da 6D        		.byte	109
 1871 04db 49        		.byte	73
 1872 04dc 49        		.byte	73
 1873 04dd 6D        		.byte	109
 1874 04de B6        		.byte	-74
 1875 04df DB        		.byte	-37
 1876 04e0 DB        		.byte	-37
 1877 04e1 B6        		.byte	-74
 1878 04e2 6D        		.byte	109
 1879 04e3 24        		.byte	36
 1880 04e4 00        		.byte	0
 1881 04e5 00        		.byte	0
 1882 04e6 00        		.byte	0
 1883 04e7 00        		.byte	0
 1884 04e8 00        		.byte	0
 1885 04e9 00        		.byte	0
 1886 04ea 00        		.byte	0
 1887 04eb 6D        		.byte	109
 1888 04ec 49        		.byte	73
 1889 04ed 00        		.byte	0
 1890 04ee 00        		.byte	0
 1891 04ef 00        		.byte	0
 1892 04f0 DB        		.byte	-37
 1893 04f1 FF        		.byte	-1
 1894 04f2 FF        		.byte	-1
 1895 04f3 FF        		.byte	-1
 1896 04f4 FF        		.byte	-1
 1897 04f5 FF        		.byte	-1
 1898 04f6 FF        		.byte	-1
 1899 04f7 FF        		.byte	-1
 1900 04f8 FF        		.byte	-1
 1901 04f9 FF        		.byte	-1
 1902 04fa FF        		.byte	-1
 1903 04fb FF        		.byte	-1
 1904 04fc FF        		.byte	-1
 1905 04fd FF        		.byte	-1
 1906 04fe FF        		.byte	-1
 1907 04ff FF        		.byte	-1
 1908 0500 FF        		.byte	-1
 1909 0501 DB        		.byte	-37
 1910 0502 24        		.byte	36
 1911 0503 00        		.byte	0
 1912 0504 00        		.byte	0
 1913 0505 00        		.byte	0
 1914 0506 00        		.byte	0
 1915 0507 00        		.byte	0
 1916 0508 00        		.byte	0
 1917 0509 49        		.byte	73
 1918 050a 24        		.byte	36
 1919 050b 00        		.byte	0
 1920 050c 00        		.byte	0
 1921 050d 00        		.byte	0
 1922 050e 6D        		.byte	109
 1923 050f FF        		.byte	-1
 1924 0510 FF        		.byte	-1
 1925 0511 FF        		.byte	-1
 1926 0512 FF        		.byte	-1
 1927 0513 FF        		.byte	-1
 1928 0514 FF        		.byte	-1
 1929 0515 FF        		.byte	-1
 1930 0516 FF        		.byte	-1
 1931 0517 FF        		.byte	-1
 1932 0518 FF        		.byte	-1
 1933 0519 FF        		.byte	-1
 1934 051a FF        		.byte	-1
 1935 051b FF        		.byte	-1
 1936 051c FF        		.byte	-1
 1937 051d FF        		.byte	-1
 1938 051e FF        		.byte	-1
 1939 051f FF        		.byte	-1
 1940 0520 DB        		.byte	-37
 1941 0521 00        		.byte	0
 1942 0522 00        		.byte	0
 1943 0523 00        		.byte	0
 1944 0524 00        		.byte	0
 1945 0525 00        		.byte	0
 1946 0526 00        		.byte	0
 1947 0527 24        		.byte	36
 1948 0528 00        		.byte	0
 1949 0529 00        		.byte	0
 1950 052a 00        		.byte	0
 1951 052b 00        		.byte	0
 1952 052c 00        		.byte	0
 1953 052d 49        		.byte	73
 1954 052e 92        		.byte	-110
 1955 052f DB        		.byte	-37
 1956 0530 FF        		.byte	-1
 1957 0531 FF        		.byte	-1
 1958 0532 FF        		.byte	-1
 1959 0533 FF        		.byte	-1
 1960 0534 FF        		.byte	-1
 1961 0535 FF        		.byte	-1
 1962 0536 FF        		.byte	-1
 1963 0537 FF        		.byte	-1
 1964 0538 FF        		.byte	-1
 1965 0539 FF        		.byte	-1
 1966 053a FF        		.byte	-1
 1967 053b FF        		.byte	-1
 1968 053c FF        		.byte	-1
 1969 053d FF        		.byte	-1
 1970 053e FF        		.byte	-1
 1971 053f 6D        		.byte	109
 1972 0540 00        		.byte	0
 1973 0541 00        		.byte	0
 1974 0542 00        		.byte	0
 1975 0543 00        		.byte	0
 1976 0544 00        		.byte	0
 1977 0545 00        		.byte	0
 1978 0546 00        		.byte	0
 1979 0547 00        		.byte	0
 1980 0548 00        		.byte	0
 1981 0549 00        		.byte	0
 1982 054a 00        		.byte	0
 1983 054b 00        		.byte	0
 1984 054c 00        		.byte	0
 1985 054d 00        		.byte	0
 1986 054e B6        		.byte	-74
 1987 054f FF        		.byte	-1
 1988 0550 FF        		.byte	-1
 1989 0551 FF        		.byte	-1
 1990 0552 FF        		.byte	-1
 1991 0553 FF        		.byte	-1
 1992 0554 FF        		.byte	-1
 1993 0555 FF        		.byte	-1
 1994 0556 FF        		.byte	-1
 1995 0557 FF        		.byte	-1
 1996 0558 FF        		.byte	-1
 1997 0559 FF        		.byte	-1
 1998 055a FF        		.byte	-1
 1999 055b FF        		.byte	-1
 2000 055c FF        		.byte	-1
 2001 055d B6        		.byte	-74
 2002 055e 00        		.byte	0
 2003 055f 00        		.byte	0
 2004 0560 00        		.byte	0
 2005 0561 00        		.byte	0
 2006 0562 00        		.byte	0
 2007 0563 20        		.byte	32
 2008 0564 24        		.byte	36
 2009 0565 00        		.byte	0
 2010 0566 00        		.byte	0
 2011 0567 00        		.byte	0
 2012 0568 00        		.byte	0
 2013 0569 00        		.byte	0
 2014 056a 00        		.byte	0
 2015 056b 00        		.byte	0
 2016 056c 92        		.byte	-110
 2017 056d FF        		.byte	-1
 2018 056e FF        		.byte	-1
 2019 056f FF        		.byte	-1
 2020 0570 FF        		.byte	-1
 2021 0571 FF        		.byte	-1
 2022 0572 FF        		.byte	-1
 2023 0573 FF        		.byte	-1
 2024 0574 FF        		.byte	-1
 2025 0575 FF        		.byte	-1
 2026 0576 FF        		.byte	-1
 2027 0577 FF        		.byte	-1
 2028 0578 FF        		.byte	-1
 2029 0579 FF        		.byte	-1
 2030 057a FF        		.byte	-1
 2031 057b FF        		.byte	-1
 2032 057c 49        		.byte	73
 2033 057d 24        		.byte	36
 2034 057e 00        		.byte	0
 2035 057f 00        		.byte	0
 2036 0580 00        		.byte	0
 2037 0581 24        		.byte	36
 2038 0582 49        		.byte	73
 2039 0583 00        		.byte	0
 2040 0584 00        		.byte	0
 2041 0585 00        		.byte	0
 2042 0586 00        		.byte	0
 2043 0587 00        		.byte	0
 2044 0588 00        		.byte	0
 2045 0589 00        		.byte	0
 2046 058a 24        		.byte	36
 2047 058b FF        		.byte	-1
 2048 058c FF        		.byte	-1
 2049 058d FF        		.byte	-1
 2050 058e FF        		.byte	-1
 2051 058f FF        		.byte	-1
 2052 0590 FF        		.byte	-1
 2053 0591 FF        		.byte	-1
 2054 0592 FF        		.byte	-1
 2055 0593 FF        		.byte	-1
 2056 0594 FF        		.byte	-1
 2057 0595 FF        		.byte	-1
 2058 0596 FF        		.byte	-1
 2059 0597 FF        		.byte	-1
 2060 0598 FF        		.byte	-1
 2061 0599 FF        		.byte	-1
 2062 059a FF        		.byte	-1
 2063 059b DB        		.byte	-37
 2064 059c 00        		.byte	0
 2065 059d 00        		.byte	0
 2066 059e 00        		.byte	0
 2067 059f 49        		.byte	73
 2068 05a0 6D        		.byte	109
 2069 05a1 00        		.byte	0
 2070 05a2 00        		.byte	0
 2071 05a3 00        		.byte	0
 2072 05a4 00        		.byte	0
 2073 05a5 00        		.byte	0
 2074 05a6 00        		.byte	0
 2075 05a7 00        		.byte	0
 2076 05a8 00        		.byte	0
 2077 05a9 49        		.byte	73
 2078 05aa FF        		.byte	-1
 2079 05ab FF        		.byte	-1
 2080 05ac FF        		.byte	-1
 2081 05ad DB        		.byte	-37
 2082 05ae DB        		.byte	-37
 2083 05af FF        		.byte	-1
 2084 05b0 FF        		.byte	-1
 2085 05b1 FF        		.byte	-1
 2086 05b2 FF        		.byte	-1
 2087 05b3 FF        		.byte	-1
 2088 05b4 FF        		.byte	-1
 2089 05b5 FF        		.byte	-1
 2090 05b6 FF        		.byte	-1
 2091 05b7 FF        		.byte	-1
 2092 05b8 FF        		.byte	-1
 2093 05b9 FF        		.byte	-1
 2094 05ba 00        		.byte	0
 2095 05bb 00        		.byte	0
 2096 05bc 00        		.byte	0
 2097 05bd 6D        		.byte	109
 2098 05be B6        		.byte	-74
 2099 05bf 00        		.byte	0
 2100 05c0 00        		.byte	0
 2101 05c1 00        		.byte	0
 2102 05c2 00        		.byte	0
 2103 05c3 00        		.byte	0
 2104 05c4 00        		.byte	0
 2105 05c5 00        		.byte	0
 2106 05c6 00        		.byte	0
 2107 05c7 24        		.byte	36
 2108 05c8 FF        		.byte	-1
 2109 05c9 FF        		.byte	-1
 2110 05ca B6        		.byte	-74
 2111 05cb 24        		.byte	36
 2112 05cc 24        		.byte	36
 2113 05cd 6D        		.byte	109
 2114 05ce B6        		.byte	-74
 2115 05cf FF        		.byte	-1
 2116 05d0 FF        		.byte	-1
 2117 05d1 FF        		.byte	-1
 2118 05d2 FF        		.byte	-1
 2119 05d3 FF        		.byte	-1
 2120 05d4 FF        		.byte	-1
 2121 05d5 FF        		.byte	-1
 2122 05d6 FF        		.byte	-1
 2123 05d7 92        		.byte	-110
 2124 05d8 00        		.byte	0
 2125 05d9 00        		.byte	0
 2126 05da 00        		.byte	0
 2127 05db B6        		.byte	-74
 2128 05dc FF        		.byte	-1
 2129 05dd 24        		.byte	36
 2130 05de 00        		.byte	0
 2131 05df 00        		.byte	0
 2132 05e0 00        		.byte	0
 2133 05e1 00        		.byte	0
 2134 05e2 00        		.byte	0
 2135 05e3 24        		.byte	36
 2136 05e4 6D        		.byte	109
 2137 05e5 FF        		.byte	-1
 2138 05e6 DB        		.byte	-37
 2139 05e7 49        		.byte	73
 2140 05e8 24        		.byte	36
 2141 05e9 49        		.byte	73
 2142 05ea 49        		.byte	73
 2143 05eb 49        		.byte	73
 2144 05ec 49        		.byte	73
 2145 05ed DB        		.byte	-37
 2146 05ee FF        		.byte	-1
 2147 05ef FF        		.byte	-1
 2148 05f0 FF        		.byte	-1
 2149 05f1 FF        		.byte	-1
 2150 05f2 FF        		.byte	-1
 2151 05f3 24        		.byte	36
 2152 05f4 24        		.byte	36
 2153 05f5 00        		.byte	0
 2154 05f6 00        		.byte	0
 2155 05f7 00        		.byte	0
 2156 05f8 24        		.byte	36
 2157 05f9 FF        		.byte	-1
 2158 05fa FF        		.byte	-1
 2159 05fb 92        		.byte	-110
 2160 05fc 00        		.byte	0
 2161 05fd 00        		.byte	0
 2162 05fe 00        		.byte	0
 2163 05ff 00        		.byte	0
 2164 0600 00        		.byte	0
 2165 0601 24        		.byte	36
 2166 0602 6D        		.byte	109
 2167 0603 49        		.byte	73
 2168 0604 00        		.byte	0
 2169 0605 00        		.byte	0
 2170 0606 49        		.byte	73
 2171 0607 92        		.byte	-110
 2172 0608 92        		.byte	-110
 2173 0609 B6        		.byte	-74
 2174 060a B6        		.byte	-74
 2175 060b B6        		.byte	-74
 2176 060c B6        		.byte	-74
 2177 060d DB        		.byte	-37
 2178 060e DB        		.byte	-37
 2179 060f DB        		.byte	-37
 2180 0610 92        		.byte	-110
 2181 0611 00        		.byte	0
 2182 0612 00        		.byte	0
 2183 0613 00        		.byte	0
 2184 0614 00        		.byte	0
 2185 0615 00        		.byte	0
 2186 0616 92        		.byte	-110
 2187 0617 FF        		.byte	-1
 2188 0618 FF        		.byte	-1
 2189 0619 FF        		.byte	-1
 2190 061a 24        		.byte	36
 2191 061b 00        		.byte	0
 2192 061c 00        		.byte	0
 2193 061d 00        		.byte	0
 2194 061e 00        		.byte	0
 2195 061f 00        		.byte	0
 2196 0620 00        		.byte	0
 2197 0621 00        		.byte	0
 2198 0622 00        		.byte	0
 2199 0623 00        		.byte	0
 2200 0624 00        		.byte	0
 2201 0625 00        		.byte	0
 2202 0626 00        		.byte	0
 2203 0627 00        		.byte	0
 2204 0628 00        		.byte	0
 2205 0629 00        		.byte	0
 2206 062a 00        		.byte	0
 2207 062b 00        		.byte	0
 2208 062c 00        		.byte	0
 2209 062d 00        		.byte	0
 2210 062e 00        		.byte	0
 2211 062f 00        		.byte	0
 2212 0630 00        		.byte	0
 2213 0631 00        		.byte	0
 2214 0632 00        		.byte	0
 2215 0633 24        		.byte	36
 2216 0634 FF        		.byte	-1
 2217 0635 FF        		.byte	-1
 2218 0636 FF        		.byte	-1
 2219 0637 FF        		.byte	-1
 2220 0638 B6        		.byte	-74
 2221 0639 00        		.byte	0
 2222 063a 00        		.byte	0
 2223 063b 00        		.byte	0
 2224 063c 00        		.byte	0
 2225 063d 00        		.byte	0
 2226 063e 00        		.byte	0
 2227 063f 00        		.byte	0
 2228 0640 00        		.byte	0
 2229 0641 00        		.byte	0
 2230 0642 00        		.byte	0
 2231 0643 00        		.byte	0
 2232 0644 00        		.byte	0
 2233 0645 00        		.byte	0
 2234 0646 00        		.byte	0
 2235 0647 00        		.byte	0
 2236 0648 00        		.byte	0
 2237 0649 00        		.byte	0
 2238 064a 00        		.byte	0
 2239 064b 00        		.byte	0
 2240 064c 00        		.byte	0
 2241 064d 00        		.byte	0
 2242 064e 00        		.byte	0
 2243 064f 00        		.byte	0
 2244 0650 00        		.byte	0
 2245 0651 B6        		.byte	-74
 2246 0652 FF        		.byte	-1
 2247 0653 FF        		.byte	-1
 2248 0654 FF        		.byte	-1
 2249 0655 FF        		.byte	-1
 2250 0656 FF        		.byte	-1
 2251 0657 92        		.byte	-110
 2252 0658 00        		.byte	0
 2253 0659 00        		.byte	0
 2254 065a 00        		.byte	0
 2255 065b 00        		.byte	0
 2256 065c 00        		.byte	0
 2257 065d 00        		.byte	0
 2258 065e 00        		.byte	0
 2259 065f 00        		.byte	0
 2260 0660 00        		.byte	0
 2261 0661 00        		.byte	0
 2262 0662 00        		.byte	0
 2263 0663 00        		.byte	0
 2264 0664 00        		.byte	0
 2265 0665 00        		.byte	0
 2266 0666 00        		.byte	0
 2267 0667 00        		.byte	0
 2268 0668 00        		.byte	0
 2269 0669 00        		.byte	0
 2270 066a 00        		.byte	0
 2271 066b 00        		.byte	0
 2272 066c 00        		.byte	0
 2273 066d 00        		.byte	0
 2274 066e 6D        		.byte	109
 2275 066f FF        		.byte	-1
 2276 0670 FF        		.byte	-1
 2277 0671 FF        		.byte	-1
 2278 0672 FF        		.byte	-1
 2279 0673 FF        		.byte	-1
 2280 0674 FF        		.byte	-1
 2281 0675 FF        		.byte	-1
 2282 0676 6D        		.byte	109
 2283 0677 00        		.byte	0
 2284 0678 00        		.byte	0
 2285 0679 00        		.byte	0
 2286 067a 00        		.byte	0
 2287 067b 00        		.byte	0
 2288 067c 00        		.byte	0
 2289 067d 00        		.byte	0
 2290 067e 00        		.byte	0
 2291 067f 00        		.byte	0
 2292 0680 00        		.byte	0
 2293 0681 00        		.byte	0
 2294 0682 00        		.byte	0
 2295 0683 00        		.byte	0
 2296 0684 00        		.byte	0
 2297 0685 00        		.byte	0
 2298 0686 00        		.byte	0
 2299 0687 00        		.byte	0
 2300 0688 00        		.byte	0
 2301 0689 00        		.byte	0
 2302 068a 00        		.byte	0
 2303 068b 6D        		.byte	109
 2304 068c FF        		.byte	-1
 2305 068d FF        		.byte	-1
 2306 068e FF        		.byte	-1
 2307 068f FF        		.byte	-1
 2308 0690 FF        		.byte	-1
 2309 0691 FF        		.byte	-1
 2310 0692 FF        		.byte	-1
 2311 0693 FF        		.byte	-1
 2312 0694 FF        		.byte	-1
 2313 0695 92        		.byte	-110
 2314 0696 00        		.byte	0
 2315 0697 00        		.byte	0
 2316 0698 00        		.byte	0
 2317 0699 00        		.byte	0
 2318 069a 00        		.byte	0
 2319 069b 00        		.byte	0
 2320 069c 00        		.byte	0
 2321 069d 00        		.byte	0
 2322 069e 00        		.byte	0
 2323 069f 00        		.byte	0
 2324 06a0 00        		.byte	0
 2325 06a1 00        		.byte	0
 2326 06a2 00        		.byte	0
 2327 06a3 00        		.byte	0
 2328 06a4 00        		.byte	0
 2329 06a5 00        		.byte	0
 2330 06a6 00        		.byte	0
 2331 06a7 00        		.byte	0
 2332 06a8 6D        		.byte	109
 2333 06a9 FF        		.byte	-1
 2334 06aa FF        		.byte	-1
 2335 06ab FF        		.byte	-1
 2336 06ac FF        		.byte	-1
 2337 06ad FF        		.byte	-1
 2338 06ae FF        		.byte	-1
 2339 06af FF        		.byte	-1
 2340 06b0 FF        		.byte	-1
 2341 06b1 FF        		.byte	-1
 2342 06b2 FF        		.byte	-1
 2343 06b3 FF        		.byte	-1
 2344 06b4 B6        		.byte	-74
 2345 06b5 24        		.byte	36
 2346 06b6 00        		.byte	0
 2347 06b7 00        		.byte	0
 2348 06b8 00        		.byte	0
 2349 06b9 00        		.byte	0
 2350 06ba 00        		.byte	0
 2351 06bb 00        		.byte	0
 2352 06bc 00        		.byte	0
 2353 06bd 00        		.byte	0
 2354 06be 00        		.byte	0
 2355 06bf 00        		.byte	0
 2356 06c0 00        		.byte	0
 2357 06c1 00        		.byte	0
 2358 06c2 00        		.byte	0
 2359 06c3 00        		.byte	0
 2360 06c4 24        		.byte	36
 2361 06c5 B6        		.byte	-74
 2362 06c6 FF        		.byte	-1
 2363 06c7 FF        		.byte	-1
 2364 06c8 FF        		.byte	-1
 2365 06c9 FF        		.byte	-1
 2366 06ca FF        		.byte	-1
 2367 06cb FF        		.byte	-1
 2368 06cc FF        		.byte	-1
 2369 06cd FF        		.byte	-1
 2370 06ce FF        		.byte	-1
 2371 06cf FF        		.byte	-1
 2372 06d0 FF        		.byte	-1
 2373 06d1 FF        		.byte	-1
 2374 06d2 FF        		.byte	-1
 2375 06d3 FF        		.byte	-1
 2376 06d4 92        		.byte	-110
 2377 06d5 24        		.byte	36
 2378 06d6 00        		.byte	0
 2379 06d7 00        		.byte	0
 2380 06d8 00        		.byte	0
 2381 06d9 00        		.byte	0
 2382 06da 00        		.byte	0
 2383 06db 00        		.byte	0
 2384 06dc 00        		.byte	0
 2385 06dd 00        		.byte	0
 2386 06de 00        		.byte	0
 2387 06df 00        		.byte	0
 2388 06e0 24        		.byte	36
 2389 06e1 92        		.byte	-110
 2390 06e2 FF        		.byte	-1
 2391 06e3 FF        		.byte	-1
 2392 06e4 FF        		.byte	-1
 2393 06e5 FF        		.byte	-1
 2394 06e6 FF        		.byte	-1
 2395 06e7 FF        		.byte	-1
 2396 06e8 FF        		.byte	-1
 2397 06e9 FF        		.byte	-1
 2398 06ea FF        		.byte	-1
 2399 06eb FF        		.byte	-1
 2400 06ec FF        		.byte	-1
 2401 06ed FF        		.byte	-1
 2402 06ee FF        		.byte	-1
 2403 06ef FF        		.byte	-1
 2404 06f0 FF        		.byte	-1
 2405 06f1 FF        		.byte	-1
 2406 06f2 FF        		.byte	-1
 2407 06f3 FF        		.byte	-1
 2408 06f4 B6        		.byte	-74
 2409 06f5 6D        		.byte	109
 2410 06f6 49        		.byte	73
 2411 06f7 24        		.byte	36
 2412 06f8 00        		.byte	0
 2413 06f9 20        		.byte	32
 2414 06fa 24        		.byte	36
 2415 06fb 49        		.byte	73
 2416 06fc 92        		.byte	-110
 2417 06fd DB        		.byte	-37
 2418 06fe FF        		.byte	-1
 2419 06ff FF        		.byte	-1
 2420 0700 FF        		.byte	-1
 2421 0701 FF        		.byte	-1
 2422 0702 FF        		.byte	-1
 2423 0703 FF        		.byte	-1
 2424 0704 FF        		.byte	-1
 2425 0705 FF        		.byte	-1
 2426 0706 FF        		.byte	-1
 2427 0707 FF        		.byte	-1
 2432               		.text
 2434               	.Letext0:
 2435               		.ident	"GCC: (GNU) 4.8.1"
 2436               	.global __do_copy_data
 2437               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccZ0duuO.s:2      *ABS*:0000003e __SP_H__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccZ0duuO.s:3      *ABS*:0000003d __SP_L__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccZ0duuO.s:4      *ABS*:0000003f __SREG__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccZ0duuO.s:5      *ABS*:0000003b __RAMPZ__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccZ0duuO.s:6      *ABS*:00000000 __tmp_reg__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccZ0duuO.s:7      *ABS*:00000001 __zero_reg__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccZ0duuO.s:125    .text:00000000 adc_init
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccZ0duuO.s:153    .text:0000000e writeNext
                            *COM*:0000070f _display
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccZ0duuO.s:609    .bss:00000010 index.2124
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccZ0duuO.s:255    .text.startup:00000000 main
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccZ0duuO.s:623    .data:00000000 catImage
                             .bss:0000000f debounceCount.2137
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccZ0duuO.s:616    .bss:00000000 mat_sensors
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//ccZ0duuO.s:1527   .data:00000384 spashImage

UNDEFINED SYMBOLS
display_clear
display_write
display_fillZone
__divsf3
__subsf3
__gesf2
__floatunsisf
__addsf3
display_init
display_writeImage
sprintf
__do_copy_data
__do_clear_bss
