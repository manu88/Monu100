   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
 124               	.global	translateBuffer
 126               	translateBuffer:
   1:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
   2:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <stdlib.h> 
   3:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <stdio.h>
   4:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
   5:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <avr/io.h>
   6:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
   7:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <avr/pgmspace.h>
   8:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <avr/interrupt.h>
   9:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  10:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <util/delay.h>
  11:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  12:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include <math.h>
  13:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  14:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include "PinsConfig.h"
  15:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  16:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  17:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include "Display.h"
  18:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  19:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  20:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  21:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #include "Images.h"
  22:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  23:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** */
  24:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /*
  25:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     Global constants defines
  26:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****  */
  27:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  28:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  29:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  30:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #define SENSOR_COUNT     15
  31:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** #define MIC_SENCOR_COUNT 15
  32:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  33:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** Display _display;
  34:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  35:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** */
  36:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  37:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  38:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  39:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  40:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** */
  41:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  42:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** uint8_t mat_sensors[ SENSOR_COUNT ] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 };
  43:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  44:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** */
  45:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** // move to Display.h
  46:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** void translateBuffer( const uint8_t dX)
  47:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** {
 128               	.LM0:
 129               	.LFBB1:
 130               	/* prologue: function */
 131               	/* frame size = 0 */
 132               	/* stack size = 0 */
 133               	.L__stack_usage = 0
 134 0000 20E0      		ldi r18,lo8(_display+900)
 135 0002 30E0      		ldi r19,hi8(_display+900)
 136 0004 4EE1      		ldi r20,lo8(30)
 137 0006 849F      		mul r24,r20
 138 0008 C001      		movw r24,r0
 139 000a 1124      		clr __zero_reg__
 140               	.L5:
 141 000c B901      		movw r22,r18
 142 000e 680F      		add r22,r24
 143 0010 791F      		adc r23,r25
 144               	.LBB42:
 145               	.LBB43:
 146               	.LBB44:
  48:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  49:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     for (int i = X_TLC_MAX ;i>=0;i--)
  50:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     {
  51:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
  52:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         const int pos = i+dX;//(i+dX) %X_TLC_MAX;
  53:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  54:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         for (int j=0;j<Y_MIC_MAX;j++)
 148               	.LM1:
 149 0012 40E0      		ldi r20,0
 150 0014 50E0      		ldi r21,0
 151               	.L3:
 152 0016 F901      		movw r30,r18
 153 0018 E40F      		add r30,r20
 154 001a F51F      		adc r31,r21
  55:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         {
  56:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             _display.buff_A[pos][j] = _display.buff_A[i][j];
 156               	.LM2:
 157 001c A081      		ld r26,Z
 158 001e FB01      		movw r30,r22
 159 0020 E40F      		add r30,r20
 160 0022 F51F      		adc r31,r21
 161 0024 A083      		st Z,r26
  54:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         for (int j=0;j<Y_MIC_MAX;j++)
 163               	.LM3:
 164 0026 4F5F      		subi r20,-1
 165 0028 5F4F      		sbci r21,-1
 166 002a 4E31      		cpi r20,30
 167 002c 5105      		cpc r21,__zero_reg__
 168 002e 01F4      		brne .L3
 169 0030 2E51      		subi r18,30
 170 0032 3109      		sbc r19,__zero_reg__
 171               	.LBE44:
 172               	.LBE43:
  49:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     for (int i = X_TLC_MAX ;i>=0;i--)
 174               	.LM4:
 175 0034 40E0      		ldi r20,hi8(_display-30)
 176 0036 2030      		cpi r18,lo8(_display-30)
 177 0038 3407      		cpc r19,r20
 178 003a 01F4      		brne .L5
 179               	/* epilogue start */
 180               	.LBE42:
  57:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         }
  58:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  59:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
  60:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     }
  61:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** }
 182               	.LM5:
 183 003c 0895      		ret
 188               	.Lscope1:
 190               	.global	TLC5940_Init
 192               	TLC5940_Init:
  62:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  63:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** *
  64:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  65:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** void TLC5940_Init(void)
  66:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** {
 194               	.LM6:
 195               	.LFBB2:
 196               	/* prologue: function */
 197               	/* frame size = 0 */
 198               	/* stack size = 0 */
 199               	.L__stack_usage = 0
  67:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  68:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setOutput(SCLK_DDR, SCLK_PIN);
 201               	.LM7:
 202 003e 219A      		sbi 0x4,1
  69:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  70:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setOutput(XLAT_DDR, XLAT_PIN);
 204               	.LM8:
 205 0040 259A      		sbi 0x4,5
  71:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setOutput(BLANK_DDR, BLANK_PIN);
 207               	.LM9:
 208 0042 209A      		sbi 0x4,0
  72:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setOutput(SIN_DDR, SIN_PIN);
 210               	.LM10:
 211 0044 229A      		sbi 0x4,2
  73:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  74:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setLow(SCLK_PORT, SCLK_PIN);
 213               	.LM11:
 214 0046 2998      		cbi 0x5,1
  75:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  76:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setLow(XLAT_PORT, XLAT_PIN);
 216               	.LM12:
 217 0048 2D98      		cbi 0x5,5
  77:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
  78:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setHigh(BLANK_PORT, BLANK_PIN);
 219               	.LM13:
 220 004a 289A      		sbi 0x5,0
  79:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
  80:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // Enable SPI, Master, set clock rate fck/2
  81:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     SPCR = (1 << SPE) | (1 << MSTR);
 222               	.LM14:
 223 004c 80E5      		ldi r24,lo8(80)
 224 004e 8CBD      		out 0x2c,r24
  82:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     SPSR = (1 << SPI2X);
 226               	.LM15:
 227 0050 81E0      		ldi r24,lo8(1)
 228 0052 8DBD      		out 0x2d,r24
  83:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
  84:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // CTC with OCR0A as TOP
  85:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     TCCR0A = (1 << WGM01);
 230               	.LM16:
 231 0054 82E0      		ldi r24,lo8(2)
 232 0056 84BD      		out 0x24,r24
  86:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // clk_io/1024 (From prescaler)
  87:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     TCCR0B = ((1 << CS02) | (1 << CS00));
 234               	.LM17:
 235 0058 85E0      		ldi r24,lo8(5)
 236 005a 85BD      		out 0x25,r24
  88:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // Generate an interrupt every 4096 clock cycles
  89:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     OCR0A = 3; // 3
 238               	.LM18:
 239 005c 83E0      		ldi r24,lo8(3)
 240 005e 87BD      		out 0x27,r24
  90:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // Enable Timer/Counter0 Compare Match A interrupt
  91:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     TIMSK0 |= (1 << OCIE0A);
 242               	.LM19:
 243 0060 EEE6      		ldi r30,lo8(110)
 244 0062 F0E0      		ldi r31,0
 245 0064 8081      		ld r24,Z
 246 0066 8260      		ori r24,lo8(2)
 247 0068 8083      		st Z,r24
 248 006a 0895      		ret
 250               	.Lscope2:
 252               	.global	adc_init
 254               	adc_init:
  92:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** }
  93:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
  94:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** *
  95:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /*
  96:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****  
  97:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****  ADC part
  98:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****  
  99:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****  */
 100:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** *
 101:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** // initialize adc
 102:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** void adc_init(void)
 103:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** {
 256               	.LM20:
 257               	.LFBB3:
 258               	/* prologue: function */
 259               	/* frame size = 0 */
 260               	/* stack size = 0 */
 261               	.L__stack_usage = 0
 104:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // AREF = AVcc
 105:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ADMUX = (1<<REFS0);
 263               	.LM21:
 264 006c 80E4      		ldi r24,lo8(64)
 265 006e 8093 7C00 		sts 124,r24
 106:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 107:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // ADC Enable and prescaler of 128
 108:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // 16000000/128 = 125000
 109:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
 267               	.LM22:
 268 0072 87E8      		ldi r24,lo8(-121)
 269 0074 8093 7A00 		sts 122,r24
 270 0078 0895      		ret
 272               	.Lscope3:
 274               	.global	__vector_21
 276               	__vector_21:
 110:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 111:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** }
 112:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 113:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** *
 114:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 115:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****  inline uint16_t adc_read(uint8_t ch)
 116:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** {
 117:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // select the corresponding channel 0~7
 118:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // ANDing with ’7′ will always keep the value
 119:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // of ‘ch’ between 0 and 7
 120:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ch &= 0b00000111;  // AND operation with 7
 121:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ADMUX = (ADMUX & 0xF8)|ch; // clears the bottom 3 bits before ORing
 122:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 123:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // start single convertion
 124:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // write ’1′ to ADSC
 125:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ADCSRA |= (1<<ADSC);
 126:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 127:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // wait for conversion to complete
 128:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // ADSC becomes ’0′ again
 129:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // till then, run loop continuously
 130:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     while(ADCSRA & (1<<ADSC));
 131:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 132:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     return (ADC);
 133:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** }
 134:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 135:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** *
 136:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 137:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** inline void sendSPI( const uint8_t val)
 138:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** {
 139:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     SPDR = val;
 140:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     while (!(SPSR & (1 << SPIF)));
 141:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** }
 142:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 143:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** *
 144:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** // display's interupt
 145:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 146:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** ISR(TIMER0_COMPA_vect)
 147:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** {
 278               	.LM23:
 279               	.LFBB4:
 280 007a 1F92      		push r1
 281 007c 0F92      		push r0
 282 007e 0FB6      		in r0,__SREG__
 283 0080 0F92      		push r0
 284 0082 1124      		clr __zero_reg__
 285 0084 0BB6      		in r0,__RAMPZ__
 286 0086 0F92      		push r0
 287 0088 2F93      		push r18
 288 008a 3F93      		push r19
 289 008c 4F93      		push r20
 290 008e 5F93      		push r21
 291 0090 6F93      		push r22
 292 0092 7F93      		push r23
 293 0094 8F93      		push r24
 294 0096 9F93      		push r25
 295 0098 EF93      		push r30
 296 009a FF93      		push r31
 297               	/* prologue: Signal */
 298               	/* frame size = 0 */
 299               	/* stack size = 14 */
 300               	.L__stack_usage = 14
 148:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     static uint16_t rowIndex = Y_MIC_MAX;
 149:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     uint8_t firstCycleFlag = 1;// 0;
 150:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     static uint8_t xlatNeedsPulse = 0;
 151:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 152:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 153:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 154:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     if ( rowIndex == Y_MIC_MAX ) // matrix ok. return col0;
 302               	.LM24:
 303 009c 8091 0000 		lds r24,rowIndex.2141
 304 00a0 9091 0000 		lds r25,rowIndex.2141+1
 305 00a4 4E97      		sbiw r24,30
 306 00a6 01F4      		brne .L10
 155:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     {
 156:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         setHigh( DATA0_PORT , DATA0_PIN);
 308               	.LM25:
 309 00a8 8091 0B01 		lds r24,267
 310 00ac 8860      		ori r24,lo8(8)
 311 00ae 8093 0B01 		sts 267,r24
 157:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         setHigh( DATA1_PORT , DATA1_PIN);
 313               	.LM26:
 314 00b2 8091 0B01 		lds r24,267
 315 00b6 8061      		ori r24,lo8(16)
 316 00b8 8093 0B01 		sts 267,r24
 158:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         rowIndex = 0;
 318               	.LM27:
 319 00bc 1092 0000 		sts rowIndex.2141+1,__zero_reg__
 320 00c0 1092 0000 		sts rowIndex.2141,__zero_reg__
 321 00c4 00C0      		rjmp .L11
 322               	.L10:
 159:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 160:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     }
 161:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     else
 162:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     {
 163:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         setLow( DATA0_PORT , DATA0_PIN);
 324               	.LM28:
 325 00c6 8091 0B01 		lds r24,267
 326 00ca 877F      		andi r24,lo8(-9)
 327 00cc 8093 0B01 		sts 267,r24
 164:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         setLow( DATA1_PORT , DATA1_PIN);
 329               	.LM29:
 330 00d0 8091 0B01 		lds r24,267
 331 00d4 8F7E      		andi r24,lo8(-17)
 332 00d6 8093 0B01 		sts 267,r24
 333               	.L11:
 165:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     }
 166:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 167:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 168:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setLow(BLANK_PORT, BLANK_PIN);
 335               	.LM30:
 336 00da 2898      		cbi 0x5,0
 337               	.LBB45:
 338               	.LBB46:
 139:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     SPDR = val;
 340               	.LM31:
 341 00dc 1EBC      		out 0x2e,__zero_reg__
 342               	.L13:
 140:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     while (!(SPSR & (1 << SPIF)));
 344               	.LM32:
 345 00de 0DB4      		in __tmp_reg__,0x2d
 346 00e0 07FE      		sbrs __tmp_reg__,7
 347 00e2 00C0      		rjmp .L13
 348 00e4 80E0      		ldi r24,0
 349 00e6 90E0      		ldi r25,0
 350               	.LBE46:
 351               	.LBE45:
 352               	.LBB47:
 353               	.LBB48:
 169:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 170:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 171:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /**** FILL TLC BUFFERS *****/
 172:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 173:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // col 0 -> send dumm values ( not displayed)
 174:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     sendSPI(0b00000000); // p0
 175:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 176:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     for (int x=0;x<14;x+=2)
 177:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     {
 178:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         const uint8_t pixA = _display.buff_A/* pixels*/[x][rowIndex];
 355               	.LM33:
 356 00e8 6EE1      		ldi r22,lo8(30)
 357               	.L21:
 359               	.LM34:
 360 00ea 2091 0000 		lds r18,rowIndex.2141
 361 00ee 3091 0000 		lds r19,rowIndex.2141+1
 362 00f2 689F      		mul r22,r24
 363 00f4 F001      		movw r30,r0
 364 00f6 699F      		mul r22,r25
 365 00f8 F00D      		add r31,r0
 366 00fa 1124      		clr __zero_reg__
 367 00fc E20F      		add r30,r18
 368 00fe F31F      		adc r31,r19
 369 0100 E050      		subi r30,lo8(-(_display))
 370 0102 F040      		sbci r31,hi8(-(_display))
 371 0104 7081      		ld r23,Z
 179:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         const uint8_t pixB =  _display.buff_A/*pixels*/[x+1][rowIndex];
 373               	.LM35:
 374 0106 AC01      		movw r20,r24
 375 0108 4F5F      		subi r20,-1
 376 010a 5F4F      		sbci r21,-1
 377 010c 649F      		mul r22,r20
 378 010e F001      		movw r30,r0
 379 0110 659F      		mul r22,r21
 380 0112 F00D      		add r31,r0
 381 0114 1124      		clr __zero_reg__
 382 0116 E20F      		add r30,r18
 383 0118 F31F      		adc r31,r19
 384 011a E050      		subi r30,lo8(-(_display))
 385 011c F040      		sbci r31,hi8(-(_display))
 386 011e 2081      		ld r18,Z
 180:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 181:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         sendSPI( pixA >> 4); // p1
 388               	.LM36:
 389 0120 372F      		mov r19,r23
 390 0122 3295      		swap r19
 391 0124 3F70      		andi r19,lo8(15)
 392               	.LBB49:
 393               	.LBB50:
 139:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     SPDR = val;
 395               	.LM37:
 396 0126 3EBD      		out 0x2e,r19
 397               	.L15:
 140:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     while (!(SPSR & (1 << SPIF)));
 399               	.LM38:
 400 0128 0DB4      		in __tmp_reg__,0x2d
 401 012a 07FE      		sbrs __tmp_reg__,7
 402 012c 00C0      		rjmp .L15
 403               	.LBE50:
 404               	.LBE49:
 182:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         sendSPI( (uint8_t )(pixA << 4) ); // p1
 406               	.LM39:
 407 012e 7295      		swap r23
 408 0130 707F      		andi r23,lo8(-16)
 409               	.LBB51:
 410               	.LBB52:
 139:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     SPDR = val;
 412               	.LM40:
 413 0132 7EBD      		out 0x2e,r23
 414               	.L17:
 140:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     while (!(SPSR & (1 << SPIF)));
 416               	.LM41:
 417 0134 0DB4      		in __tmp_reg__,0x2d
 418 0136 07FE      		sbrs __tmp_reg__,7
 419 0138 00C0      		rjmp .L17
 420               	.LBE52:
 421               	.LBE51:
 422               	.LBB53:
 423               	.LBB54:
 139:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     SPDR = val;
 425               	.LM42:
 426 013a 2EBD      		out 0x2e,r18
 427               	.L19:
 140:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     while (!(SPSR & (1 << SPIF)));
 429               	.LM43:
 430 013c 0DB4      		in __tmp_reg__,0x2d
 431 013e 07FE      		sbrs __tmp_reg__,7
 432 0140 00C0      		rjmp .L19
 433               	.LBE54:
 434               	.LBE53:
 435               	.LBE48:
 176:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     for (int x=0;x<14;x+=2)
 437               	.LM44:
 438 0142 0296      		adiw r24,2
 439 0144 8E30      		cpi r24,14
 440 0146 9105      		cpc r25,__zero_reg__
 441 0148 01F4      		brne .L21
 442               	.LBE47:
 183:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         sendSPI( pixB ); // p2
 184:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     }
 185:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 186:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     //  col 15 a la mano
 187:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     sendSPI( _display.buff_A/* pixels*/[14][rowIndex] >> 4); // p15
 444               	.LM45:
 445 014a E091 0000 		lds r30,rowIndex.2141
 446 014e F091 0000 		lds r31,rowIndex.2141+1
 447 0152 E050      		subi r30,lo8(-(_display+420))
 448 0154 F040      		sbci r31,hi8(-(_display+420))
 449 0156 8081      		ld r24,Z
 450 0158 8295      		swap r24
 451 015a 8F70      		andi r24,lo8(15)
 452               	.LBB55:
 453               	.LBB56:
 139:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     SPDR = val;
 455               	.LM46:
 456 015c 8EBD      		out 0x2e,r24
 457               	.L23:
 140:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     while (!(SPSR & (1 << SPIF)));
 459               	.LM47:
 460 015e 0DB4      		in __tmp_reg__,0x2d
 461 0160 07FE      		sbrs __tmp_reg__,7
 462 0162 00C0      		rjmp .L23
 463               	.LBE56:
 464               	.LBE55:
 188:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     sendSPI( (uint8_t )(  _display.buff_A/*pixels*/[14][rowIndex] << 4) ); // p15
 466               	.LM48:
 467 0164 E091 0000 		lds r30,rowIndex.2141
 468 0168 F091 0000 		lds r31,rowIndex.2141+1
 469 016c E050      		subi r30,lo8(-(_display+420))
 470 016e F040      		sbci r31,hi8(-(_display+420))
 471 0170 8081      		ld r24,Z
 472 0172 8295      		swap r24
 473 0174 807F      		andi r24,lo8(-16)
 474               	.LBB57:
 475               	.LBB58:
 139:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     SPDR = val;
 477               	.LM49:
 478 0176 8EBD      		out 0x2e,r24
 479               	.L25:
 140:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     while (!(SPSR & (1 << SPIF)));
 481               	.LM50:
 482 0178 0DB4      		in __tmp_reg__,0x2d
 483 017a 07FE      		sbrs __tmp_reg__,7
 484 017c 00C0      		rjmp .L25
 485               	.LBE58:
 486               	.LBE57:
 487               	.LBB59:
 488               	.LBB60:
 139:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     SPDR = val;
 490               	.LM51:
 491 017e 1EBC      		out 0x2e,__zero_reg__
 492               	.L27:
 140:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     while (!(SPSR & (1 << SPIF)));
 494               	.LM52:
 495 0180 0DB4      		in __tmp_reg__,0x2d
 496 0182 07FE      		sbrs __tmp_reg__,7
 497 0184 00C0      		rjmp .L27
 498 0186 8FE0      		ldi r24,lo8(15)
 499 0188 90E0      		ldi r25,0
 500               	.LBE60:
 501               	.LBE59:
 502               	.LBB61:
 503               	.LBB62:
 189:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 190:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /**/
 191:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 192:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // col 16 -> send dumm values ( not displayed)
 193:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     sendSPI(0b00000000); // p16
 194:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 195:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     for (int x = 15;x<28;x+=2)
 196:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     {
 197:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         const uint8_t pixA =  _display.buff_A/*pixels*/[x][rowIndex];
 505               	.LM53:
 506 018a 6EE1      		ldi r22,lo8(30)
 507               	.L35:
 509               	.LM54:
 510 018c 2091 0000 		lds r18,rowIndex.2141
 511 0190 3091 0000 		lds r19,rowIndex.2141+1
 512 0194 689F      		mul r22,r24
 513 0196 F001      		movw r30,r0
 514 0198 699F      		mul r22,r25
 515 019a F00D      		add r31,r0
 516 019c 1124      		clr __zero_reg__
 517 019e E20F      		add r30,r18
 518 01a0 F31F      		adc r31,r19
 519 01a2 E050      		subi r30,lo8(-(_display))
 520 01a4 F040      		sbci r31,hi8(-(_display))
 521 01a6 7081      		ld r23,Z
 198:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         const uint8_t pixB =  _display.buff_A/*pixels*/[x+1][rowIndex];
 523               	.LM55:
 524 01a8 AC01      		movw r20,r24
 525 01aa 4F5F      		subi r20,-1
 526 01ac 5F4F      		sbci r21,-1
 527 01ae 649F      		mul r22,r20
 528 01b0 F001      		movw r30,r0
 529 01b2 659F      		mul r22,r21
 530 01b4 F00D      		add r31,r0
 531 01b6 1124      		clr __zero_reg__
 532 01b8 E20F      		add r30,r18
 533 01ba F31F      		adc r31,r19
 534 01bc E050      		subi r30,lo8(-(_display))
 535 01be F040      		sbci r31,hi8(-(_display))
 536 01c0 2081      		ld r18,Z
 199:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 200:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         sendSPI( pixA >> 4); // p1
 538               	.LM56:
 539 01c2 372F      		mov r19,r23
 540 01c4 3295      		swap r19
 541 01c6 3F70      		andi r19,lo8(15)
 542               	.LBB63:
 543               	.LBB64:
 139:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     SPDR = val;
 545               	.LM57:
 546 01c8 3EBD      		out 0x2e,r19
 547               	.L29:
 140:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     while (!(SPSR & (1 << SPIF)));
 549               	.LM58:
 550 01ca 0DB4      		in __tmp_reg__,0x2d
 551 01cc 07FE      		sbrs __tmp_reg__,7
 552 01ce 00C0      		rjmp .L29
 553               	.LBE64:
 554               	.LBE63:
 201:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         sendSPI( (uint8_t )(pixA<< 4) ); // p1
 556               	.LM59:
 557 01d0 7295      		swap r23
 558 01d2 707F      		andi r23,lo8(-16)
 559               	.LBB65:
 560               	.LBB66:
 139:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     SPDR = val;
 562               	.LM60:
 563 01d4 7EBD      		out 0x2e,r23
 564               	.L31:
 140:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     while (!(SPSR & (1 << SPIF)));
 566               	.LM61:
 567 01d6 0DB4      		in __tmp_reg__,0x2d
 568 01d8 07FE      		sbrs __tmp_reg__,7
 569 01da 00C0      		rjmp .L31
 570               	.LBE66:
 571               	.LBE65:
 572               	.LBB67:
 573               	.LBB68:
 139:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     SPDR = val;
 575               	.LM62:
 576 01dc 2EBD      		out 0x2e,r18
 577               	.L33:
 140:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     while (!(SPSR & (1 << SPIF)));
 579               	.LM63:
 580 01de 0DB4      		in __tmp_reg__,0x2d
 581 01e0 07FE      		sbrs __tmp_reg__,7
 582 01e2 00C0      		rjmp .L33
 583               	.LBE68:
 584               	.LBE67:
 585               	.LBE62:
 195:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     for (int x = 15;x<28;x+=2)
 587               	.LM64:
 588 01e4 0296      		adiw r24,2
 589 01e6 8D31      		cpi r24,29
 590 01e8 9105      		cpc r25,__zero_reg__
 591 01ea 01F4      		brne .L35
 592               	.LBE61:
 202:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         sendSPI( pixB ); // p2
 203:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     }
 204:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 205:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // col 29 a la mano
 206:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     sendSPI(  _display.buff_A/*pixels*/[29][rowIndex] >> 4); // p15
 594               	.LM65:
 595 01ec E091 0000 		lds r30,rowIndex.2141
 596 01f0 F091 0000 		lds r31,rowIndex.2141+1
 597 01f4 E050      		subi r30,lo8(-(_display+870))
 598 01f6 F040      		sbci r31,hi8(-(_display+870))
 599 01f8 8081      		ld r24,Z
 600 01fa 8295      		swap r24
 601 01fc 8F70      		andi r24,lo8(15)
 602               	.LBB69:
 603               	.LBB70:
 139:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     SPDR = val;
 605               	.LM66:
 606 01fe 8EBD      		out 0x2e,r24
 607               	.L37:
 140:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     while (!(SPSR & (1 << SPIF)));
 609               	.LM67:
 610 0200 0DB4      		in __tmp_reg__,0x2d
 611 0202 07FE      		sbrs __tmp_reg__,7
 612 0204 00C0      		rjmp .L37
 613               	.LBE70:
 614               	.LBE69:
 207:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     sendSPI( (uint8_t )( _display.buff_A/*pixels*/[29][rowIndex] << 4) ); // p15
 616               	.LM68:
 617 0206 E091 0000 		lds r30,rowIndex.2141
 618 020a F091 0000 		lds r31,rowIndex.2141+1
 619 020e E050      		subi r30,lo8(-(_display+870))
 620 0210 F040      		sbci r31,hi8(-(_display+870))
 621 0212 8081      		ld r24,Z
 622 0214 8295      		swap r24
 623 0216 807F      		andi r24,lo8(-16)
 624               	.LBB71:
 625               	.LBB72:
 139:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     SPDR = val;
 627               	.LM69:
 628 0218 8EBD      		out 0x2e,r24
 629               	.L39:
 140:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     while (!(SPSR & (1 << SPIF)));
 631               	.LM70:
 632 021a 0DB4      		in __tmp_reg__,0x2d
 633 021c 07FE      		sbrs __tmp_reg__,7
 634 021e 00C0      		rjmp .L39
 635               	.LBE72:
 636               	.LBE71:
 208:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 209:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /***** END OF FILL TLC BUFFERS ****/
 210:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 211:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 212:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     xlatNeedsPulse = 1;
 638               	.LM71:
 639 0220 81E0      		ldi r24,lo8(1)
 640 0222 8093 0000 		sts xlatNeedsPulse.2143,r24
 213:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 214:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     pulse( MIC_CLOCK_PORT , MIC_CLOCK_PIN );
 642               	.LM72:
 643 0226 8091 0B01 		lds r24,267
 644 022a 8260      		ori r24,lo8(2)
 645 022c 8093 0B01 		sts 267,r24
 646 0230 8091 0B01 		lds r24,267
 647 0234 8D7F      		andi r24,lo8(-3)
 648 0236 8093 0B01 		sts 267,r24
 215:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 216:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /**/
 217:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // additionnal pulse for non-wired outs of mics.
 218:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 219:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     if ( (rowIndex == 15) ||
 650               	.LM73:
 651 023a 8091 0000 		lds r24,rowIndex.2141
 652 023e 9091 0000 		lds r25,rowIndex.2141+1
 653 0242 8F30      		cpi r24,15
 654 0244 9105      		cpc r25,__zero_reg__
 655 0246 01F0      		breq .L40
 657               	.LM74:
 658 0248 4697      		sbiw r24,22
 659 024a 01F4      		brne .L41
 660               	.L40:
 220:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         (rowIndex == 22)
 221:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         )
 222:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     {
 223:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         setLow( DATA0_PORT , DATA0_PIN);
 662               	.LM75:
 663 024c 8091 0B01 		lds r24,267
 664 0250 877F      		andi r24,lo8(-9)
 665 0252 8093 0B01 		sts 267,r24
 224:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         setLow( DATA1_PORT , DATA1_PIN);
 667               	.LM76:
 668 0256 8091 0B01 		lds r24,267
 669 025a 8F7E      		andi r24,lo8(-17)
 670 025c 8093 0B01 		sts 267,r24
 225:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 226:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         pulse( MIC_CLOCK_PORT , MIC_CLOCK_PIN );
 672               	.LM77:
 673 0260 8091 0B01 		lds r24,267
 674 0264 8260      		ori r24,lo8(2)
 675 0266 8093 0B01 		sts 267,r24
 676 026a 8091 0B01 		lds r24,267
 677 026e 8D7F      		andi r24,lo8(-3)
 678 0270 8093 0B01 		sts 267,r24
 679               	.L41:
 227:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     }
 228:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 229:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /**/
 230:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 231:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setHigh(BLANK_PORT, BLANK_PIN);
 681               	.LM78:
 682 0274 289A      		sbi 0x5,0
 232:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 233:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 234:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     if (xlatNeedsPulse)
 684               	.LM79:
 685 0276 8091 0000 		lds r24,xlatNeedsPulse.2143
 686 027a 8823      		tst r24
 687 027c 01F0      		breq .L42
 235:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     {
 236:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         pulse(XLAT_PORT, XLAT_PIN);
 689               	.LM80:
 690 027e 2D9A      		sbi 0x5,5
 691 0280 2D98      		cbi 0x5,5
 237:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         xlatNeedsPulse = 0;
 693               	.LM81:
 694 0282 1092 0000 		sts xlatNeedsPulse.2143,__zero_reg__
 695               	.L42:
 238:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 239:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 240:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     }
 241:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 242:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     if (firstCycleFlag)
 243:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     {
 244:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         pulse(SCLK_PORT, SCLK_PIN);
 697               	.LM82:
 698 0286 299A      		sbi 0x5,1
 699 0288 2998      		cbi 0x5,1
 245:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 246:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 247:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     }
 248:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 249:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 250:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     rowIndex++;
 701               	.LM83:
 702 028a 8091 0000 		lds r24,rowIndex.2141
 703 028e 9091 0000 		lds r25,rowIndex.2141+1
 704 0292 0196      		adiw r24,1
 705 0294 9093 0000 		sts rowIndex.2141+1,r25
 706 0298 8093 0000 		sts rowIndex.2141,r24
 707               	/* epilogue start */
 251:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 252:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 253:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** }
 709               	.LM84:
 710 029c FF91      		pop r31
 711 029e EF91      		pop r30
 712 02a0 9F91      		pop r25
 713 02a2 8F91      		pop r24
 714 02a4 7F91      		pop r23
 715 02a6 6F91      		pop r22
 716 02a8 5F91      		pop r21
 717 02aa 4F91      		pop r20
 718 02ac 3F91      		pop r19
 719 02ae 2F91      		pop r18
 720 02b0 0F90      		pop r0
 721 02b2 0BBE      		out __RAMPZ__,r0
 722 02b4 0F90      		pop r0
 723 02b6 0FBE      		out __SREG__,r0
 724 02b8 0F90      		pop r0
 725 02ba 1F90      		pop r1
 726 02bc 1895      		reti
 746               	.Lscope4:
 747               		.section	.rodata.str1.1,"aMS",@progbits,1
 748               	.LC0:
 749 0000 4D69 6368 		.string	"Michel\nDurand"
 749      656C 0A44 
 749      7572 616E 
 749      6400 
 750               	.LC1:
 751 000e 6368 656C 		.string	"chelMi\nranDdu"
 751      4D69 0A72 
 751      616E 4464 
 751      7500 
 752               		.text
 754               	.global	writeNext
 756               	writeNext:
 254:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 255:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** *
 256:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 257:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** void writeNext(void)
 258:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** {
 758               	.LM85:
 759               	.LFBB5:
 760 02be 0F93      		push r16
 761               	/* prologue: function */
 762               	/* frame size = 0 */
 763               	/* stack size = 1 */
 764               	.L__stack_usage = 1
 259:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     const  uint8_t count = 2;
 260:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     static uint8_t index=0;
 261:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 262:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     display_clear( &_display);
 766               	.LM86:
 767 02c0 80E0      		ldi r24,lo8(_display)
 768 02c2 90E0      		ldi r25,hi8(_display)
 769 02c4 0E94 0000 		call display_clear
 263:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 264:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     if (index == 0)
 771               	.LM87:
 772 02c8 8091 0000 		lds r24,index.2160
 773 02cc 8111      		cpse r24,__zero_reg__
 774 02ce 00C0      		rjmp .L50
 265:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     {
 266:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 267:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         display_write( &_display,"Michel\nDurand",0,0);
 776               	.LM88:
 777 02d0 20E0      		ldi r18,0
 778 02d2 40E0      		ldi r20,0
 779 02d4 60E0      		ldi r22,lo8(.LC0)
 780 02d6 70E0      		ldi r23,hi8(.LC0)
 781 02d8 80E0      		ldi r24,lo8(_display)
 782 02da 90E0      		ldi r25,hi8(_display)
 783 02dc 0E94 0000 		call display_write
 268:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 269:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         _display.fillColor = 0b10101010;
 785               	.LM89:
 786 02e0 8AEA      		ldi r24,lo8(-86)
 787 02e2 00C0      		rjmp .L54
 788               	.L50:
 270:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         display_fillZone( &_display, 5, 22, 5, 5);
 271:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     }
 272:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 273:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     else if (index == 1)
 790               	.LM90:
 791 02e4 8130      		cpi r24,lo8(1)
 792 02e6 01F4      		brne .L51
 274:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     {
 275:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 276:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         display_write( &_display,"chelMi\nranDdu", 0,0);
 794               	.LM91:
 795 02e8 20E0      		ldi r18,0
 796 02ea 40E0      		ldi r20,0
 797 02ec 60E0      		ldi r22,lo8(.LC1)
 798 02ee 70E0      		ldi r23,hi8(.LC1)
 799 02f0 80E0      		ldi r24,lo8(_display)
 800 02f2 90E0      		ldi r25,hi8(_display)
 801 02f4 0E94 0000 		call display_write
 277:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 278:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         _display.fillColor = 0b00010000;
 803               	.LM92:
 804 02f8 80E1      		ldi r24,lo8(16)
 805               	.L54:
 806 02fa 8093 0000 		sts _display+1804,r24
 279:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         display_fillZone( &_display, 5, 22, 5, 5);
 808               	.LM93:
 809 02fe 05E0      		ldi r16,lo8(5)
 810 0300 25E0      		ldi r18,lo8(5)
 811 0302 46E1      		ldi r20,lo8(22)
 812 0304 65E0      		ldi r22,lo8(5)
 813 0306 80E0      		ldi r24,lo8(_display)
 814 0308 90E0      		ldi r25,hi8(_display)
 815 030a 0E94 0000 		call display_fillZone
 816               	.L51:
 280:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     }
 281:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** //        writeName2();
 282:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 283:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     index++;
 818               	.LM94:
 819 030e 8091 0000 		lds r24,index.2160
 820 0312 8F5F      		subi r24,lo8(-(1))
 284:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 285:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****   
 286:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 287:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     if (index == count)
 822               	.LM95:
 823 0314 8230      		cpi r24,lo8(2)
 824 0316 01F0      		breq .L52
 283:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     index++;
 826               	.LM96:
 827 0318 8093 0000 		sts index.2160,r24
 828 031c 00C0      		rjmp .L49
 829               	.L52:
 288:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         index = 0;
 831               	.LM97:
 832 031e 1092 0000 		sts index.2160,__zero_reg__
 833               	.L49:
 834               	/* epilogue start */
 289:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 290:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** }
 836               	.LM98:
 837 0322 0F91      		pop r16
 838 0324 0895      		ret
 843               	.Lscope5:
 844               		.section	.rodata.str1.1
 845               	.LC2:
 846 001c 6361 6E20 		.string	"can ID"
 846      4944 00
 847               	.LC3:
 848 0023 2569 00   		.string	"%i"
 849               	.global	__divsf3
 850               	.global	__subsf3
 851               	.global	__gesf2
 852               	.global	__floatunsisf
 853               	.global	__addsf3
 854               		.section	.text.startup,"ax",@progbits
 856               	.global	main
 858               	main:
 291:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 292:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 293:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 294:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** /* **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** **** *
 295:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 296:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** int main( void )
 297:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** {
 860               	.LM99:
 861               	.LFBB6:
 862 0000 CF93      		push r28
 863 0002 DF93      		push r29
 864 0004 00D0      		rcall .
 865 0006 CDB7      		in r28,__SP_L__
 866 0008 DEB7      		in r29,__SP_H__
 867               	/* prologue: function */
 868               	/* frame size = 3 */
 869               	/* stack size = 5 */
 870               	.L__stack_usage = 5
 298:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /* Hardware configuration */
 299:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 300:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     adc_init();
 872               	.LM100:
 873 000a 0E94 0000 		call adc_init
 301:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 302:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // init MICs leds
 303:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setOutput( DATA0_DDR , DATA0_PIN         ); // data row1
 875               	.LM101:
 876 000e 8091 0A01 		lds r24,266
 877 0012 8860      		ori r24,lo8(8)
 878 0014 8093 0A01 		sts 266,r24
 304:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setOutput( DATA1_DDR , DATA1_PIN         ); // data row2
 880               	.LM102:
 881 0018 8091 0A01 		lds r24,266
 882 001c 8061      		ori r24,lo8(16)
 883 001e 8093 0A01 		sts 266,r24
 305:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setOutput( MIC_CLOCK_DDR , MIC_CLOCK_PIN ); // clock
 885               	.LM103:
 886 0022 8091 0A01 		lds r24,266
 887 0026 8260      		ori r24,lo8(2)
 888 0028 8093 0A01 		sts 266,r24
 306:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 307:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setOutput( MIC_STROBE_DDR , MIC_STROBE_PIN ); // strobe
 890               	.LM104:
 891 002c 8091 0A01 		lds r24,266
 892 0030 8460      		ori r24,lo8(4)
 893 0032 8093 0A01 		sts 266,r24
 308:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 309:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setOutput( MIC_OUT_ENABLE_DDR , MIC_OUT_ENABLE_PIN ); // utile?
 895               	.LM105:
 896 0036 8091 0A01 		lds r24,266
 897 003a 8160      		ori r24,lo8(1)
 898 003c 8093 0A01 		sts 266,r24
 310:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 311:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // MICs LDR
 312:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 313:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setOutput( LDR_DATA_DDR       , LDR_DATA_PIN ); // data
 900               	.LM106:
 901 0040 579A      		sbi 0xa,7
 314:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setOutput( LDR_STROBE_DDR     , LDR_STROBE_PIN ); // strobe
 903               	.LM107:
 904 0042 6C9A      		sbi 0xd,4
 315:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setOutput( LDR_OUT_ENABLE_DDR , LDR_OUT_ENABLE_PIN ); // out enable
 906               	.LM108:
 907 0044 6B9A      		sbi 0xd,3
 316:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setOutput( LDR_CLOCK_DDR      , LDR_CLOCK_PIN ); // clock
 909               	.LM109:
 910 0046 569A      		sbi 0xa,6
 317:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 318:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 319:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setHigh( MIC_STROBE_PORT , MIC_STROBE_PIN ); // strobe mic leds
 912               	.LM110:
 913 0048 8091 0B01 		lds r24,267
 914 004c 8460      		ori r24,lo8(4)
 915 004e 8093 0B01 		sts 267,r24
 320:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setHigh( LDR_STROBE_PORT , LDR_STROBE_PIN ); // strobe mic LDR
 917               	.LM111:
 918 0052 749A      		sbi 0xe,4
 321:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 322:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 323:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // reset mic ldr
 324:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 325:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setLow( LDR_DATA_PORT , LDR_DATA_PIN ); // data to low
 920               	.LM112:
 921 0054 5F98      		cbi 0xb,7
 922 0056 80E1      		ldi r24,lo8(16)
 923 0058 90E0      		ldi r25,0
 924               	.L57:
 925               	.LBB73:
 326:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 327:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     for (int i =0;i< 16;i++)
 328:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         pulse( LDR_CLOCK_PORT , LDR_CLOCK_PIN );
 927               	.LM113:
 928 005a 5E9A      		sbi 0xb,6
 929 005c 5E98      		cbi 0xb,6
 930 005e 0197      		sbiw r24,1
 327:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     for (int i =0;i< 16;i++)
 932               	.LM114:
 933 0060 0097      		sbiw r24,0
 934 0062 01F4      		brne .L57
 935               	.LBE73:
 329:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 330:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 331:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     // reset mic buffers
 332:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 333:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 334:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setLow( DATA0_PORT , DATA0_PIN); // val 0 prévue -> pulse après écrit la valeur dans le buff
 937               	.LM115:
 938 0064 8091 0B01 		lds r24,267
 939 0068 877F      		andi r24,lo8(-9)
 940 006a 8093 0B01 		sts 267,r24
 335:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     setLow( DATA1_PORT , DATA1_PIN);
 942               	.LM116:
 943 006e 8091 0B01 		lds r24,267
 944 0072 8F7E      		andi r24,lo8(-17)
 945 0074 8093 0B01 		sts 267,r24
 946 0078 8EE1      		ldi r24,lo8(30)
 947 007a 90E0      		ldi r25,0
 948               	.L59:
 949               	.LBB74:
 336:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 337:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     for (int i=0; i< Y_MIC_MAX ; i++)
 338:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     {
 339:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         pulse( MIC_CLOCK_PORT , MIC_CLOCK_PIN );
 951               	.LM117:
 952 007c 2091 0B01 		lds r18,267
 953 0080 2260      		ori r18,lo8(2)
 954 0082 2093 0B01 		sts 267,r18
 955 0086 2091 0B01 		lds r18,267
 956 008a 2D7F      		andi r18,lo8(-3)
 957 008c 2093 0B01 		sts 267,r18
 958 0090 0197      		sbiw r24,1
 337:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     for (int i=0; i< Y_MIC_MAX ; i++)
 960               	.LM118:
 961 0092 0097      		sbiw r24,0
 962 0094 01F4      		brne .L59
 963               	.LBE74:
 340:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 341:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     }
 342:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 343:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 344:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 345:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     display_init( &_display);
 965               	.LM119:
 966 0096 80E0      		ldi r24,lo8(_display)
 967 0098 90E0      		ldi r25,hi8(_display)
 968 009a 0E94 0000 		call display_init
 346:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 347:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     TLC5940_Init();
 970               	.LM120:
 971 009e 0E94 0000 		call TLC5940_Init
 348:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 349:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /* Vars configuration */    
 350:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 351:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 352:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 353:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 354:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 355:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 356:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 357:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     sei();
 973               	.LM121:
 974               	/* #APP */
 975               	 ;  357 "/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/mai
 976 00a2 7894      		sei
 977               	 ;  0 "" 2
 358:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 359:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 360:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /* **** Splash wait **** */
 361:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 362:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****    display_writeImage( &_display, catImage);
 979               	.LM122:
 980               	/* #NOAPP */
 981 00a4 60E0      		ldi r22,lo8(catImage)
 982 00a6 70E0      		ldi r23,hi8(catImage)
 983 00a8 80E0      		ldi r24,lo8(_display)
 984 00aa 90E0      		ldi r25,hi8(_display)
 985 00ac 0E94 0000 		call display_writeImage
 986               	.LBB75:
 987               	.LBB76:
 989               	.Ltext1:
   1:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   6:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   9:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  12:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      distribution.
  16:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  17:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  21:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  33:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* $Id$ */
  34:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  35:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  38:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  41:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  42:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  46:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \file */
  47:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \code
  49:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \endcode
  53:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  54:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     used.
  58:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  59:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  68:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  77:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  81:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** */
  82:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  83:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  87:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  88:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  93:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  94:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  97:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  98:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
 103:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 104:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /**
 105:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 107:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 109:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 112:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 114:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 120:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 125:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 129:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 132:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 140:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  */
 141:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** void
 142:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** {
 144:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	double __tmp ; 
 145:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 146:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 147:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 148:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 149:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 152:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 153:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 154:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 155:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 156:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 157:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 158:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#else
 159:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//round up by default
 160:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 161:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#endif
 162:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 163:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 991               	.LM123:
 992 00b0 2FEF      		ldi r18,lo8(3199999)
 993 00b2 83ED      		ldi r24,hi8(3199999)
 994 00b4 90E3      		ldi r25,hlo8(3199999)
 995 00b6 2150      		1: subi r18,1
 996 00b8 8040      		sbci r24,0
 997 00ba 9040      		sbci r25,0
 998 00bc 01F4      		brne 1b
 999 00be 00C0      		rjmp .
 1000 00c0 0000      		nop
 1001               	.LBE76:
 1002               	.LBE75:
 1004               	.Ltext2:
 363:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 364:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 365:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     _delay_ms(1000);
 366:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 367:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /* **** END OF Splash wait **** */
 368:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 369:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /* WRITE CAN ID */
 370:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 371:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     display_clear( &_display);
 1006               	.LM124:
 1007 00c2 80E0      		ldi r24,lo8(_display)
 1008 00c4 90E0      		ldi r25,hi8(_display)
 1009 00c6 0E94 0000 		call display_clear
 372:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 373:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     display_write( &_display,"can ID", 0, 0);
 1011               	.LM125:
 1012 00ca 20E0      		ldi r18,0
 1013 00cc 40E0      		ldi r20,0
 1014 00ce 60E0      		ldi r22,lo8(.LC2)
 1015 00d0 70E0      		ldi r23,hi8(.LC2)
 1016 00d2 80E0      		ldi r24,lo8(_display)
 1017 00d4 90E0      		ldi r25,hi8(_display)
 1018 00d6 0E94 0000 		call display_write
 374:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 375:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     char str[3];
 376:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     sprintf(str, "%i" , 16);
 1020               	.LM126:
 1021 00da 1F92      		push __zero_reg__
 1022 00dc 80E1      		ldi r24,lo8(16)
 1023 00de 8F93      		push r24
 1024 00e0 80E0      		ldi r24,lo8(.LC3)
 1025 00e2 90E0      		ldi r25,hi8(.LC3)
 1026 00e4 9F93      		push r25
 1027 00e6 8F93      		push r24
 1028 00e8 8E01      		movw r16,r28
 1029 00ea 0F5F      		subi r16,-1
 1030 00ec 1F4F      		sbci r17,-1
 1031 00ee 1F93      		push r17
 1032 00f0 0F93      		push r16
 1033 00f2 0E94 0000 		call sprintf
 377:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     display_write( &_display,str, 0, 8);
 1035               	.LM127:
 1036 00f6 28E0      		ldi r18,lo8(8)
 1037 00f8 40E0      		ldi r20,0
 1038 00fa B801      		movw r22,r16
 1039 00fc 80E0      		ldi r24,lo8(_display)
 1040 00fe 90E0      		ldi r25,hi8(_display)
 1041 0100 0E94 0000 		call display_write
 1042 0104 0F90      		pop __tmp_reg__
 1043 0106 0F90      		pop __tmp_reg__
 1044 0108 0F90      		pop __tmp_reg__
 1045 010a 0F90      		pop __tmp_reg__
 1046 010c 0F90      		pop __tmp_reg__
 1047 010e 0F90      		pop __tmp_reg__
 378:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 379:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     /* END OF WRITE CAN ID */
 380:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 381:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     uint8_t ldr_index = MIC_SENCOR_COUNT;
 382:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 383:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     float prevVal = 0.f;
 384:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     float dVal    =0.f;
 1049               	.LM128:
 1050 0110 C12C      		mov r12,__zero_reg__
 1051 0112 B12C      		mov r11,__zero_reg__
 1052 0114 912C      		mov r9,__zero_reg__
 1053 0116 812C      		mov r8,__zero_reg__
 383:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     float prevVal = 0.f;
 1055               	.LM129:
 1056 0118 412C      		mov r4,__zero_reg__
 1057 011a 512C      		mov r5,__zero_reg__
 1058 011c 612C      		mov r6,__zero_reg__
 1059 011e 712C      		mov r7,__zero_reg__
 381:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     uint8_t ldr_index = MIC_SENCOR_COUNT;
 1061               	.LM130:
 1062 0120 8FE0      		ldi r24,lo8(15)
 1063 0122 D82E      		mov r13,r24
 1064               	.LBB77:
 385:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     
 386:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     uint8_t debouceMax  = 2;
 387:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     static uint8_t debounceCount = 0;
 388:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 389:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     for (;;)
 390:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     {
 391:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         if ( ldr_index == MIC_SENCOR_COUNT)
 392:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         {
 393:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             setHigh( LDR_DATA_PORT , LDR_DATA_PIN );
 394:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             ldr_index = 0;
 395:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 396:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             // matrice entiere
 397:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 398:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             dVal /= MIC_SENCOR_COUNT*SENSOR_COUNT;
 399:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 400:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             float res = fabs( dVal -prevVal );
 401:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 402:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 403:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 404:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             if ((res >= 100) )
 405:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             {
 406:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                 if ( debounceCount >= debouceMax)
 407:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                 {
 408:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     writeNext();
 409:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     
 410:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     _display.buff_A[29][29] = 255;
 1066               	.LM131:
 1067 0124 AA24      		clr r10
 1068 0126 AA94      		dec r10
 1069               	.L68:
 1070               	.LBE77:
 391:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         if ( ldr_index == MIC_SENCOR_COUNT)
 1072               	.LM132:
 1073 0128 2FE0      		ldi r18,lo8(15)
 1074 012a D212      		cpse r13,r18
 1075 012c 00C0      		rjmp .L60
 1076               	.LBB80:
 393:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             setHigh( LDR_DATA_PORT , LDR_DATA_PIN );
 1078               	.LM133:
 1079 012e 5F9A      		sbi 0xb,7
 398:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             dVal /= MIC_SENCOR_COUNT*SENSOR_COUNT;
 1081               	.LM134:
 1082 0130 20E0      		ldi r18,0
 1083 0132 30E0      		ldi r19,0
 1084 0134 41E6      		ldi r20,lo8(97)
 1085 0136 53E4      		ldi r21,lo8(67)
 1086 0138 6C2D      		mov r22,r12
 1087 013a 7B2D      		mov r23,r11
 1088 013c 892D      		mov r24,r9
 1089 013e 982D      		mov r25,r8
 1090 0140 0E94 0000 		call __divsf3
 1091 0144 7B01      		movw r14,r22
 1092 0146 8C01      		movw r16,r24
 400:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             float res = fabs( dVal -prevVal );
 1094               	.LM135:
 1095 0148 9201      		movw r18,r4
 1096 014a A301      		movw r20,r6
 1097 014c 0E94 0000 		call __subsf3
 1098 0150 9F77      		andi r25,0x7f
 404:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             if ((res >= 100) )
 1100               	.LM136:
 1101 0152 20E0      		ldi r18,0
 1102 0154 30E0      		ldi r19,0
 1103 0156 48EC      		ldi r20,lo8(-56)
 1104 0158 52E4      		ldi r21,lo8(66)
 1105 015a 0E94 0000 		call __gesf2
 1106 015e 87FD      		sbrc r24,7
 1107 0160 00C0      		rjmp .L71
 406:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                 if ( debounceCount >= debouceMax)
 1109               	.LM137:
 1110 0162 8091 0000 		lds r24,debounceCount.2177
 1111 0166 8230      		cpi r24,lo8(2)
 1112 0168 00F0      		brlo .L63
 408:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     writeNext();
 1114               	.LM138:
 1115 016a 0E94 0000 		call writeNext
 1117               	.LM139:
 1118 016e A092 0000 		sts _display+899,r10
 1119               	.LBB78:
 1120               	.LBB79:
 1122               	.Ltext3:
 1124               	.LM140:
 1125 0172 8FEF      		ldi r24,lo8(319999)
 1126 0174 91EE      		ldi r25,hi8(319999)
 1127 0176 24E0      		ldi r18,hlo8(319999)
 1128 0178 8150      		1: subi r24,1
 1129 017a 9040      		sbci r25,0
 1130 017c 2040      		sbci r18,0
 1131 017e 01F4      		brne 1b
 1132 0180 00C0      		rjmp .
 1133 0182 0000      		nop
 1134               	.LBE79:
 1135               	.LBE78:
 1137               	.Ltext4:
 411:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     _delay_ms(100);
 412:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     _display.buff_A[29][29] = 0;
 1139               	.LM141:
 1140 0184 1092 0000 		sts _display+899,__zero_reg__
 413:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     
 414:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     debounceCount = 0;
 1142               	.LM142:
 1143 0188 1092 0000 		sts debounceCount.2177,__zero_reg__
 1144 018c 00C0      		rjmp .L71
 1145               	.L63:
 415:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                 }
 416:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                 else
 417:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                     debounceCount++;
 1147               	.LM143:
 1148 018e 8F5F      		subi r24,lo8(-(1))
 1149 0190 8093 0000 		sts debounceCount.2177,r24
 1150 0194 00C0      		rjmp .L71
 1151               	.L60:
 1152               	.LBE80:
 418:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****                 
 419:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 420:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             }
 421:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 422:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             prevVal = dVal;
 423:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         }
 424:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 425:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         else
 426:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             setLow( LDR_DATA_PORT , LDR_DATA_PIN );
 1154               	.LM144:
 1155 0196 5F98      		cbi 0xb,7
 1156 0198 7201      		movw r14,r4
 1157 019a 8301      		movw r16,r6
 1158 019c 00C0      		rjmp .L61
 1159               	.L71:
 1160               	.LBB81:
 398:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             dVal /= MIC_SENCOR_COUNT*SENSOR_COUNT;
 1162               	.LM145:
 1163 019e CE2C      		mov r12,r14
 1164 01a0 BF2C      		mov r11,r15
 1165 01a2 902E      		mov r9,r16
 1166 01a4 812E      		mov r8,r17
 394:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             ldr_index = 0;
 1168               	.LM146:
 1169 01a6 D12C      		mov r13,__zero_reg__
 1170               	.L61:
 1171               	.LBE81:
 427:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 428:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 429:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         pulse( LDR_CLOCK_PORT , LDR_CLOCK_PIN);
 1173               	.LM147:
 1174 01a8 5E9A      		sbi 0xb,6
 1175 01aa 5E98      		cbi 0xb,6
 1176 01ac 712C      		mov r7,__zero_reg__
 1177               	.L67:
 1178               	.LBB82:
 1179               	.LBB83:
 1180               	.LBB84:
 121:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ADMUX = (ADMUX & 0xF8)|ch; // clears the bottom 3 bits before ORing
 1182               	.LM148:
 1183 01ae 9091 7C00 		lds r25,124
 120:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ch &= 0b00000111;  // AND operation with 7
 1185               	.LM149:
 1186 01b2 872D      		mov r24,r7
 1187 01b4 8770      		andi r24,lo8(7)
 121:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ADMUX = (ADMUX & 0xF8)|ch; // clears the bottom 3 bits before ORing
 1189               	.LM150:
 1190 01b6 987F      		andi r25,lo8(-8)
 1191 01b8 892B      		or r24,r25
 1192 01ba 8093 7C00 		sts 124,r24
 125:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     ADCSRA |= (1<<ADSC);
 1194               	.LM151:
 1195 01be 8091 7A00 		lds r24,122
 1196 01c2 8064      		ori r24,lo8(64)
 1197 01c4 8093 7A00 		sts 122,r24
 1198               	.L65:
 130:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     while(ADCSRA & (1<<ADSC));
 1200               	.LM152:
 1201 01c8 8091 7A00 		lds r24,122
 1202 01cc 86FD      		sbrc r24,6
 1203 01ce 00C0      		rjmp .L65
 132:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     return (ADC);
 1205               	.LM153:
 1206 01d0 6091 7800 		lds r22,120
 1207 01d4 7091 7900 		lds r23,120+1
 1208               	.LBE84:
 1209               	.LBE83:
 430:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 431:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         for (int i=0; i< SENSOR_COUNT ; i++)
 432:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         {
 433:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             // ldr 0 -> pix0 + pix 1
 434:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             // ldr 1 -> pix2 + pix 3
 435:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             // ldr 2 -> pix4 + pix 5
 436:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             // ldr i -> pix i*2 + pix (i*2)+1
 437:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 438:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             //const uint8_t index = ldr_index*2;
 439:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 440:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             //mat_sensors[i] = (uint8_t) adc_read(i);
 441:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 442:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             dVal += adc_read(i);
 1211               	.LM154:
 1212 01d8 80E0      		ldi r24,0
 1213 01da 90E0      		ldi r25,0
 1214 01dc 0E94 0000 		call __floatunsisf
 1215 01e0 9B01      		movw r18,r22
 1216 01e2 AC01      		movw r20,r24
 1217 01e4 6C2D      		mov r22,r12
 1218 01e6 7B2D      		mov r23,r11
 1219 01e8 892D      		mov r24,r9
 1220 01ea 982D      		mov r25,r8
 1221 01ec 0E94 0000 		call __addsf3
 1222 01f0 C62E      		mov r12,r22
 1223 01f2 B72E      		mov r11,r23
 1224 01f4 982E      		mov r9,r24
 1225 01f6 892E      		mov r8,r25
 1226 01f8 7394      		inc r7
 431:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         for (int i=0; i< SENSOR_COUNT ; i++)
 1228               	.LM155:
 1229 01fa 8FE0      		ldi r24,lo8(15)
 1230 01fc 7812      		cpse r7,r24
 1231 01fe 00C0      		rjmp .L67
 1232               	.LBE82:
 1233               	.LBB85:
 1234               	.LBB86:
 1236               	.Ltext5:
 1238               	.LM156:
 1239 0200 9FEF      		ldi r25,lo8(63999)
 1240 0202 29EF      		ldi r18,hi8(63999)
 1241 0204 80E0      		ldi r24,hlo8(63999)
 1242 0206 9150      		1: subi r25,1
 1243 0208 2040      		sbci r18,0
 1244 020a 8040      		sbci r24,0
 1245 020c 01F4      		brne 1b
 1246 020e 00C0      		rjmp .
 1247 0210 0000      		nop
 1248               	.LBE86:
 1249               	.LBE85:
 1251               	.Ltext6:
 443:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             
 444:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             /*
 445:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             pixels[i][index] = mat_sensors[i];
 446:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****             pixels[i][index+1] = mat_sensors[i];
 447:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****              */
 448:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         }
 449:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 450:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 451:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 452:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****      //   fontColor -=2; //(255 - mat_sensors[0]);
 453:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****        // initPixels();
 454:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 455:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c **** 
 456:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 457:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         _delay_ms(20);
 458:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         
 459:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****         ldr_index++;
 1253               	.LM157:
 1254 0212 D394      		inc r13
 460:/Users/manueldeneu/Documents/projets/dev/Monu100/MicroController/MicMonu100/MicMonu100/main.c ****     }
 1256               	.LM158:
 1257 0214 2701      		movw r4,r14
 1258 0216 3801      		movw r6,r16
 1259 0218 00C0      		rjmp .L68
 1266               	.Lscope6:
 1267               		.local	debounceCount.2177
 1268               		.comm	debounceCount.2177,1,1
 1269               		.local	index.2160
 1270               		.comm	index.2160,1,1
 1271               		.local	xlatNeedsPulse.2143
 1272               		.comm	xlatNeedsPulse.2143,1,1
 1273               		.data
 1276               	rowIndex.2141:
 1277 0000 1E00      		.word	30
 1278               	.global	mat_sensors
 1279               		.section .bss
 1282               	mat_sensors:
 1283 0000 0000 0000 		.zero	15
 1283      0000 0000 
 1283      0000 0000 
 1283      0000 00
 1284               		.comm	_display,1806,1
 1285               	.global	catImage
 1286               		.data
 1289               	catImage:
 1290 0002 FF        		.byte	-1
 1291 0003 FF        		.byte	-1
 1292 0004 FF        		.byte	-1
 1293 0005 FF        		.byte	-1
 1294 0006 FF        		.byte	-1
 1295 0007 FF        		.byte	-1
 1296 0008 FF        		.byte	-1
 1297 0009 FF        		.byte	-1
 1298 000a FF        		.byte	-1
 1299 000b FF        		.byte	-1
 1300 000c FF        		.byte	-1
 1301 000d FF        		.byte	-1
 1302 000e FF        		.byte	-1
 1303 000f FF        		.byte	-1
 1304 0010 FF        		.byte	-1
 1305 0011 FF        		.byte	-1
 1306 0012 FF        		.byte	-1
 1307 0013 FF        		.byte	-1
 1308 0014 FF        		.byte	-1
 1309 0015 FF        		.byte	-1
 1310 0016 FF        		.byte	-1
 1311 0017 FF        		.byte	-1
 1312 0018 FF        		.byte	-1
 1313 0019 FF        		.byte	-1
 1314 001a FF        		.byte	-1
 1315 001b FF        		.byte	-1
 1316 001c FF        		.byte	-1
 1317 001d 92        		.byte	-110
 1318 001e 00        		.byte	0
 1319 001f DB        		.byte	-37
 1320 0020 FF        		.byte	-1
 1321 0021 FF        		.byte	-1
 1322 0022 FF        		.byte	-1
 1323 0023 FF        		.byte	-1
 1324 0024 FF        		.byte	-1
 1325 0025 FF        		.byte	-1
 1326 0026 FF        		.byte	-1
 1327 0027 FF        		.byte	-1
 1328 0028 FF        		.byte	-1
 1329 0029 FF        		.byte	-1
 1330 002a FF        		.byte	-1
 1331 002b FF        		.byte	-1
 1332 002c FF        		.byte	-1
 1333 002d FF        		.byte	-1
 1334 002e FF        		.byte	-1
 1335 002f FF        		.byte	-1
 1336 0030 FF        		.byte	-1
 1337 0031 FF        		.byte	-1
 1338 0032 FF        		.byte	-1
 1339 0033 FF        		.byte	-1
 1340 0034 FF        		.byte	-1
 1341 0035 24        		.byte	36
 1342 0036 00        		.byte	0
 1343 0037 92        		.byte	-110
 1344 0038 DB        		.byte	-37
 1345 0039 DB        		.byte	-37
 1346 003a 6D        		.byte	109
 1347 003b 00        		.byte	0
 1348 003c 00        		.byte	0
 1349 003d 92        		.byte	-110
 1350 003e FF        		.byte	-1
 1351 003f FF        		.byte	-1
 1352 0040 FF        		.byte	-1
 1353 0041 FF        		.byte	-1
 1354 0042 FF        		.byte	-1
 1355 0043 FF        		.byte	-1
 1356 0044 FF        		.byte	-1
 1357 0045 FF        		.byte	-1
 1358 0046 FF        		.byte	-1
 1359 0047 FF        		.byte	-1
 1360 0048 FF        		.byte	-1
 1361 0049 FF        		.byte	-1
 1362 004a FF        		.byte	-1
 1363 004b FF        		.byte	-1
 1364 004c FF        		.byte	-1
 1365 004d FF        		.byte	-1
 1366 004e FF        		.byte	-1
 1367 004f FF        		.byte	-1
 1368 0050 FF        		.byte	-1
 1369 0051 FF        		.byte	-1
 1370 0052 FF        		.byte	-1
 1371 0053 24        		.byte	36
 1372 0054 00        		.byte	0
 1373 0055 00        		.byte	0
 1374 0056 00        		.byte	0
 1375 0057 00        		.byte	0
 1376 0058 00        		.byte	0
 1377 0059 00        		.byte	0
 1378 005a 00        		.byte	0
 1379 005b 6D        		.byte	109
 1380 005c FF        		.byte	-1
 1381 005d FF        		.byte	-1
 1382 005e FF        		.byte	-1
 1383 005f FF        		.byte	-1
 1384 0060 FF        		.byte	-1
 1385 0061 FF        		.byte	-1
 1386 0062 FF        		.byte	-1
 1387 0063 FF        		.byte	-1
 1388 0064 FF        		.byte	-1
 1389 0065 FF        		.byte	-1
 1390 0066 FF        		.byte	-1
 1391 0067 FF        		.byte	-1
 1392 0068 FF        		.byte	-1
 1393 0069 FF        		.byte	-1
 1394 006a FF        		.byte	-1
 1395 006b FF        		.byte	-1
 1396 006c FF        		.byte	-1
 1397 006d FF        		.byte	-1
 1398 006e FF        		.byte	-1
 1399 006f FF        		.byte	-1
 1400 0070 FF        		.byte	-1
 1401 0071 6D        		.byte	109
 1402 0072 00        		.byte	0
 1403 0073 00        		.byte	0
 1404 0074 00        		.byte	0
 1405 0075 00        		.byte	0
 1406 0076 00        		.byte	0
 1407 0077 00        		.byte	0
 1408 0078 00        		.byte	0
 1409 0079 24        		.byte	36
 1410 007a FF        		.byte	-1
 1411 007b FF        		.byte	-1
 1412 007c FF        		.byte	-1
 1413 007d FF        		.byte	-1
 1414 007e FF        		.byte	-1
 1415 007f FF        		.byte	-1
 1416 0080 FF        		.byte	-1
 1417 0081 FF        		.byte	-1
 1418 0082 FF        		.byte	-1
 1419 0083 FF        		.byte	-1
 1420 0084 FF        		.byte	-1
 1421 0085 FF        		.byte	-1
 1422 0086 FF        		.byte	-1
 1423 0087 FF        		.byte	-1
 1424 0088 FF        		.byte	-1
 1425 0089 FF        		.byte	-1
 1426 008a FF        		.byte	-1
 1427 008b FF        		.byte	-1
 1428 008c FF        		.byte	-1
 1429 008d FF        		.byte	-1
 1430 008e FF        		.byte	-1
 1431 008f DB        		.byte	-37
 1432 0090 00        		.byte	0
 1433 0091 00        		.byte	0
 1434 0092 00        		.byte	0
 1435 0093 00        		.byte	0
 1436 0094 00        		.byte	0
 1437 0095 00        		.byte	0
 1438 0096 00        		.byte	0
 1439 0097 00        		.byte	0
 1440 0098 FF        		.byte	-1
 1441 0099 FF        		.byte	-1
 1442 009a FF        		.byte	-1
 1443 009b FF        		.byte	-1
 1444 009c FF        		.byte	-1
 1445 009d FF        		.byte	-1
 1446 009e FF        		.byte	-1
 1447 009f FF        		.byte	-1
 1448 00a0 FF        		.byte	-1
 1449 00a1 FF        		.byte	-1
 1450 00a2 FF        		.byte	-1
 1451 00a3 FF        		.byte	-1
 1452 00a4 FF        		.byte	-1
 1453 00a5 FF        		.byte	-1
 1454 00a6 FF        		.byte	-1
 1455 00a7 FF        		.byte	-1
 1456 00a8 FF        		.byte	-1
 1457 00a9 FF        		.byte	-1
 1458 00aa FF        		.byte	-1
 1459 00ab FF        		.byte	-1
 1460 00ac FF        		.byte	-1
 1461 00ad FF        		.byte	-1
 1462 00ae 24        		.byte	36
 1463 00af 00        		.byte	0
 1464 00b0 00        		.byte	0
 1465 00b1 00        		.byte	0
 1466 00b2 00        		.byte	0
 1467 00b3 00        		.byte	0
 1468 00b4 00        		.byte	0
 1469 00b5 49        		.byte	73
 1470 00b6 FF        		.byte	-1
 1471 00b7 FF        		.byte	-1
 1472 00b8 FF        		.byte	-1
 1473 00b9 FF        		.byte	-1
 1474 00ba FF        		.byte	-1
 1475 00bb FF        		.byte	-1
 1476 00bc FF        		.byte	-1
 1477 00bd FF        		.byte	-1
 1478 00be FF        		.byte	-1
 1479 00bf FF        		.byte	-1
 1480 00c0 FF        		.byte	-1
 1481 00c1 FF        		.byte	-1
 1482 00c2 FF        		.byte	-1
 1483 00c3 FF        		.byte	-1
 1484 00c4 FF        		.byte	-1
 1485 00c5 FF        		.byte	-1
 1486 00c6 FF        		.byte	-1
 1487 00c7 FF        		.byte	-1
 1488 00c8 FF        		.byte	-1
 1489 00c9 FF        		.byte	-1
 1490 00ca FF        		.byte	-1
 1491 00cb FF        		.byte	-1
 1492 00cc 6D        		.byte	109
 1493 00cd 00        		.byte	0
 1494 00ce 00        		.byte	0
 1495 00cf 00        		.byte	0
 1496 00d0 00        		.byte	0
 1497 00d1 00        		.byte	0
 1498 00d2 00        		.byte	0
 1499 00d3 FF        		.byte	-1
 1500 00d4 FF        		.byte	-1
 1501 00d5 FF        		.byte	-1
 1502 00d6 FF        		.byte	-1
 1503 00d7 FF        		.byte	-1
 1504 00d8 FF        		.byte	-1
 1505 00d9 FF        		.byte	-1
 1506 00da FF        		.byte	-1
 1507 00db FF        		.byte	-1
 1508 00dc FF        		.byte	-1
 1509 00dd FF        		.byte	-1
 1510 00de FF        		.byte	-1
 1511 00df FF        		.byte	-1
 1512 00e0 FF        		.byte	-1
 1513 00e1 FF        		.byte	-1
 1514 00e2 FF        		.byte	-1
 1515 00e3 FF        		.byte	-1
 1516 00e4 FF        		.byte	-1
 1517 00e5 FF        		.byte	-1
 1518 00e6 FF        		.byte	-1
 1519 00e7 FF        		.byte	-1
 1520 00e8 FF        		.byte	-1
 1521 00e9 FF        		.byte	-1
 1522 00ea 24        		.byte	36
 1523 00eb 00        		.byte	0
 1524 00ec 00        		.byte	0
 1525 00ed 00        		.byte	0
 1526 00ee 00        		.byte	0
 1527 00ef 00        		.byte	0
 1528 00f0 49        		.byte	73
 1529 00f1 FF        		.byte	-1
 1530 00f2 FF        		.byte	-1
 1531 00f3 FF        		.byte	-1
 1532 00f4 FF        		.byte	-1
 1533 00f5 FF        		.byte	-1
 1534 00f6 FF        		.byte	-1
 1535 00f7 FF        		.byte	-1
 1536 00f8 FF        		.byte	-1
 1537 00f9 FF        		.byte	-1
 1538 00fa FF        		.byte	-1
 1539 00fb FF        		.byte	-1
 1540 00fc FF        		.byte	-1
 1541 00fd FF        		.byte	-1
 1542 00fe FF        		.byte	-1
 1543 00ff FF        		.byte	-1
 1544 0100 FF        		.byte	-1
 1545 0101 FF        		.byte	-1
 1546 0102 FF        		.byte	-1
 1547 0103 DB        		.byte	-37
 1548 0104 92        		.byte	-110
 1549 0105 6D        		.byte	109
 1550 0106 24        		.byte	36
 1551 0107 00        		.byte	0
 1552 0108 00        		.byte	0
 1553 0109 00        		.byte	0
 1554 010a 00        		.byte	0
 1555 010b 00        		.byte	0
 1556 010c 00        		.byte	0
 1557 010d 00        		.byte	0
 1558 010e 00        		.byte	0
 1559 010f FF        		.byte	-1
 1560 0110 FF        		.byte	-1
 1561 0111 FF        		.byte	-1
 1562 0112 FF        		.byte	-1
 1563 0113 FF        		.byte	-1
 1564 0114 FF        		.byte	-1
 1565 0115 FF        		.byte	-1
 1566 0116 FF        		.byte	-1
 1567 0117 FF        		.byte	-1
 1568 0118 FF        		.byte	-1
 1569 0119 FF        		.byte	-1
 1570 011a FF        		.byte	-1
 1571 011b FF        		.byte	-1
 1572 011c FF        		.byte	-1
 1573 011d FF        		.byte	-1
 1574 011e FF        		.byte	-1
 1575 011f 92        		.byte	-110
 1576 0120 24        		.byte	36
 1577 0121 00        		.byte	0
 1578 0122 00        		.byte	0
 1579 0123 00        		.byte	0
 1580 0124 00        		.byte	0
 1581 0125 00        		.byte	0
 1582 0126 00        		.byte	0
 1583 0127 00        		.byte	0
 1584 0128 00        		.byte	0
 1585 0129 00        		.byte	0
 1586 012a 00        		.byte	0
 1587 012b 00        		.byte	0
 1588 012c 00        		.byte	0
 1589 012d FF        		.byte	-1
 1590 012e FF        		.byte	-1
 1591 012f FF        		.byte	-1
 1592 0130 FF        		.byte	-1
 1593 0131 FF        		.byte	-1
 1594 0132 FF        		.byte	-1
 1595 0133 FF        		.byte	-1
 1596 0134 FF        		.byte	-1
 1597 0135 FF        		.byte	-1
 1598 0136 FF        		.byte	-1
 1599 0137 FF        		.byte	-1
 1600 0138 FF        		.byte	-1
 1601 0139 FF        		.byte	-1
 1602 013a FF        		.byte	-1
 1603 013b B6        		.byte	-74
 1604 013c 00        		.byte	0
 1605 013d 00        		.byte	0
 1606 013e 00        		.byte	0
 1607 013f 00        		.byte	0
 1608 0140 00        		.byte	0
 1609 0141 00        		.byte	0
 1610 0142 00        		.byte	0
 1611 0143 00        		.byte	0
 1612 0144 00        		.byte	0
 1613 0145 00        		.byte	0
 1614 0146 00        		.byte	0
 1615 0147 00        		.byte	0
 1616 0148 00        		.byte	0
 1617 0149 00        		.byte	0
 1618 014a 00        		.byte	0
 1619 014b DB        		.byte	-37
 1620 014c FF        		.byte	-1
 1621 014d FF        		.byte	-1
 1622 014e FF        		.byte	-1
 1623 014f FF        		.byte	-1
 1624 0150 FF        		.byte	-1
 1625 0151 FF        		.byte	-1
 1626 0152 FF        		.byte	-1
 1627 0153 FF        		.byte	-1
 1628 0154 FF        		.byte	-1
 1629 0155 FF        		.byte	-1
 1630 0156 FF        		.byte	-1
 1631 0157 FF        		.byte	-1
 1632 0158 92        		.byte	-110
 1633 0159 00        		.byte	0
 1634 015a 00        		.byte	0
 1635 015b 00        		.byte	0
 1636 015c 00        		.byte	0
 1637 015d 00        		.byte	0
 1638 015e 00        		.byte	0
 1639 015f 00        		.byte	0
 1640 0160 00        		.byte	0
 1641 0161 00        		.byte	0
 1642 0162 00        		.byte	0
 1643 0163 00        		.byte	0
 1644 0164 00        		.byte	0
 1645 0165 00        		.byte	0
 1646 0166 00        		.byte	0
 1647 0167 00        		.byte	0
 1648 0168 00        		.byte	0
 1649 0169 FF        		.byte	-1
 1650 016a FF        		.byte	-1
 1651 016b FF        		.byte	-1
 1652 016c FF        		.byte	-1
 1653 016d FF        		.byte	-1
 1654 016e FF        		.byte	-1
 1655 016f FF        		.byte	-1
 1656 0170 FF        		.byte	-1
 1657 0171 FF        		.byte	-1
 1658 0172 FF        		.byte	-1
 1659 0173 FF        		.byte	-1
 1660 0174 FF        		.byte	-1
 1661 0175 B6        		.byte	-74
 1662 0176 00        		.byte	0
 1663 0177 00        		.byte	0
 1664 0178 00        		.byte	0
 1665 0179 00        		.byte	0
 1666 017a 00        		.byte	0
 1667 017b 00        		.byte	0
 1668 017c 00        		.byte	0
 1669 017d 00        		.byte	0
 1670 017e 00        		.byte	0
 1671 017f 00        		.byte	0
 1672 0180 00        		.byte	0
 1673 0181 00        		.byte	0
 1674 0182 00        		.byte	0
 1675 0183 00        		.byte	0
 1676 0184 00        		.byte	0
 1677 0185 00        		.byte	0
 1678 0186 6D        		.byte	109
 1679 0187 FF        		.byte	-1
 1680 0188 FF        		.byte	-1
 1681 0189 FF        		.byte	-1
 1682 018a FF        		.byte	-1
 1683 018b FF        		.byte	-1
 1684 018c FF        		.byte	-1
 1685 018d FF        		.byte	-1
 1686 018e FF        		.byte	-1
 1687 018f FF        		.byte	-1
 1688 0190 FF        		.byte	-1
 1689 0191 FF        		.byte	-1
 1690 0192 FF        		.byte	-1
 1691 0193 00        		.byte	0
 1692 0194 00        		.byte	0
 1693 0195 00        		.byte	0
 1694 0196 00        		.byte	0
 1695 0197 00        		.byte	0
 1696 0198 00        		.byte	0
 1697 0199 00        		.byte	0
 1698 019a 00        		.byte	0
 1699 019b 00        		.byte	0
 1700 019c 00        		.byte	0
 1701 019d 00        		.byte	0
 1702 019e 00        		.byte	0
 1703 019f 00        		.byte	0
 1704 01a0 00        		.byte	0
 1705 01a1 00        		.byte	0
 1706 01a2 00        		.byte	0
 1707 01a3 49        		.byte	73
 1708 01a4 FF        		.byte	-1
 1709 01a5 FF        		.byte	-1
 1710 01a6 FF        		.byte	-1
 1711 01a7 FF        		.byte	-1
 1712 01a8 FF        		.byte	-1
 1713 01a9 FF        		.byte	-1
 1714 01aa FF        		.byte	-1
 1715 01ab FF        		.byte	-1
 1716 01ac FF        		.byte	-1
 1717 01ad FF        		.byte	-1
 1718 01ae FF        		.byte	-1
 1719 01af FF        		.byte	-1
 1720 01b0 49        		.byte	73
 1721 01b1 00        		.byte	0
 1722 01b2 00        		.byte	0
 1723 01b3 00        		.byte	0
 1724 01b4 00        		.byte	0
 1725 01b5 00        		.byte	0
 1726 01b6 00        		.byte	0
 1727 01b7 00        		.byte	0
 1728 01b8 00        		.byte	0
 1729 01b9 00        		.byte	0
 1730 01ba 00        		.byte	0
 1731 01bb 00        		.byte	0
 1732 01bc 00        		.byte	0
 1733 01bd 00        		.byte	0
 1734 01be 00        		.byte	0
 1735 01bf 00        		.byte	0
 1736 01c0 24        		.byte	36
 1737 01c1 FF        		.byte	-1
 1738 01c2 FF        		.byte	-1
 1739 01c3 FF        		.byte	-1
 1740 01c4 FF        		.byte	-1
 1741 01c5 FF        		.byte	-1
 1742 01c6 FF        		.byte	-1
 1743 01c7 FF        		.byte	-1
 1744 01c8 FF        		.byte	-1
 1745 01c9 FF        		.byte	-1
 1746 01ca FF        		.byte	-1
 1747 01cb FF        		.byte	-1
 1748 01cc FF        		.byte	-1
 1749 01cd DB        		.byte	-37
 1750 01ce 00        		.byte	0
 1751 01cf 00        		.byte	0
 1752 01d0 00        		.byte	0
 1753 01d1 00        		.byte	0
 1754 01d2 00        		.byte	0
 1755 01d3 00        		.byte	0
 1756 01d4 00        		.byte	0
 1757 01d5 00        		.byte	0
 1758 01d6 00        		.byte	0
 1759 01d7 00        		.byte	0
 1760 01d8 00        		.byte	0
 1761 01d9 00        		.byte	0
 1762 01da 00        		.byte	0
 1763 01db 00        		.byte	0
 1764 01dc 00        		.byte	0
 1765 01dd 00        		.byte	0
 1766 01de DB        		.byte	-37
 1767 01df FF        		.byte	-1
 1768 01e0 FF        		.byte	-1
 1769 01e1 FF        		.byte	-1
 1770 01e2 FF        		.byte	-1
 1771 01e3 FF        		.byte	-1
 1772 01e4 FF        		.byte	-1
 1773 01e5 FF        		.byte	-1
 1774 01e6 FF        		.byte	-1
 1775 01e7 FF        		.byte	-1
 1776 01e8 FF        		.byte	-1
 1777 01e9 FF        		.byte	-1
 1778 01ea FF        		.byte	-1
 1779 01eb 92        		.byte	-110
 1780 01ec 00        		.byte	0
 1781 01ed 00        		.byte	0
 1782 01ee 00        		.byte	0
 1783 01ef 00        		.byte	0
 1784 01f0 00        		.byte	0
 1785 01f1 00        		.byte	0
 1786 01f2 00        		.byte	0
 1787 01f3 00        		.byte	0
 1788 01f4 00        		.byte	0
 1789 01f5 00        		.byte	0
 1790 01f6 00        		.byte	0
 1791 01f7 00        		.byte	0
 1792 01f8 00        		.byte	0
 1793 01f9 00        		.byte	0
 1794 01fa 00        		.byte	0
 1795 01fb 49        		.byte	73
 1796 01fc FF        		.byte	-1
 1797 01fd FF        		.byte	-1
 1798 01fe FF        		.byte	-1
 1799 01ff FF        		.byte	-1
 1800 0200 FF        		.byte	-1
 1801 0201 FF        		.byte	-1
 1802 0202 FF        		.byte	-1
 1803 0203 FF        		.byte	-1
 1804 0204 FF        		.byte	-1
 1805 0205 FF        		.byte	-1
 1806 0206 FF        		.byte	-1
 1807 0207 FF        		.byte	-1
 1808 0208 FF        		.byte	-1
 1809 0209 24        		.byte	36
 1810 020a 00        		.byte	0
 1811 020b 00        		.byte	0
 1812 020c 00        		.byte	0
 1813 020d 00        		.byte	0
 1814 020e 00        		.byte	0
 1815 020f 00        		.byte	0
 1816 0210 00        		.byte	0
 1817 0211 00        		.byte	0
 1818 0212 00        		.byte	0
 1819 0213 00        		.byte	0
 1820 0214 00        		.byte	0
 1821 0215 00        		.byte	0
 1822 0216 00        		.byte	0
 1823 0217 00        		.byte	0
 1824 0218 00        		.byte	0
 1825 0219 92        		.byte	-110
 1826 021a FF        		.byte	-1
 1827 021b FF        		.byte	-1
 1828 021c FF        		.byte	-1
 1829 021d FF        		.byte	-1
 1830 021e FF        		.byte	-1
 1831 021f FF        		.byte	-1
 1832 0220 FF        		.byte	-1
 1833 0221 FF        		.byte	-1
 1834 0222 FF        		.byte	-1
 1835 0223 FF        		.byte	-1
 1836 0224 FF        		.byte	-1
 1837 0225 FF        		.byte	-1
 1838 0226 FF        		.byte	-1
 1839 0227 00        		.byte	0
 1840 0228 00        		.byte	0
 1841 0229 00        		.byte	0
 1842 022a 00        		.byte	0
 1843 022b 00        		.byte	0
 1844 022c 00        		.byte	0
 1845 022d 00        		.byte	0
 1846 022e 00        		.byte	0
 1847 022f 00        		.byte	0
 1848 0230 00        		.byte	0
 1849 0231 00        		.byte	0
 1850 0232 00        		.byte	0
 1851 0233 00        		.byte	0
 1852 0234 00        		.byte	0
 1853 0235 00        		.byte	0
 1854 0236 00        		.byte	0
 1855 0237 B6        		.byte	-74
 1856 0238 FF        		.byte	-1
 1857 0239 FF        		.byte	-1
 1858 023a FF        		.byte	-1
 1859 023b FF        		.byte	-1
 1860 023c FF        		.byte	-1
 1861 023d FF        		.byte	-1
 1862 023e FF        		.byte	-1
 1863 023f FF        		.byte	-1
 1864 0240 FF        		.byte	-1
 1865 0241 FF        		.byte	-1
 1866 0242 FF        		.byte	-1
 1867 0243 FF        		.byte	-1
 1868 0244 92        		.byte	-110
 1869 0245 00        		.byte	0
 1870 0246 00        		.byte	0
 1871 0247 00        		.byte	0
 1872 0248 00        		.byte	0
 1873 0249 00        		.byte	0
 1874 024a 00        		.byte	0
 1875 024b 00        		.byte	0
 1876 024c 00        		.byte	0
 1877 024d 00        		.byte	0
 1878 024e 00        		.byte	0
 1879 024f 00        		.byte	0
 1880 0250 00        		.byte	0
 1881 0251 49        		.byte	73
 1882 0252 00        		.byte	0
 1883 0253 00        		.byte	0
 1884 0254 00        		.byte	0
 1885 0255 B6        		.byte	-74
 1886 0256 FF        		.byte	-1
 1887 0257 FF        		.byte	-1
 1888 0258 FF        		.byte	-1
 1889 0259 FF        		.byte	-1
 1890 025a FF        		.byte	-1
 1891 025b FF        		.byte	-1
 1892 025c FF        		.byte	-1
 1893 025d FF        		.byte	-1
 1894 025e FF        		.byte	-1
 1895 025f FF        		.byte	-1
 1896 0260 FF        		.byte	-1
 1897 0261 FF        		.byte	-1
 1898 0262 49        		.byte	73
 1899 0263 00        		.byte	0
 1900 0264 00        		.byte	0
 1901 0265 00        		.byte	0
 1902 0266 00        		.byte	0
 1903 0267 00        		.byte	0
 1904 0268 00        		.byte	0
 1905 0269 00        		.byte	0
 1906 026a 00        		.byte	0
 1907 026b 00        		.byte	0
 1908 026c 00        		.byte	0
 1909 026d 00        		.byte	0
 1910 026e B6        		.byte	-74
 1911 026f FF        		.byte	-1
 1912 0270 FF        		.byte	-1
 1913 0271 00        		.byte	0
 1914 0272 00        		.byte	0
 1915 0273 92        		.byte	-110
 1916 0274 FF        		.byte	-1
 1917 0275 FF        		.byte	-1
 1918 0276 FF        		.byte	-1
 1919 0277 FF        		.byte	-1
 1920 0278 FF        		.byte	-1
 1921 0279 FF        		.byte	-1
 1922 027a FF        		.byte	-1
 1923 027b FF        		.byte	-1
 1924 027c FF        		.byte	-1
 1925 027d FF        		.byte	-1
 1926 027e FF        		.byte	-1
 1927 027f B6        		.byte	-74
 1928 0280 00        		.byte	0
 1929 0281 00        		.byte	0
 1930 0282 00        		.byte	0
 1931 0283 00        		.byte	0
 1932 0284 00        		.byte	0
 1933 0285 00        		.byte	0
 1934 0286 00        		.byte	0
 1935 0287 00        		.byte	0
 1936 0288 00        		.byte	0
 1937 0289 00        		.byte	0
 1938 028a 00        		.byte	0
 1939 028b 6D        		.byte	109
 1940 028c FF        		.byte	-1
 1941 028d FF        		.byte	-1
 1942 028e FF        		.byte	-1
 1943 028f 24        		.byte	36
 1944 0290 00        		.byte	0
 1945 0291 49        		.byte	73
 1946 0292 FF        		.byte	-1
 1947 0293 FF        		.byte	-1
 1948 0294 FF        		.byte	-1
 1949 0295 FF        		.byte	-1
 1950 0296 FF        		.byte	-1
 1951 0297 FF        		.byte	-1
 1952 0298 FF        		.byte	-1
 1953 0299 FF        		.byte	-1
 1954 029a FF        		.byte	-1
 1955 029b FF        		.byte	-1
 1956 029c B6        		.byte	-74
 1957 029d 00        		.byte	0
 1958 029e 00        		.byte	0
 1959 029f 00        		.byte	0
 1960 02a0 00        		.byte	0
 1961 02a1 00        		.byte	0
 1962 02a2 00        		.byte	0
 1963 02a3 00        		.byte	0
 1964 02a4 00        		.byte	0
 1965 02a5 00        		.byte	0
 1966 02a6 00        		.byte	0
 1967 02a7 00        		.byte	0
 1968 02a8 00        		.byte	0
 1969 02a9 FF        		.byte	-1
 1970 02aa FF        		.byte	-1
 1971 02ab FF        		.byte	-1
 1972 02ac FF        		.byte	-1
 1973 02ad 6D        		.byte	109
 1974 02ae 00        		.byte	0
 1975 02af 00        		.byte	0
 1976 02b0 DB        		.byte	-37
 1977 02b1 FF        		.byte	-1
 1978 02b2 FF        		.byte	-1
 1979 02b3 FF        		.byte	-1
 1980 02b4 FF        		.byte	-1
 1981 02b5 FF        		.byte	-1
 1982 02b6 FF        		.byte	-1
 1983 02b7 FF        		.byte	-1
 1984 02b8 FF        		.byte	-1
 1985 02b9 6D        		.byte	109
 1986 02ba 00        		.byte	0
 1987 02bb 00        		.byte	0
 1988 02bc 00        		.byte	0
 1989 02bd 00        		.byte	0
 1990 02be 00        		.byte	0
 1991 02bf 00        		.byte	0
 1992 02c0 00        		.byte	0
 1993 02c1 00        		.byte	0
 1994 02c2 00        		.byte	0
 1995 02c3 00        		.byte	0
 1996 02c4 00        		.byte	0
 1997 02c5 00        		.byte	0
 1998 02c6 24        		.byte	36
 1999 02c7 92        		.byte	-110
 2000 02c8 DB        		.byte	-37
 2001 02c9 FF        		.byte	-1
 2002 02ca FF        		.byte	-1
 2003 02cb FF        		.byte	-1
 2004 02cc 24        		.byte	36
 2005 02cd 00        		.byte	0
 2006 02ce 00        		.byte	0
 2007 02cf DB        		.byte	-37
 2008 02d0 FF        		.byte	-1
 2009 02d1 FF        		.byte	-1
 2010 02d2 FF        		.byte	-1
 2011 02d3 FF        		.byte	-1
 2012 02d4 DB        		.byte	-37
 2013 02d5 6D        		.byte	109
 2014 02d6 00        		.byte	0
 2015 02d7 00        		.byte	0
 2016 02d8 00        		.byte	0
 2017 02d9 24        		.byte	36
 2018 02da 6D        		.byte	109
 2019 02db 49        		.byte	73
 2020 02dc 00        		.byte	0
 2021 02dd 00        		.byte	0
 2022 02de 00        		.byte	0
 2023 02df 00        		.byte	0
 2024 02e0 00        		.byte	0
 2025 02e1 00        		.byte	0
 2026 02e2 00        		.byte	0
 2027 02e3 00        		.byte	0
 2028 02e4 00        		.byte	0
 2029 02e5 00        		.byte	0
 2030 02e6 00        		.byte	0
 2031 02e7 FF        		.byte	-1
 2032 02e8 FF        		.byte	-1
 2033 02e9 FF        		.byte	-1
 2034 02ea DB        		.byte	-37
 2035 02eb 24        		.byte	36
 2036 02ec 00        		.byte	0
 2037 02ed 49        		.byte	73
 2038 02ee FF        		.byte	-1
 2039 02ef FF        		.byte	-1
 2040 02f0 DB        		.byte	-37
 2041 02f1 24        		.byte	36
 2042 02f2 00        		.byte	0
 2043 02f3 00        		.byte	0
 2044 02f4 00        		.byte	0
 2045 02f5 6D        		.byte	109
 2046 02f6 DB        		.byte	-37
 2047 02f7 FF        		.byte	-1
 2048 02f8 FF        		.byte	-1
 2049 02f9 FF        		.byte	-1
 2050 02fa DB        		.byte	-37
 2051 02fb DB        		.byte	-37
 2052 02fc DB        		.byte	-37
 2053 02fd DB        		.byte	-37
 2054 02fe DB        		.byte	-37
 2055 02ff DB        		.byte	-37
 2056 0300 DB        		.byte	-37
 2057 0301 DB        		.byte	-37
 2058 0302 DB        		.byte	-37
 2059 0303 DB        		.byte	-37
 2060 0304 DB        		.byte	-37
 2061 0305 FF        		.byte	-1
 2062 0306 FF        		.byte	-1
 2063 0307 FF        		.byte	-1
 2064 0308 FF        		.byte	-1
 2065 0309 FF        		.byte	-1
 2066 030a 92        		.byte	-110
 2067 030b DB        		.byte	-37
 2068 030c FF        		.byte	-1
 2069 030d FF        		.byte	-1
 2070 030e 24        		.byte	36
 2071 030f 00        		.byte	0
 2072 0310 00        		.byte	0
 2073 0311 92        		.byte	-110
 2074 0312 FF        		.byte	-1
 2075 0313 FF        		.byte	-1
 2076 0314 FF        		.byte	-1
 2077 0315 FF        		.byte	-1
 2078 0316 FF        		.byte	-1
 2079 0317 FF        		.byte	-1
 2080 0318 FF        		.byte	-1
 2081 0319 FF        		.byte	-1
 2082 031a FF        		.byte	-1
 2083 031b FF        		.byte	-1
 2084 031c FF        		.byte	-1
 2085 031d FF        		.byte	-1
 2086 031e FF        		.byte	-1
 2087 031f FF        		.byte	-1
 2088 0320 FF        		.byte	-1
 2089 0321 FF        		.byte	-1
 2090 0322 FF        		.byte	-1
 2091 0323 FF        		.byte	-1
 2092 0324 FF        		.byte	-1
 2093 0325 FF        		.byte	-1
 2094 0326 FF        		.byte	-1
 2095 0327 FF        		.byte	-1
 2096 0328 FF        		.byte	-1
 2097 0329 FF        		.byte	-1
 2098 032a FF        		.byte	-1
 2099 032b FF        		.byte	-1
 2100 032c 00        		.byte	0
 2101 032d 00        		.byte	0
 2102 032e DB        		.byte	-37
 2103 032f FF        		.byte	-1
 2104 0330 FF        		.byte	-1
 2105 0331 FF        		.byte	-1
 2106 0332 FF        		.byte	-1
 2107 0333 FF        		.byte	-1
 2108 0334 FF        		.byte	-1
 2109 0335 FF        		.byte	-1
 2110 0336 FF        		.byte	-1
 2111 0337 FF        		.byte	-1
 2112 0338 FF        		.byte	-1
 2113 0339 FF        		.byte	-1
 2114 033a FF        		.byte	-1
 2115 033b FF        		.byte	-1
 2116 033c FF        		.byte	-1
 2117 033d FF        		.byte	-1
 2118 033e FF        		.byte	-1
 2119 033f FF        		.byte	-1
 2120 0340 FF        		.byte	-1
 2121 0341 FF        		.byte	-1
 2122 0342 FF        		.byte	-1
 2123 0343 FF        		.byte	-1
 2124 0344 FF        		.byte	-1
 2125 0345 FF        		.byte	-1
 2126 0346 FF        		.byte	-1
 2127 0347 FF        		.byte	-1
 2128 0348 FF        		.byte	-1
 2129 0349 FF        		.byte	-1
 2130 034a 49        		.byte	73
 2131 034b 00        		.byte	0
 2132 034c B6        		.byte	-74
 2133 034d FF        		.byte	-1
 2134 034e FF        		.byte	-1
 2135 034f FF        		.byte	-1
 2136 0350 FF        		.byte	-1
 2137 0351 FF        		.byte	-1
 2138 0352 FF        		.byte	-1
 2139 0353 FF        		.byte	-1
 2140 0354 FF        		.byte	-1
 2141 0355 FF        		.byte	-1
 2142 0356 FF        		.byte	-1
 2143 0357 FF        		.byte	-1
 2144 0358 FF        		.byte	-1
 2145 0359 FF        		.byte	-1
 2146 035a FF        		.byte	-1
 2147 035b FF        		.byte	-1
 2148 035c FF        		.byte	-1
 2149 035d FF        		.byte	-1
 2150 035e FF        		.byte	-1
 2151 035f FF        		.byte	-1
 2152 0360 FF        		.byte	-1
 2153 0361 FF        		.byte	-1
 2154 0362 FF        		.byte	-1
 2155 0363 FF        		.byte	-1
 2156 0364 FF        		.byte	-1
 2157 0365 FF        		.byte	-1
 2158 0366 FF        		.byte	-1
 2159 0367 FF        		.byte	-1
 2160 0368 FF        		.byte	-1
 2161 0369 6D        		.byte	109
 2162 036a 00        		.byte	0
 2163 036b DB        		.byte	-37
 2164 036c FF        		.byte	-1
 2165 036d FF        		.byte	-1
 2166 036e FF        		.byte	-1
 2167 036f FF        		.byte	-1
 2168 0370 FF        		.byte	-1
 2169 0371 FF        		.byte	-1
 2170 0372 FF        		.byte	-1
 2171 0373 FF        		.byte	-1
 2172 0374 FF        		.byte	-1
 2173 0375 FF        		.byte	-1
 2174 0376 FF        		.byte	-1
 2175 0377 FF        		.byte	-1
 2176 0378 FF        		.byte	-1
 2177 0379 FF        		.byte	-1
 2178 037a FF        		.byte	-1
 2179 037b FF        		.byte	-1
 2180 037c FF        		.byte	-1
 2181 037d FF        		.byte	-1
 2182 037e FF        		.byte	-1
 2183 037f FF        		.byte	-1
 2184 0380 FF        		.byte	-1
 2185 0381 FF        		.byte	-1
 2186 0382 FF        		.byte	-1
 2187 0383 FF        		.byte	-1
 2188 0384 FF        		.byte	-1
 2189 0385 FF        		.byte	-1
 2190               	.global	spashImage
 2193               	spashImage:
 2194 0386 FF        		.byte	-1
 2195 0387 FF        		.byte	-1
 2196 0388 FF        		.byte	-1
 2197 0389 FF        		.byte	-1
 2198 038a FF        		.byte	-1
 2199 038b FF        		.byte	-1
 2200 038c FF        		.byte	-1
 2201 038d FF        		.byte	-1
 2202 038e FF        		.byte	-1
 2203 038f FF        		.byte	-1
 2204 0390 B6        		.byte	-74
 2205 0391 6D        		.byte	109
 2206 0392 49        		.byte	73
 2207 0393 24        		.byte	36
 2208 0394 00        		.byte	0
 2209 0395 00        		.byte	0
 2210 0396 24        		.byte	36
 2211 0397 49        		.byte	73
 2212 0398 6D        		.byte	109
 2213 0399 B6        		.byte	-74
 2214 039a FF        		.byte	-1
 2215 039b FF        		.byte	-1
 2216 039c FF        		.byte	-1
 2217 039d FF        		.byte	-1
 2218 039e FF        		.byte	-1
 2219 039f FF        		.byte	-1
 2220 03a0 FF        		.byte	-1
 2221 03a1 FF        		.byte	-1
 2222 03a2 FF        		.byte	-1
 2223 03a3 FF        		.byte	-1
 2224 03a4 FF        		.byte	-1
 2225 03a5 FF        		.byte	-1
 2226 03a6 FF        		.byte	-1
 2227 03a7 FF        		.byte	-1
 2228 03a8 FF        		.byte	-1
 2229 03a9 FF        		.byte	-1
 2230 03aa FF        		.byte	-1
 2231 03ab FF        		.byte	-1
 2232 03ac 6D        		.byte	109
 2233 03ad 24        		.byte	36
 2234 03ae 00        		.byte	0
 2235 03af 00        		.byte	0
 2236 03b0 00        		.byte	0
 2237 03b1 00        		.byte	0
 2238 03b2 00        		.byte	0
 2239 03b3 00        		.byte	0
 2240 03b4 00        		.byte	0
 2241 03b5 00        		.byte	0
 2242 03b6 00        		.byte	0
 2243 03b7 00        		.byte	0
 2244 03b8 24        		.byte	36
 2245 03b9 92        		.byte	-110
 2246 03ba FF        		.byte	-1
 2247 03bb FF        		.byte	-1
 2248 03bc FF        		.byte	-1
 2249 03bd FF        		.byte	-1
 2250 03be FF        		.byte	-1
 2251 03bf FF        		.byte	-1
 2252 03c0 FF        		.byte	-1
 2253 03c1 FF        		.byte	-1
 2254 03c2 FF        		.byte	-1
 2255 03c3 FF        		.byte	-1
 2256 03c4 FF        		.byte	-1
 2257 03c5 FF        		.byte	-1
 2258 03c6 FF        		.byte	-1
 2259 03c7 FF        		.byte	-1
 2260 03c8 92        		.byte	-110
 2261 03c9 24        		.byte	36
 2262 03ca 00        		.byte	0
 2263 03cb 00        		.byte	0
 2264 03cc 00        		.byte	0
 2265 03cd 00        		.byte	0
 2266 03ce 00        		.byte	0
 2267 03cf 00        		.byte	0
 2268 03d0 00        		.byte	0
 2269 03d1 00        		.byte	0
 2270 03d2 00        		.byte	0
 2271 03d3 00        		.byte	0
 2272 03d4 00        		.byte	0
 2273 03d5 00        		.byte	0
 2274 03d6 00        		.byte	0
 2275 03d7 00        		.byte	0
 2276 03d8 24        		.byte	36
 2277 03d9 B6        		.byte	-74
 2278 03da FF        		.byte	-1
 2279 03db FF        		.byte	-1
 2280 03dc FF        		.byte	-1
 2281 03dd FF        		.byte	-1
 2282 03de FF        		.byte	-1
 2283 03df FF        		.byte	-1
 2284 03e0 FF        		.byte	-1
 2285 03e1 FF        		.byte	-1
 2286 03e2 FF        		.byte	-1
 2287 03e3 FF        		.byte	-1
 2288 03e4 FF        		.byte	-1
 2289 03e5 6D        		.byte	109
 2290 03e6 00        		.byte	0
 2291 03e7 00        		.byte	0
 2292 03e8 00        		.byte	0
 2293 03e9 00        		.byte	0
 2294 03ea 00        		.byte	0
 2295 03eb 00        		.byte	0
 2296 03ec 00        		.byte	0
 2297 03ed 00        		.byte	0
 2298 03ee 00        		.byte	0
 2299 03ef 00        		.byte	0
 2300 03f0 00        		.byte	0
 2301 03f1 00        		.byte	0
 2302 03f2 00        		.byte	0
 2303 03f3 00        		.byte	0
 2304 03f4 00        		.byte	0
 2305 03f5 00        		.byte	0
 2306 03f6 00        		.byte	0
 2307 03f7 00        		.byte	0
 2308 03f8 6E        		.byte	110
 2309 03f9 FF        		.byte	-1
 2310 03fa FF        		.byte	-1
 2311 03fb FF        		.byte	-1
 2312 03fc FF        		.byte	-1
 2313 03fd FF        		.byte	-1
 2314 03fe FF        		.byte	-1
 2315 03ff FF        		.byte	-1
 2316 0400 FF        		.byte	-1
 2317 0401 FF        		.byte	-1
 2318 0402 49        		.byte	73
 2319 0403 00        		.byte	0
 2320 0404 00        		.byte	0
 2321 0405 00        		.byte	0
 2322 0406 00        		.byte	0
 2323 0407 00        		.byte	0
 2324 0408 00        		.byte	0
 2325 0409 24        		.byte	36
 2326 040a 00        		.byte	0
 2327 040b 00        		.byte	0
 2328 040c 00        		.byte	0
 2329 040d 00        		.byte	0
 2330 040e 00        		.byte	0
 2331 040f 00        		.byte	0
 2332 0410 00        		.byte	0
 2333 0411 00        		.byte	0
 2334 0412 00        		.byte	0
 2335 0413 00        		.byte	0
 2336 0414 00        		.byte	0
 2337 0415 00        		.byte	0
 2338 0416 00        		.byte	0
 2339 0417 6D        		.byte	109
 2340 0418 FF        		.byte	-1
 2341 0419 FF        		.byte	-1
 2342 041a FF        		.byte	-1
 2343 041b FF        		.byte	-1
 2344 041c FF        		.byte	-1
 2345 041d FF        		.byte	-1
 2346 041e FF        		.byte	-1
 2347 041f 6D        		.byte	109
 2348 0420 00        		.byte	0
 2349 0421 00        		.byte	0
 2350 0422 00        		.byte	0
 2351 0423 00        		.byte	0
 2352 0424 00        		.byte	0
 2353 0425 00        		.byte	0
 2354 0426 49        		.byte	73
 2355 0427 FF        		.byte	-1
 2356 0428 49        		.byte	73
 2357 0429 00        		.byte	0
 2358 042a 00        		.byte	0
 2359 042b 00        		.byte	0
 2360 042c 00        		.byte	0
 2361 042d 00        		.byte	0
 2362 042e 00        		.byte	0
 2363 042f 00        		.byte	0
 2364 0430 00        		.byte	0
 2365 0431 00        		.byte	0
 2366 0432 00        		.byte	0
 2367 0433 00        		.byte	0
 2368 0434 00        		.byte	0
 2369 0435 00        		.byte	0
 2370 0436 6D        		.byte	109
 2371 0437 FF        		.byte	-1
 2372 0438 FF        		.byte	-1
 2373 0439 FF        		.byte	-1
 2374 043a FF        		.byte	-1
 2375 043b FF        		.byte	-1
 2376 043c 92        		.byte	-110
 2377 043d 00        		.byte	0
 2378 043e 00        		.byte	0
 2379 043f 00        		.byte	0
 2380 0440 00        		.byte	0
 2381 0441 00        		.byte	0
 2382 0442 00        		.byte	0
 2383 0443 49        		.byte	73
 2384 0444 FF        		.byte	-1
 2385 0445 FF        		.byte	-1
 2386 0446 6D        		.byte	109
 2387 0447 00        		.byte	0
 2388 0448 00        		.byte	0
 2389 0449 00        		.byte	0
 2390 044a 00        		.byte	0
 2391 044b 00        		.byte	0
 2392 044c 00        		.byte	0
 2393 044d 00        		.byte	0
 2394 044e 00        		.byte	0
 2395 044f 00        		.byte	0
 2396 0450 00        		.byte	0
 2397 0451 00        		.byte	0
 2398 0452 00        		.byte	0
 2399 0453 00        		.byte	0
 2400 0454 00        		.byte	0
 2401 0455 B6        		.byte	-74
 2402 0456 FF        		.byte	-1
 2403 0457 FF        		.byte	-1
 2404 0458 FF        		.byte	-1
 2405 0459 FF        		.byte	-1
 2406 045a 24        		.byte	36
 2407 045b 00        		.byte	0
 2408 045c 00        		.byte	0
 2409 045d 00        		.byte	0
 2410 045e 00        		.byte	0
 2411 045f 00        		.byte	0
 2412 0460 24        		.byte	36
 2413 0461 FF        		.byte	-1
 2414 0462 FF        		.byte	-1
 2415 0463 FF        		.byte	-1
 2416 0464 49        		.byte	73
 2417 0465 00        		.byte	0
 2418 0466 00        		.byte	0
 2419 0467 00        		.byte	0
 2420 0468 00        		.byte	0
 2421 0469 00        		.byte	0
 2422 046a 00        		.byte	0
 2423 046b 00        		.byte	0
 2424 046c 00        		.byte	0
 2425 046d 00        		.byte	0
 2426 046e 00        		.byte	0
 2427 046f 00        		.byte	0
 2428 0470 00        		.byte	0
 2429 0471 00        		.byte	0
 2430 0472 00        		.byte	0
 2431 0473 24        		.byte	36
 2432 0474 FF        		.byte	-1
 2433 0475 FF        		.byte	-1
 2434 0476 FF        		.byte	-1
 2435 0477 6D        		.byte	109
 2436 0478 00        		.byte	0
 2437 0479 00        		.byte	0
 2438 047a 00        		.byte	0
 2439 047b 00        		.byte	0
 2440 047c 00        		.byte	0
 2441 047d 00        		.byte	0
 2442 047e B6        		.byte	-74
 2443 047f FF        		.byte	-1
 2444 0480 FF        		.byte	-1
 2445 0481 92        		.byte	-110
 2446 0482 00        		.byte	0
 2447 0483 00        		.byte	0
 2448 0484 00        		.byte	0
 2449 0485 00        		.byte	0
 2450 0486 00        		.byte	0
 2451 0487 00        		.byte	0
 2452 0488 00        		.byte	0
 2453 0489 00        		.byte	0
 2454 048a 00        		.byte	0
 2455 048b 00        		.byte	0
 2456 048c 00        		.byte	0
 2457 048d 00        		.byte	0
 2458 048e 00        		.byte	0
 2459 048f 00        		.byte	0
 2460 0490 00        		.byte	0
 2461 0491 00        		.byte	0
 2462 0492 92        		.byte	-110
 2463 0493 FF        		.byte	-1
 2464 0494 FF        		.byte	-1
 2465 0495 24        		.byte	36
 2466 0496 00        		.byte	0
 2467 0497 00        		.byte	0
 2468 0498 00        		.byte	0
 2469 0499 00        		.byte	0
 2470 049a 24        		.byte	36
 2471 049b 92        		.byte	-110
 2472 049c FF        		.byte	-1
 2473 049d FF        		.byte	-1
 2474 049e 6D        		.byte	109
 2475 049f 00        		.byte	0
 2476 04a0 00        		.byte	0
 2477 04a1 00        		.byte	0
 2478 04a2 00        		.byte	0
 2479 04a3 00        		.byte	0
 2480 04a4 00        		.byte	0
 2481 04a5 00        		.byte	0
 2482 04a6 00        		.byte	0
 2483 04a7 00        		.byte	0
 2484 04a8 00        		.byte	0
 2485 04a9 00        		.byte	0
 2486 04aa 00        		.byte	0
 2487 04ab 00        		.byte	0
 2488 04ac 00        		.byte	0
 2489 04ad 00        		.byte	0
 2490 04ae 00        		.byte	0
 2491 04af 00        		.byte	0
 2492 04b0 24        		.byte	36
 2493 04b1 FF        		.byte	-1
 2494 04b2 B6        		.byte	-74
 2495 04b3 00        		.byte	0
 2496 04b4 00        		.byte	0
 2497 04b5 00        		.byte	0
 2498 04b6 00        		.byte	0
 2499 04b7 6D        		.byte	109
 2500 04b8 FF        		.byte	-1
 2501 04b9 FF        		.byte	-1
 2502 04ba FF        		.byte	-1
 2503 04bb FF        		.byte	-1
 2504 04bc FF        		.byte	-1
 2505 04bd 24        		.byte	36
 2506 04be 00        		.byte	0
 2507 04bf 00        		.byte	0
 2508 04c0 00        		.byte	0
 2509 04c1 00        		.byte	0
 2510 04c2 00        		.byte	0
 2511 04c3 00        		.byte	0
 2512 04c4 00        		.byte	0
 2513 04c5 00        		.byte	0
 2514 04c6 00        		.byte	0
 2515 04c7 00        		.byte	0
 2516 04c8 00        		.byte	0
 2517 04c9 00        		.byte	0
 2518 04ca 00        		.byte	0
 2519 04cb 00        		.byte	0
 2520 04cc 00        		.byte	0
 2521 04cd 00        		.byte	0
 2522 04ce 00        		.byte	0
 2523 04cf B6        		.byte	-74
 2524 04d0 6D        		.byte	109
 2525 04d1 00        		.byte	0
 2526 04d2 00        		.byte	0
 2527 04d3 00        		.byte	0
 2528 04d4 6D        		.byte	109
 2529 04d5 FF        		.byte	-1
 2530 04d6 FF        		.byte	-1
 2531 04d7 FF        		.byte	-1
 2532 04d8 FF        		.byte	-1
 2533 04d9 FF        		.byte	-1
 2534 04da FF        		.byte	-1
 2535 04db FF        		.byte	-1
 2536 04dc 6D        		.byte	109
 2537 04dd 49        		.byte	73
 2538 04de 49        		.byte	73
 2539 04df 6D        		.byte	109
 2540 04e0 B6        		.byte	-74
 2541 04e1 DB        		.byte	-37
 2542 04e2 DB        		.byte	-37
 2543 04e3 B6        		.byte	-74
 2544 04e4 6D        		.byte	109
 2545 04e5 24        		.byte	36
 2546 04e6 00        		.byte	0
 2547 04e7 00        		.byte	0
 2548 04e8 00        		.byte	0
 2549 04e9 00        		.byte	0
 2550 04ea 00        		.byte	0
 2551 04eb 00        		.byte	0
 2552 04ec 00        		.byte	0
 2553 04ed 6D        		.byte	109
 2554 04ee 49        		.byte	73
 2555 04ef 00        		.byte	0
 2556 04f0 00        		.byte	0
 2557 04f1 00        		.byte	0
 2558 04f2 DB        		.byte	-37
 2559 04f3 FF        		.byte	-1
 2560 04f4 FF        		.byte	-1
 2561 04f5 FF        		.byte	-1
 2562 04f6 FF        		.byte	-1
 2563 04f7 FF        		.byte	-1
 2564 04f8 FF        		.byte	-1
 2565 04f9 FF        		.byte	-1
 2566 04fa FF        		.byte	-1
 2567 04fb FF        		.byte	-1
 2568 04fc FF        		.byte	-1
 2569 04fd FF        		.byte	-1
 2570 04fe FF        		.byte	-1
 2571 04ff FF        		.byte	-1
 2572 0500 FF        		.byte	-1
 2573 0501 FF        		.byte	-1
 2574 0502 FF        		.byte	-1
 2575 0503 DB        		.byte	-37
 2576 0504 24        		.byte	36
 2577 0505 00        		.byte	0
 2578 0506 00        		.byte	0
 2579 0507 00        		.byte	0
 2580 0508 00        		.byte	0
 2581 0509 00        		.byte	0
 2582 050a 00        		.byte	0
 2583 050b 49        		.byte	73
 2584 050c 24        		.byte	36
 2585 050d 00        		.byte	0
 2586 050e 00        		.byte	0
 2587 050f 00        		.byte	0
 2588 0510 6D        		.byte	109
 2589 0511 FF        		.byte	-1
 2590 0512 FF        		.byte	-1
 2591 0513 FF        		.byte	-1
 2592 0514 FF        		.byte	-1
 2593 0515 FF        		.byte	-1
 2594 0516 FF        		.byte	-1
 2595 0517 FF        		.byte	-1
 2596 0518 FF        		.byte	-1
 2597 0519 FF        		.byte	-1
 2598 051a FF        		.byte	-1
 2599 051b FF        		.byte	-1
 2600 051c FF        		.byte	-1
 2601 051d FF        		.byte	-1
 2602 051e FF        		.byte	-1
 2603 051f FF        		.byte	-1
 2604 0520 FF        		.byte	-1
 2605 0521 FF        		.byte	-1
 2606 0522 DB        		.byte	-37
 2607 0523 00        		.byte	0
 2608 0524 00        		.byte	0
 2609 0525 00        		.byte	0
 2610 0526 00        		.byte	0
 2611 0527 00        		.byte	0
 2612 0528 00        		.byte	0
 2613 0529 24        		.byte	36
 2614 052a 00        		.byte	0
 2615 052b 00        		.byte	0
 2616 052c 00        		.byte	0
 2617 052d 00        		.byte	0
 2618 052e 00        		.byte	0
 2619 052f 49        		.byte	73
 2620 0530 92        		.byte	-110
 2621 0531 DB        		.byte	-37
 2622 0532 FF        		.byte	-1
 2623 0533 FF        		.byte	-1
 2624 0534 FF        		.byte	-1
 2625 0535 FF        		.byte	-1
 2626 0536 FF        		.byte	-1
 2627 0537 FF        		.byte	-1
 2628 0538 FF        		.byte	-1
 2629 0539 FF        		.byte	-1
 2630 053a FF        		.byte	-1
 2631 053b FF        		.byte	-1
 2632 053c FF        		.byte	-1
 2633 053d FF        		.byte	-1
 2634 053e FF        		.byte	-1
 2635 053f FF        		.byte	-1
 2636 0540 FF        		.byte	-1
 2637 0541 6D        		.byte	109
 2638 0542 00        		.byte	0
 2639 0543 00        		.byte	0
 2640 0544 00        		.byte	0
 2641 0545 00        		.byte	0
 2642 0546 00        		.byte	0
 2643 0547 00        		.byte	0
 2644 0548 00        		.byte	0
 2645 0549 00        		.byte	0
 2646 054a 00        		.byte	0
 2647 054b 00        		.byte	0
 2648 054c 00        		.byte	0
 2649 054d 00        		.byte	0
 2650 054e 00        		.byte	0
 2651 054f 00        		.byte	0
 2652 0550 B6        		.byte	-74
 2653 0551 FF        		.byte	-1
 2654 0552 FF        		.byte	-1
 2655 0553 FF        		.byte	-1
 2656 0554 FF        		.byte	-1
 2657 0555 FF        		.byte	-1
 2658 0556 FF        		.byte	-1
 2659 0557 FF        		.byte	-1
 2660 0558 FF        		.byte	-1
 2661 0559 FF        		.byte	-1
 2662 055a FF        		.byte	-1
 2663 055b FF        		.byte	-1
 2664 055c FF        		.byte	-1
 2665 055d FF        		.byte	-1
 2666 055e FF        		.byte	-1
 2667 055f B6        		.byte	-74
 2668 0560 00        		.byte	0
 2669 0561 00        		.byte	0
 2670 0562 00        		.byte	0
 2671 0563 00        		.byte	0
 2672 0564 00        		.byte	0
 2673 0565 20        		.byte	32
 2674 0566 24        		.byte	36
 2675 0567 00        		.byte	0
 2676 0568 00        		.byte	0
 2677 0569 00        		.byte	0
 2678 056a 00        		.byte	0
 2679 056b 00        		.byte	0
 2680 056c 00        		.byte	0
 2681 056d 00        		.byte	0
 2682 056e 92        		.byte	-110
 2683 056f FF        		.byte	-1
 2684 0570 FF        		.byte	-1
 2685 0571 FF        		.byte	-1
 2686 0572 FF        		.byte	-1
 2687 0573 FF        		.byte	-1
 2688 0574 FF        		.byte	-1
 2689 0575 FF        		.byte	-1
 2690 0576 FF        		.byte	-1
 2691 0577 FF        		.byte	-1
 2692 0578 FF        		.byte	-1
 2693 0579 FF        		.byte	-1
 2694 057a FF        		.byte	-1
 2695 057b FF        		.byte	-1
 2696 057c FF        		.byte	-1
 2697 057d FF        		.byte	-1
 2698 057e 49        		.byte	73
 2699 057f 24        		.byte	36
 2700 0580 00        		.byte	0
 2701 0581 00        		.byte	0
 2702 0582 00        		.byte	0
 2703 0583 24        		.byte	36
 2704 0584 49        		.byte	73
 2705 0585 00        		.byte	0
 2706 0586 00        		.byte	0
 2707 0587 00        		.byte	0
 2708 0588 00        		.byte	0
 2709 0589 00        		.byte	0
 2710 058a 00        		.byte	0
 2711 058b 00        		.byte	0
 2712 058c 24        		.byte	36
 2713 058d FF        		.byte	-1
 2714 058e FF        		.byte	-1
 2715 058f FF        		.byte	-1
 2716 0590 FF        		.byte	-1
 2717 0591 FF        		.byte	-1
 2718 0592 FF        		.byte	-1
 2719 0593 FF        		.byte	-1
 2720 0594 FF        		.byte	-1
 2721 0595 FF        		.byte	-1
 2722 0596 FF        		.byte	-1
 2723 0597 FF        		.byte	-1
 2724 0598 FF        		.byte	-1
 2725 0599 FF        		.byte	-1
 2726 059a FF        		.byte	-1
 2727 059b FF        		.byte	-1
 2728 059c FF        		.byte	-1
 2729 059d DB        		.byte	-37
 2730 059e 00        		.byte	0
 2731 059f 00        		.byte	0
 2732 05a0 00        		.byte	0
 2733 05a1 49        		.byte	73
 2734 05a2 6D        		.byte	109
 2735 05a3 00        		.byte	0
 2736 05a4 00        		.byte	0
 2737 05a5 00        		.byte	0
 2738 05a6 00        		.byte	0
 2739 05a7 00        		.byte	0
 2740 05a8 00        		.byte	0
 2741 05a9 00        		.byte	0
 2742 05aa 00        		.byte	0
 2743 05ab 49        		.byte	73
 2744 05ac FF        		.byte	-1
 2745 05ad FF        		.byte	-1
 2746 05ae FF        		.byte	-1
 2747 05af DB        		.byte	-37
 2748 05b0 DB        		.byte	-37
 2749 05b1 FF        		.byte	-1
 2750 05b2 FF        		.byte	-1
 2751 05b3 FF        		.byte	-1
 2752 05b4 FF        		.byte	-1
 2753 05b5 FF        		.byte	-1
 2754 05b6 FF        		.byte	-1
 2755 05b7 FF        		.byte	-1
 2756 05b8 FF        		.byte	-1
 2757 05b9 FF        		.byte	-1
 2758 05ba FF        		.byte	-1
 2759 05bb FF        		.byte	-1
 2760 05bc 00        		.byte	0
 2761 05bd 00        		.byte	0
 2762 05be 00        		.byte	0
 2763 05bf 6D        		.byte	109
 2764 05c0 B6        		.byte	-74
 2765 05c1 00        		.byte	0
 2766 05c2 00        		.byte	0
 2767 05c3 00        		.byte	0
 2768 05c4 00        		.byte	0
 2769 05c5 00        		.byte	0
 2770 05c6 00        		.byte	0
 2771 05c7 00        		.byte	0
 2772 05c8 00        		.byte	0
 2773 05c9 24        		.byte	36
 2774 05ca FF        		.byte	-1
 2775 05cb FF        		.byte	-1
 2776 05cc B6        		.byte	-74
 2777 05cd 24        		.byte	36
 2778 05ce 24        		.byte	36
 2779 05cf 6D        		.byte	109
 2780 05d0 B6        		.byte	-74
 2781 05d1 FF        		.byte	-1
 2782 05d2 FF        		.byte	-1
 2783 05d3 FF        		.byte	-1
 2784 05d4 FF        		.byte	-1
 2785 05d5 FF        		.byte	-1
 2786 05d6 FF        		.byte	-1
 2787 05d7 FF        		.byte	-1
 2788 05d8 FF        		.byte	-1
 2789 05d9 92        		.byte	-110
 2790 05da 00        		.byte	0
 2791 05db 00        		.byte	0
 2792 05dc 00        		.byte	0
 2793 05dd B6        		.byte	-74
 2794 05de FF        		.byte	-1
 2795 05df 24        		.byte	36
 2796 05e0 00        		.byte	0
 2797 05e1 00        		.byte	0
 2798 05e2 00        		.byte	0
 2799 05e3 00        		.byte	0
 2800 05e4 00        		.byte	0
 2801 05e5 24        		.byte	36
 2802 05e6 6D        		.byte	109
 2803 05e7 FF        		.byte	-1
 2804 05e8 DB        		.byte	-37
 2805 05e9 49        		.byte	73
 2806 05ea 24        		.byte	36
 2807 05eb 49        		.byte	73
 2808 05ec 49        		.byte	73
 2809 05ed 49        		.byte	73
 2810 05ee 49        		.byte	73
 2811 05ef DB        		.byte	-37
 2812 05f0 FF        		.byte	-1
 2813 05f1 FF        		.byte	-1
 2814 05f2 FF        		.byte	-1
 2815 05f3 FF        		.byte	-1
 2816 05f4 FF        		.byte	-1
 2817 05f5 24        		.byte	36
 2818 05f6 24        		.byte	36
 2819 05f7 00        		.byte	0
 2820 05f8 00        		.byte	0
 2821 05f9 00        		.byte	0
 2822 05fa 24        		.byte	36
 2823 05fb FF        		.byte	-1
 2824 05fc FF        		.byte	-1
 2825 05fd 92        		.byte	-110
 2826 05fe 00        		.byte	0
 2827 05ff 00        		.byte	0
 2828 0600 00        		.byte	0
 2829 0601 00        		.byte	0
 2830 0602 00        		.byte	0
 2831 0603 24        		.byte	36
 2832 0604 6D        		.byte	109
 2833 0605 49        		.byte	73
 2834 0606 00        		.byte	0
 2835 0607 00        		.byte	0
 2836 0608 49        		.byte	73
 2837 0609 92        		.byte	-110
 2838 060a 92        		.byte	-110
 2839 060b B6        		.byte	-74
 2840 060c B6        		.byte	-74
 2841 060d B6        		.byte	-74
 2842 060e B6        		.byte	-74
 2843 060f DB        		.byte	-37
 2844 0610 DB        		.byte	-37
 2845 0611 DB        		.byte	-37
 2846 0612 92        		.byte	-110
 2847 0613 00        		.byte	0
 2848 0614 00        		.byte	0
 2849 0615 00        		.byte	0
 2850 0616 00        		.byte	0
 2851 0617 00        		.byte	0
 2852 0618 92        		.byte	-110
 2853 0619 FF        		.byte	-1
 2854 061a FF        		.byte	-1
 2855 061b FF        		.byte	-1
 2856 061c 24        		.byte	36
 2857 061d 00        		.byte	0
 2858 061e 00        		.byte	0
 2859 061f 00        		.byte	0
 2860 0620 00        		.byte	0
 2861 0621 00        		.byte	0
 2862 0622 00        		.byte	0
 2863 0623 00        		.byte	0
 2864 0624 00        		.byte	0
 2865 0625 00        		.byte	0
 2866 0626 00        		.byte	0
 2867 0627 00        		.byte	0
 2868 0628 00        		.byte	0
 2869 0629 00        		.byte	0
 2870 062a 00        		.byte	0
 2871 062b 00        		.byte	0
 2872 062c 00        		.byte	0
 2873 062d 00        		.byte	0
 2874 062e 00        		.byte	0
 2875 062f 00        		.byte	0
 2876 0630 00        		.byte	0
 2877 0631 00        		.byte	0
 2878 0632 00        		.byte	0
 2879 0633 00        		.byte	0
 2880 0634 00        		.byte	0
 2881 0635 24        		.byte	36
 2882 0636 FF        		.byte	-1
 2883 0637 FF        		.byte	-1
 2884 0638 FF        		.byte	-1
 2885 0639 FF        		.byte	-1
 2886 063a B6        		.byte	-74
 2887 063b 00        		.byte	0
 2888 063c 00        		.byte	0
 2889 063d 00        		.byte	0
 2890 063e 00        		.byte	0
 2891 063f 00        		.byte	0
 2892 0640 00        		.byte	0
 2893 0641 00        		.byte	0
 2894 0642 00        		.byte	0
 2895 0643 00        		.byte	0
 2896 0644 00        		.byte	0
 2897 0645 00        		.byte	0
 2898 0646 00        		.byte	0
 2899 0647 00        		.byte	0
 2900 0648 00        		.byte	0
 2901 0649 00        		.byte	0
 2902 064a 00        		.byte	0
 2903 064b 00        		.byte	0
 2904 064c 00        		.byte	0
 2905 064d 00        		.byte	0
 2906 064e 00        		.byte	0
 2907 064f 00        		.byte	0
 2908 0650 00        		.byte	0
 2909 0651 00        		.byte	0
 2910 0652 00        		.byte	0
 2911 0653 B6        		.byte	-74
 2912 0654 FF        		.byte	-1
 2913 0655 FF        		.byte	-1
 2914 0656 FF        		.byte	-1
 2915 0657 FF        		.byte	-1
 2916 0658 FF        		.byte	-1
 2917 0659 92        		.byte	-110
 2918 065a 00        		.byte	0
 2919 065b 00        		.byte	0
 2920 065c 00        		.byte	0
 2921 065d 00        		.byte	0
 2922 065e 00        		.byte	0
 2923 065f 00        		.byte	0
 2924 0660 00        		.byte	0
 2925 0661 00        		.byte	0
 2926 0662 00        		.byte	0
 2927 0663 00        		.byte	0
 2928 0664 00        		.byte	0
 2929 0665 00        		.byte	0
 2930 0666 00        		.byte	0
 2931 0667 00        		.byte	0
 2932 0668 00        		.byte	0
 2933 0669 00        		.byte	0
 2934 066a 00        		.byte	0
 2935 066b 00        		.byte	0
 2936 066c 00        		.byte	0
 2937 066d 00        		.byte	0
 2938 066e 00        		.byte	0
 2939 066f 00        		.byte	0
 2940 0670 6D        		.byte	109
 2941 0671 FF        		.byte	-1
 2942 0672 FF        		.byte	-1
 2943 0673 FF        		.byte	-1
 2944 0674 FF        		.byte	-1
 2945 0675 FF        		.byte	-1
 2946 0676 FF        		.byte	-1
 2947 0677 FF        		.byte	-1
 2948 0678 6D        		.byte	109
 2949 0679 00        		.byte	0
 2950 067a 00        		.byte	0
 2951 067b 00        		.byte	0
 2952 067c 00        		.byte	0
 2953 067d 00        		.byte	0
 2954 067e 00        		.byte	0
 2955 067f 00        		.byte	0
 2956 0680 00        		.byte	0
 2957 0681 00        		.byte	0
 2958 0682 00        		.byte	0
 2959 0683 00        		.byte	0
 2960 0684 00        		.byte	0
 2961 0685 00        		.byte	0
 2962 0686 00        		.byte	0
 2963 0687 00        		.byte	0
 2964 0688 00        		.byte	0
 2965 0689 00        		.byte	0
 2966 068a 00        		.byte	0
 2967 068b 00        		.byte	0
 2968 068c 00        		.byte	0
 2969 068d 6D        		.byte	109
 2970 068e FF        		.byte	-1
 2971 068f FF        		.byte	-1
 2972 0690 FF        		.byte	-1
 2973 0691 FF        		.byte	-1
 2974 0692 FF        		.byte	-1
 2975 0693 FF        		.byte	-1
 2976 0694 FF        		.byte	-1
 2977 0695 FF        		.byte	-1
 2978 0696 FF        		.byte	-1
 2979 0697 92        		.byte	-110
 2980 0698 00        		.byte	0
 2981 0699 00        		.byte	0
 2982 069a 00        		.byte	0
 2983 069b 00        		.byte	0
 2984 069c 00        		.byte	0
 2985 069d 00        		.byte	0
 2986 069e 00        		.byte	0
 2987 069f 00        		.byte	0
 2988 06a0 00        		.byte	0
 2989 06a1 00        		.byte	0
 2990 06a2 00        		.byte	0
 2991 06a3 00        		.byte	0
 2992 06a4 00        		.byte	0
 2993 06a5 00        		.byte	0
 2994 06a6 00        		.byte	0
 2995 06a7 00        		.byte	0
 2996 06a8 00        		.byte	0
 2997 06a9 00        		.byte	0
 2998 06aa 6D        		.byte	109
 2999 06ab FF        		.byte	-1
 3000 06ac FF        		.byte	-1
 3001 06ad FF        		.byte	-1
 3002 06ae FF        		.byte	-1
 3003 06af FF        		.byte	-1
 3004 06b0 FF        		.byte	-1
 3005 06b1 FF        		.byte	-1
 3006 06b2 FF        		.byte	-1
 3007 06b3 FF        		.byte	-1
 3008 06b4 FF        		.byte	-1
 3009 06b5 FF        		.byte	-1
 3010 06b6 B6        		.byte	-74
 3011 06b7 24        		.byte	36
 3012 06b8 00        		.byte	0
 3013 06b9 00        		.byte	0
 3014 06ba 00        		.byte	0
 3015 06bb 00        		.byte	0
 3016 06bc 00        		.byte	0
 3017 06bd 00        		.byte	0
 3018 06be 00        		.byte	0
 3019 06bf 00        		.byte	0
 3020 06c0 00        		.byte	0
 3021 06c1 00        		.byte	0
 3022 06c2 00        		.byte	0
 3023 06c3 00        		.byte	0
 3024 06c4 00        		.byte	0
 3025 06c5 00        		.byte	0
 3026 06c6 24        		.byte	36
 3027 06c7 B6        		.byte	-74
 3028 06c8 FF        		.byte	-1
 3029 06c9 FF        		.byte	-1
 3030 06ca FF        		.byte	-1
 3031 06cb FF        		.byte	-1
 3032 06cc FF        		.byte	-1
 3033 06cd FF        		.byte	-1
 3034 06ce FF        		.byte	-1
 3035 06cf FF        		.byte	-1
 3036 06d0 FF        		.byte	-1
 3037 06d1 FF        		.byte	-1
 3038 06d2 FF        		.byte	-1
 3039 06d3 FF        		.byte	-1
 3040 06d4 FF        		.byte	-1
 3041 06d5 FF        		.byte	-1
 3042 06d6 92        		.byte	-110
 3043 06d7 24        		.byte	36
 3044 06d8 00        		.byte	0
 3045 06d9 00        		.byte	0
 3046 06da 00        		.byte	0
 3047 06db 00        		.byte	0
 3048 06dc 00        		.byte	0
 3049 06dd 00        		.byte	0
 3050 06de 00        		.byte	0
 3051 06df 00        		.byte	0
 3052 06e0 00        		.byte	0
 3053 06e1 00        		.byte	0
 3054 06e2 24        		.byte	36
 3055 06e3 92        		.byte	-110
 3056 06e4 FF        		.byte	-1
 3057 06e5 FF        		.byte	-1
 3058 06e6 FF        		.byte	-1
 3059 06e7 FF        		.byte	-1
 3060 06e8 FF        		.byte	-1
 3061 06e9 FF        		.byte	-1
 3062 06ea FF        		.byte	-1
 3063 06eb FF        		.byte	-1
 3064 06ec FF        		.byte	-1
 3065 06ed FF        		.byte	-1
 3066 06ee FF        		.byte	-1
 3067 06ef FF        		.byte	-1
 3068 06f0 FF        		.byte	-1
 3069 06f1 FF        		.byte	-1
 3070 06f2 FF        		.byte	-1
 3071 06f3 FF        		.byte	-1
 3072 06f4 FF        		.byte	-1
 3073 06f5 FF        		.byte	-1
 3074 06f6 B6        		.byte	-74
 3075 06f7 6D        		.byte	109
 3076 06f8 49        		.byte	73
 3077 06f9 24        		.byte	36
 3078 06fa 00        		.byte	0
 3079 06fb 20        		.byte	32
 3080 06fc 24        		.byte	36
 3081 06fd 49        		.byte	73
 3082 06fe 92        		.byte	-110
 3083 06ff DB        		.byte	-37
 3084 0700 FF        		.byte	-1
 3085 0701 FF        		.byte	-1
 3086 0702 FF        		.byte	-1
 3087 0703 FF        		.byte	-1
 3088 0704 FF        		.byte	-1
 3089 0705 FF        		.byte	-1
 3090 0706 FF        		.byte	-1
 3091 0707 FF        		.byte	-1
 3092 0708 FF        		.byte	-1
 3093 0709 FF        		.byte	-1
 3098               		.text
 3100               	.Letext0:
 3101               		.ident	"GCC: (GNU) 4.8.1"
 3102               	.global __do_copy_data
 3103               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//cctTiPtx.s:2      *ABS*:0000003e __SP_H__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//cctTiPtx.s:3      *ABS*:0000003d __SP_L__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//cctTiPtx.s:4      *ABS*:0000003f __SREG__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//cctTiPtx.s:5      *ABS*:0000003b __RAMPZ__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//cctTiPtx.s:6      *ABS*:00000000 __tmp_reg__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//cctTiPtx.s:7      *ABS*:00000001 __zero_reg__
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//cctTiPtx.s:126    .text:00000000 translateBuffer
                            *COM*:0000070e _display
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//cctTiPtx.s:192    .text:0000003e TLC5940_Init
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//cctTiPtx.s:254    .text:0000006c adc_init
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//cctTiPtx.s:276    .text:0000007a __vector_21
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//cctTiPtx.s:1276   .data:00000000 rowIndex.2141
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//cctTiPtx.s:1270   .bss:00000011 xlatNeedsPulse.2143
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//cctTiPtx.s:756    .text:000002be writeNext
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//cctTiPtx.s:1268   .bss:00000010 index.2160
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//cctTiPtx.s:858    .text.startup:00000000 main
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//cctTiPtx.s:1289   .data:00000002 catImage
                             .bss:0000000f debounceCount.2177
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//cctTiPtx.s:1282   .bss:00000000 mat_sensors
/var/folders/8r/0fdlnc995dl_vxqd6srx06ch0000gn/T//cctTiPtx.s:2193   .data:00000386 spashImage

UNDEFINED SYMBOLS
display_clear
display_write
display_fillZone
__divsf3
__subsf3
__gesf2
__floatunsisf
__addsf3
display_init
display_writeImage
sprintf
__do_copy_data
__do_clear_bss
